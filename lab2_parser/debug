Starting parse
Entering state 0
Reading a token: Next token is token TOKEN_PROGRAM ()
Shifting token TOKEN_PROGRAM ()
Entering state 1
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 3
Reading a token: Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 5
Reading a token: Next token is token TOKEN_TYPE ()
Shifting token TOKEN_TYPE ()
Entering state 6
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 9
Reading a token: Next token is token TOKEN_EQ ()
Shifting token TOKEN_EQ ()
Entering state 15
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 30
Reducing stack by rule 46 (line 204):
   $1 = token TOKEN_ID ()
type_ID
-> $$ = nterm type ()
Stack now 0 1 3 5 6 9 15
Entering state 31
Reading a token: Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 45
Reducing stack by rule 19 (line 130):
   $1 = token TOKEN_ID ()
   $2 = token TOKEN_EQ ()
   $3 = nterm type ()
   $4 = token TOKEN_SEMICOLON ()
type_definition
-> $$ = nterm typeDefinition ()
Stack now 0 1 3 5 6
Entering state 11
Reducing stack by rule 10 (line 116):
   $1 = nterm typeDefinition ()
type_definition
-> $$ = nterm typeDefinitionList ()
Stack now 0 1 3 5 6
Entering state 10
Reading a token: Next token is token TOKEN_VAR ()
Reducing stack by rule 8 (line 113):
   $1 = token TOKEN_TYPE ()
   $2 = nterm typeDefinitionList ()
-> $$ = nterm typeDefinitions ()
Stack now 0 1 3 5
Entering state 8
Reducing stack by rule 2 (line 109):
   $1 = nterm typeDefinitions ()
-> $$ = nterm groupTypeDefinitions ()
Stack now 0 1 3 5
Entering state 7
Next token is token TOKEN_VAR ()
Shifting token TOKEN_VAR ()
Entering state 12
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 17
Reducing stack by rule 93 (line 298):
   $1 = token TOKEN_ID ()
identifier_list
-> $$ = nterm identifierList ()
Stack now 0 1 3 5 7 12
Entering state 20
Reading a token: Next token is token TOKEN_COLON ()
Shifting token TOKEN_COLON ()
Entering state 34
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 30
Reducing stack by rule 46 (line 204):
   $1 = token TOKEN_ID ()
type_ID
-> $$ = nterm type ()
Stack now 0 1 3 5 7 12 20 34
Entering state 47
Reading a token: Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 72
Reducing stack by rule 20 (line 134):
   $1 = nterm identifierList ()
   $2 = token TOKEN_COLON ()
   $3 = nterm type ()
   $4 = token TOKEN_SEMICOLON ()
variable_declaration
-> $$ = nterm variableDeclaration ()
Stack now 0 1 3 5 7 12
Entering state 19
Reducing stack by rule 13 (line 121):
   $1 = nterm variableDeclaration ()
variable_declaration
-> $$ = nterm variableDeclarationList ()
Stack now 0 1 3 5 7 12
Entering state 18
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 17
Reducing stack by rule 93 (line 298):
   $1 = token TOKEN_ID ()
identifier_list
-> $$ = nterm identifierList ()
Stack now 0 1 3 5 7 12 18
Entering state 20
Reading a token: Next token is token TOKEN_COLON ()
Shifting token TOKEN_COLON ()
Entering state 34
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 30
Reducing stack by rule 46 (line 204):
   $1 = token TOKEN_ID ()
type_ID
-> $$ = nterm type ()
Stack now 0 1 3 5 7 12 18 20 34
Entering state 47
Reading a token: Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 72
Reducing stack by rule 20 (line 134):
   $1 = nterm identifierList ()
   $2 = token TOKEN_COLON ()
   $3 = nterm type ()
   $4 = token TOKEN_SEMICOLON ()
variable_declaration
-> $$ = nterm variableDeclaration ()
Stack now 0 1 3 5 7 12 18
Entering state 32
Reducing stack by rule 12 (line 120):
   $1 = nterm variableDeclarationList ()
   $2 = nterm variableDeclaration ()
variable_declaration_more
-> $$ = nterm variableDeclarationList ()
Stack now 0 1 3 5 7 12
Entering state 18
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 17
Reducing stack by rule 93 (line 298):
   $1 = token TOKEN_ID ()
identifier_list
-> $$ = nterm identifierList ()
Stack now 0 1 3 5 7 12 18
Entering state 20
Reading a token: Next token is token TOKEN_COLON ()
Shifting token TOKEN_COLON ()
Entering state 34
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 30
Reducing stack by rule 46 (line 204):
   $1 = token TOKEN_ID ()
type_ID
-> $$ = nterm type ()
Stack now 0 1 3 5 7 12 18 20 34
Entering state 47
Reading a token: Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 72
Reducing stack by rule 20 (line 134):
   $1 = nterm identifierList ()
   $2 = token TOKEN_COLON ()
   $3 = nterm type ()
   $4 = token TOKEN_SEMICOLON ()
variable_declaration
-> $$ = nterm variableDeclaration ()
Stack now 0 1 3 5 7 12 18
Entering state 32
Reducing stack by rule 12 (line 120):
   $1 = nterm variableDeclarationList ()
   $2 = nterm variableDeclaration ()
variable_declaration_more
-> $$ = nterm variableDeclarationList ()
Stack now 0 1 3 5 7 12
Entering state 18
Reading a token: Next token is token TOKEN_FUNCTION ()
Reducing stack by rule 11 (line 118):
   $1 = token TOKEN_VAR ()
   $2 = nterm variableDeclarationList ()
-> $$ = nterm variableDeclarations ()
Stack now 0 1 3 5 7
Entering state 14
Reducing stack by rule 4 (line 110):
   $1 = nterm variableDeclarations ()
-> $$ = nterm groupVariableDeclarations ()
Stack now 0 1 3 5 7
Entering state 13
Next token is token TOKEN_FUNCTION ()
Shifting token TOKEN_FUNCTION ()
Entering state 21
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 35
Reading a token: Next token is token TOKEN_LPAR ()
Shifting token TOKEN_LPAR ()
Entering state 48
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 17
Reducing stack by rule 93 (line 298):
   $1 = token TOKEN_ID ()
identifier_list
-> $$ = nterm identifierList ()
Stack now 0 1 3 5 7 13 21 35 48
Entering state 75
Reading a token: Next token is token TOKEN_COLON ()
Shifting token TOKEN_COLON ()
Entering state 104
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 30
Reducing stack by rule 46 (line 204):
   $1 = token TOKEN_ID ()
type_ID
-> $$ = nterm type ()
Stack now 0 1 3 5 7 13 21 35 48 75 104
Entering state 141
Reducing stack by rule 28 (line 165):
   $1 = nterm identifierList ()
   $2 = token TOKEN_COLON ()
   $3 = nterm type ()
identifier_lists
-> $$ = nterm formalParamSeq ()
Stack now 0 1 3 5 7 13 21 35 48
Entering state 74
Reading a token: Next token is token TOKEN_RPAR ()
Reducing stack by rule 25 (line 155):
   $1 = nterm formalParamSeq ()
formal_parameter_list
-> $$ = nterm formalParameterList ()
Stack now 0 1 3 5 7 13 21 35 48
Entering state 73
Next token is token TOKEN_RPAR ()
Shifting token TOKEN_RPAR ()
Entering state 102
Reading a token: Next token is token TOKEN_COLON ()
Shifting token TOKEN_COLON ()
Entering state 139
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 157
Reducing stack by rule 49 (line 210):
   $1 = token TOKEN_ID ()
result_type
-> $$ = nterm resultType ()
Stack now 0 1 3 5 7 13 21 35 48 73 102 139
Entering state 158
Reading a token: Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 170
Reading a token: Next token is token TOKEN_FORWARD ()
Shifting token TOKEN_FORWARD ()
Entering state 160
Reducing stack by rule 24 (line 153):
   $1 = token TOKEN_FORWARD ()
-> $$ = nterm groupBlockForward ()
Stack now 0 1 3 5 7 13 21 35 48 73 102 139 158 170
Entering state 177
Reading a token: Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 179
Reducing stack by rule 22 (line 147):
   $1 = token TOKEN_FUNCTION ()
   $2 = token TOKEN_ID ()
   $3 = token TOKEN_LPAR ()
   $4 = nterm formalParameterList ()
   $5 = token TOKEN_RPAR ()
   $6 = token TOKEN_COLON ()
   $7 = nterm resultType ()
   $8 = token TOKEN_SEMICOLON ()
   $9 = nterm groupBlockForward ()
   $10 = token TOKEN_SEMICOLON ()
function_declaration
-> $$ = nterm functionDeclaration ()
Stack now 0 1 3 5 7 13
Entering state 27
Reducing stack by rule 18 (line 128):
   $1 = nterm functionDeclaration ()
sub_program_declarations
-> $$ = nterm subprogramDeclarationList ()
Stack now 0 1 3 5 7 13
Entering state 25
Reading a token: Next token is token TOKEN_PROCEDURE ()
Shifting token TOKEN_PROCEDURE ()
Entering state 22
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 36
Reading a token: Next token is token TOKEN_LPAR ()
Shifting token TOKEN_LPAR ()
Entering state 49
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 17
Reducing stack by rule 93 (line 298):
   $1 = token TOKEN_ID ()
identifier_list
-> $$ = nterm identifierList ()
Stack now 0 1 3 5 7 13 25 22 36 49
Entering state 75
Reading a token: Next token is token TOKEN_COLON ()
Shifting token TOKEN_COLON ()
Entering state 104
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 30
Reducing stack by rule 46 (line 204):
   $1 = token TOKEN_ID ()
type_ID
-> $$ = nterm type ()
Stack now 0 1 3 5 7 13 25 22 36 49 75 104
Entering state 141
Reducing stack by rule 28 (line 165):
   $1 = nterm identifierList ()
   $2 = token TOKEN_COLON ()
   $3 = nterm type ()
identifier_lists
-> $$ = nterm formalParamSeq ()
Stack now 0 1 3 5 7 13 25 22 36 49
Entering state 74
Reading a token: Next token is token TOKEN_RPAR ()
Reducing stack by rule 25 (line 155):
   $1 = nterm formalParamSeq ()
formal_parameter_list
-> $$ = nterm formalParameterList ()
Stack now 0 1 3 5 7 13 25 22 36 49
Entering state 76
Next token is token TOKEN_RPAR ()
Shifting token TOKEN_RPAR ()
Entering state 105
Reading a token: Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 142
Reading a token: Next token is token TOKEN_FORWARD ()
Shifting token TOKEN_FORWARD ()
Entering state 160
Reducing stack by rule 24 (line 153):
   $1 = token TOKEN_FORWARD ()
-> $$ = nterm groupBlockForward ()
Stack now 0 1 3 5 7 13 25 22 36 49 76 105 142
Entering state 162
Reading a token: Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 173
Reducing stack by rule 21 (line 142):
   $1 = token TOKEN_PROCEDURE ()
   $2 = token TOKEN_ID ()
   $3 = token TOKEN_LPAR ()
   $4 = nterm formalParameterList ()
   $5 = token TOKEN_RPAR ()
   $6 = token TOKEN_SEMICOLON ()
   $7 = nterm groupBlockForward ()
   $8 = token TOKEN_SEMICOLON ()
procedure_declaration
-> $$ = nterm procedureDeclaration ()
Stack now 0 1 3 5 7 13 25
Entering state 39
Reducing stack by rule 15 (line 125):
   $1 = nterm subprogramDeclarationList ()
   $2 = nterm procedureDeclaration ()
sub_program_declarations_more
-> $$ = nterm subprogramDeclarationList ()
Stack now 0 1 3 5 7 13
Entering state 25
Reading a token: Next token is token TOKEN_BEGIN ()
Reducing stack by rule 14 (line 123):
   $1 = nterm subprogramDeclarationList ()
-> $$ = nterm subprogramDeclarations ()
Stack now 0 1 3 5 7 13
Entering state 24
Reducing stack by rule 6 (line 111):
   $1 = nterm subprogramDeclarations ()
-> $$ = nterm groupSubprogramDeclarations ()
Stack now 0 1 3 5 7 13
Entering state 23
Next token is token TOKEN_BEGIN ()
Shifting token TOKEN_BEGIN ()
Entering state 37
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 53
Reading a token: Next token is token TOKEN_ASSIGN ()
Reducing stack by rule 87 (line 274):
component_selection_empty
-> $$ = nterm componentSelection ()
Stack now 0 1 3 5 7 13 23 37 53
Entering state 94
Reducing stack by rule 84 (line 266):
   $1 = token TOKEN_ID ()
   $2 = nterm componentSelection ()
variable
-> $$ = nterm variable ()
Stack now 0 1 3 5 7 13 23 37
Entering state 62
Next token is token TOKEN_ASSIGN ()
Shifting token TOKEN_ASSIGN ()
Entering state 97
Reading a token: Next token is token TOKEN_INT ()
Shifting token TOKEN_INT ()
Entering state 81
Reducing stack by rule 77 (line 251):
   $1 = token TOKEN_INT ()
factor
-> $$ = nterm factor ()
Stack now 0 1 3 5 7 13 23 37 62 97
Entering state 86
Reducing stack by rule 72 (line 244):
   $1 = nterm factor ()
term
-> $$ = nterm term ()
Stack now 0 1 3 5 7 13 23 37 62 97
Entering state 85
Reading a token: Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 66 (line 236):
   $1 = nterm term ()
simple_expression
-> $$ = nterm simpleExpression ()
Stack now 0 1 3 5 7 13 23 37 62 97
Entering state 84
Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 58 (line 226):
-> $$ = nterm groupRelOpSimExpr ()
Stack now 0 1 3 5 7 13 23 37 62 97 84
Entering state 120
Reducing stack by rule 56 (line 224):
   $1 = nterm simpleExpression ()
   $2 = nterm groupRelOpSimExpr ()
expression
-> $$ = nterm expression ()
Stack now 0 1 3 5 7 13 23 37 62 97
Entering state 136
Reducing stack by rule 39 (line 188):
   $1 = nterm variable ()
   $2 = token TOKEN_ASSIGN ()
   $3 = nterm expression ()
assignment_statement
-> $$ = nterm assignmentStatement ()
Stack now 0 1 3 5 7 13 23 37
Entering state 59
Reducing stack by rule 36 (line 184):
   $1 = nterm assignmentStatement ()
simple_statement
-> $$ = nterm simpleStatement ()
Stack now 0 1 3 5 7 13 23 37
Entering state 58
Reducing stack by rule 34 (line 182):
   $1 = nterm simpleStatement ()
-> $$ = nterm groupSimStruStatement ()
Stack now 0 1 3 5 7 13 23 37
Entering state 57
Reducing stack by rule 33 (line 180):
   $1 = nterm groupSimStruStatement ()
statement
-> $$ = nterm statement ()
Stack now 0 1 3 5 7 13 23 37
Entering state 56
Reducing stack by rule 32 (line 178):
   $1 = nterm statement ()
statement_sequence
-> $$ = nterm statementSequence ()
Stack now 0 1 3 5 7 13 23 37
Entering state 55
Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 96
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 53
Reading a token: Next token is token TOKEN_ASSIGN ()
Reducing stack by rule 87 (line 274):
component_selection_empty
-> $$ = nterm componentSelection ()
Stack now 0 1 3 5 7 13 23 37 55 96 53
Entering state 94
Reducing stack by rule 84 (line 266):
   $1 = token TOKEN_ID ()
   $2 = nterm componentSelection ()
variable
-> $$ = nterm variable ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 62
Next token is token TOKEN_ASSIGN ()
Shifting token TOKEN_ASSIGN ()
Entering state 97
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 80
Reading a token: Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 87 (line 274):
component_selection_empty
-> $$ = nterm componentSelection ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97 80
Entering state 94
Reducing stack by rule 84 (line 266):
   $1 = token TOKEN_ID ()
   $2 = nterm componentSelection ()
variable
-> $$ = nterm variable ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 88
Reducing stack by rule 79 (line 253):
   $1 = nterm variable ()
factor
-> $$ = nterm factor ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 86
Reducing stack by rule 72 (line 244):
   $1 = nterm factor ()
term
-> $$ = nterm term ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 85
Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 66 (line 236):
   $1 = nterm term ()
simple_expression
-> $$ = nterm simpleExpression ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 84
Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 58 (line 226):
-> $$ = nterm groupRelOpSimExpr ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97 84
Entering state 120
Reducing stack by rule 56 (line 224):
   $1 = nterm simpleExpression ()
   $2 = nterm groupRelOpSimExpr ()
expression
-> $$ = nterm expression ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 136
Reducing stack by rule 39 (line 188):
   $1 = nterm variable ()
   $2 = token TOKEN_ASSIGN ()
   $3 = nterm expression ()
assignment_statement
-> $$ = nterm assignmentStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 59
Reducing stack by rule 36 (line 184):
   $1 = nterm assignmentStatement ()
simple_statement
-> $$ = nterm simpleStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 58
Reducing stack by rule 34 (line 182):
   $1 = nterm simpleStatement ()
-> $$ = nterm groupSimStruStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 57
Reducing stack by rule 33 (line 180):
   $1 = nterm groupSimStruStatement ()
statement
-> $$ = nterm statement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 135
Reducing stack by rule 31 (line 177):
   $1 = nterm statementSequence ()
   $2 = token TOKEN_SEMICOLON ()
   $3 = nterm statement ()
statement_sequence_more
-> $$ = nterm statementSequence ()
Stack now 0 1 3 5 7 13 23 37
Entering state 55
Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 96
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 53
Reading a token: Next token is token TOKEN_ASSIGN ()
Reducing stack by rule 87 (line 274):
component_selection_empty
-> $$ = nterm componentSelection ()
Stack now 0 1 3 5 7 13 23 37 55 96 53
Entering state 94
Reducing stack by rule 84 (line 266):
   $1 = token TOKEN_ID ()
   $2 = nterm componentSelection ()
variable
-> $$ = nterm variable ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 62
Next token is token TOKEN_ASSIGN ()
Shifting token TOKEN_ASSIGN ()
Entering state 97
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 80
Reading a token: Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 87 (line 274):
component_selection_empty
-> $$ = nterm componentSelection ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97 80
Entering state 94
Reducing stack by rule 84 (line 266):
   $1 = token TOKEN_ID ()
   $2 = nterm componentSelection ()
variable
-> $$ = nterm variable ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 88
Reducing stack by rule 79 (line 253):
   $1 = nterm variable ()
factor
-> $$ = nterm factor ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 86
Reducing stack by rule 72 (line 244):
   $1 = nterm factor ()
term
-> $$ = nterm term ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 85
Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 66 (line 236):
   $1 = nterm term ()
simple_expression
-> $$ = nterm simpleExpression ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 84
Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 58 (line 226):
-> $$ = nterm groupRelOpSimExpr ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97 84
Entering state 120
Reducing stack by rule 56 (line 224):
   $1 = nterm simpleExpression ()
   $2 = nterm groupRelOpSimExpr ()
expression
-> $$ = nterm expression ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 136
Reducing stack by rule 39 (line 188):
   $1 = nterm variable ()
   $2 = token TOKEN_ASSIGN ()
   $3 = nterm expression ()
assignment_statement
-> $$ = nterm assignmentStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 59
Reducing stack by rule 36 (line 184):
   $1 = nterm assignmentStatement ()
simple_statement
-> $$ = nterm simpleStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 58
Reducing stack by rule 34 (line 182):
   $1 = nterm simpleStatement ()
-> $$ = nterm groupSimStruStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 57
Reducing stack by rule 33 (line 180):
   $1 = nterm groupSimStruStatement ()
statement
-> $$ = nterm statement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 135
Reducing stack by rule 31 (line 177):
   $1 = nterm statementSequence ()
   $2 = token TOKEN_SEMICOLON ()
   $3 = nterm statement ()
statement_sequence_more
-> $$ = nterm statementSequence ()
Stack now 0 1 3 5 7 13 23 37
Entering state 55
Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 96
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 53
Reading a token: Next token is token TOKEN_ASSIGN ()
Reducing stack by rule 87 (line 274):
component_selection_empty
-> $$ = nterm componentSelection ()
Stack now 0 1 3 5 7 13 23 37 55 96 53
Entering state 94
Reducing stack by rule 84 (line 266):
   $1 = token TOKEN_ID ()
   $2 = nterm componentSelection ()
variable
-> $$ = nterm variable ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 62
Next token is token TOKEN_ASSIGN ()
Shifting token TOKEN_ASSIGN ()
Entering state 97
Reading a token: Next token is token TOKEN_INT ()
Shifting token TOKEN_INT ()
Entering state 81
Reducing stack by rule 77 (line 251):
   $1 = token TOKEN_INT ()
factor
-> $$ = nterm factor ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 86
Reducing stack by rule 72 (line 244):
   $1 = nterm factor ()
term
-> $$ = nterm term ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 85
Reading a token: Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 66 (line 236):
   $1 = nterm term ()
simple_expression
-> $$ = nterm simpleExpression ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 84
Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 58 (line 226):
-> $$ = nterm groupRelOpSimExpr ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97 84
Entering state 120
Reducing stack by rule 56 (line 224):
   $1 = nterm simpleExpression ()
   $2 = nterm groupRelOpSimExpr ()
expression
-> $$ = nterm expression ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 136
Reducing stack by rule 39 (line 188):
   $1 = nterm variable ()
   $2 = token TOKEN_ASSIGN ()
   $3 = nterm expression ()
assignment_statement
-> $$ = nterm assignmentStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 59
Reducing stack by rule 36 (line 184):
   $1 = nterm assignmentStatement ()
simple_statement
-> $$ = nterm simpleStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 58
Reducing stack by rule 34 (line 182):
   $1 = nterm simpleStatement ()
-> $$ = nterm groupSimStruStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 57
Reducing stack by rule 33 (line 180):
   $1 = nterm groupSimStruStatement ()
statement
-> $$ = nterm statement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 135
Reducing stack by rule 31 (line 177):
   $1 = nterm statementSequence ()
   $2 = token TOKEN_SEMICOLON ()
   $3 = nterm statement ()
statement_sequence_more
-> $$ = nterm statementSequence ()
Stack now 0 1 3 5 7 13 23 37
Entering state 55
Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 96
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 53
Reading a token: Next token is token TOKEN_ASSIGN ()
Reducing stack by rule 87 (line 274):
component_selection_empty
-> $$ = nterm componentSelection ()
Stack now 0 1 3 5 7 13 23 37 55 96 53
Entering state 94
Reducing stack by rule 84 (line 266):
   $1 = token TOKEN_ID ()
   $2 = nterm componentSelection ()
variable
-> $$ = nterm variable ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 62
Next token is token TOKEN_ASSIGN ()
Shifting token TOKEN_ASSIGN ()
Entering state 97
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 80
Reading a token: Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 87 (line 274):
component_selection_empty
-> $$ = nterm componentSelection ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97 80
Entering state 94
Reducing stack by rule 84 (line 266):
   $1 = token TOKEN_ID ()
   $2 = nterm componentSelection ()
variable
-> $$ = nterm variable ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 88
Reducing stack by rule 79 (line 253):
   $1 = nterm variable ()
factor
-> $$ = nterm factor ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 86
Reducing stack by rule 72 (line 244):
   $1 = nterm factor ()
term
-> $$ = nterm term ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 85
Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 66 (line 236):
   $1 = nterm term ()
simple_expression
-> $$ = nterm simpleExpression ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 84
Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 58 (line 226):
-> $$ = nterm groupRelOpSimExpr ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97 84
Entering state 120
Reducing stack by rule 56 (line 224):
   $1 = nterm simpleExpression ()
   $2 = nterm groupRelOpSimExpr ()
expression
-> $$ = nterm expression ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 136
Reducing stack by rule 39 (line 188):
   $1 = nterm variable ()
   $2 = token TOKEN_ASSIGN ()
   $3 = nterm expression ()
assignment_statement
-> $$ = nterm assignmentStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 59
Reducing stack by rule 36 (line 184):
   $1 = nterm assignmentStatement ()
simple_statement
-> $$ = nterm simpleStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 58
Reducing stack by rule 34 (line 182):
   $1 = nterm simpleStatement ()
-> $$ = nterm groupSimStruStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 57
Reducing stack by rule 33 (line 180):
   $1 = nterm groupSimStruStatement ()
statement
-> $$ = nterm statement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 135
Reducing stack by rule 31 (line 177):
   $1 = nterm statementSequence ()
   $2 = token TOKEN_SEMICOLON ()
   $3 = nterm statement ()
statement_sequence_more
-> $$ = nterm statementSequence ()
Stack now 0 1 3 5 7 13 23 37
Entering state 55
Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 96
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 53
Reading a token: Next token is token TOKEN_ASSIGN ()
Reducing stack by rule 87 (line 274):
component_selection_empty
-> $$ = nterm componentSelection ()
Stack now 0 1 3 5 7 13 23 37 55 96 53
Entering state 94
Reducing stack by rule 84 (line 266):
   $1 = token TOKEN_ID ()
   $2 = nterm componentSelection ()
variable
-> $$ = nterm variable ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 62
Next token is token TOKEN_ASSIGN ()
Shifting token TOKEN_ASSIGN ()
Entering state 97
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 80
Reading a token: Next token is token TOKEN_AND ()
Reducing stack by rule 87 (line 274):
component_selection_empty
-> $$ = nterm componentSelection ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97 80
Entering state 94
Reducing stack by rule 84 (line 266):
   $1 = token TOKEN_ID ()
   $2 = nterm componentSelection ()
variable
-> $$ = nterm variable ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 88
Reducing stack by rule 79 (line 253):
   $1 = nterm variable ()
factor
-> $$ = nterm factor ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 86
Reducing stack by rule 72 (line 244):
   $1 = nterm factor ()
term
-> $$ = nterm term ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 85
Next token is token TOKEN_AND ()
Shifting token TOKEN_AND ()
Entering state 123
Reducing stack by rule 76 (line 249):
   $1 = token TOKEN_AND ()
mulop
-> $$ = nterm mulOp ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97 85
Entering state 127
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 80
Reading a token: Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 87 (line 274):
component_selection_empty
-> $$ = nterm componentSelection ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97 85 127 80
Entering state 94
Reducing stack by rule 84 (line 266):
   $1 = token TOKEN_ID ()
   $2 = nterm componentSelection ()
variable
-> $$ = nterm variable ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97 85 127
Entering state 88
Reducing stack by rule 79 (line 253):
   $1 = nterm variable ()
factor
-> $$ = nterm factor ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97 85 127
Entering state 149
Reducing stack by rule 71 (line 243):
   $1 = nterm term ()
   $2 = nterm mulOp ()
   $3 = nterm factor ()
term_more
-> $$ = nterm term ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 85
Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 66 (line 236):
   $1 = nterm term ()
simple_expression
-> $$ = nterm simpleExpression ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 84
Next token is token TOKEN_SEMICOLON ()
Reducing stack by rule 58 (line 226):
-> $$ = nterm groupRelOpSimExpr ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97 84
Entering state 120
Reducing stack by rule 56 (line 224):
   $1 = nterm simpleExpression ()
   $2 = nterm groupRelOpSimExpr ()
expression
-> $$ = nterm expression ()
Stack now 0 1 3 5 7 13 23 37 55 96 62 97
Entering state 136
Reducing stack by rule 39 (line 188):
   $1 = nterm variable ()
   $2 = token TOKEN_ASSIGN ()
   $3 = nterm expression ()
assignment_statement
-> $$ = nterm assignmentStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 59
Reducing stack by rule 36 (line 184):
   $1 = nterm assignmentStatement ()
simple_statement
-> $$ = nterm simpleStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 58
Reducing stack by rule 34 (line 182):
   $1 = nterm simpleStatement ()
-> $$ = nterm groupSimStruStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 57
Reducing stack by rule 33 (line 180):
   $1 = nterm groupSimStruStatement ()
statement
-> $$ = nterm statement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 135
Reducing stack by rule 31 (line 177):
   $1 = nterm statementSequence ()
   $2 = token TOKEN_SEMICOLON ()
   $3 = nterm statement ()
statement_sequence_more
-> $$ = nterm statementSequence ()
Stack now 0 1 3 5 7 13 23 37
Entering state 55
Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 96
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 53
Reading a token: Next token is token TOKEN_LPAR ()
Shifting token TOKEN_LPAR ()
Entering state 92
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 80
Reading a token: Next token is token TOKEN_RPAR ()
Reducing stack by rule 87 (line 274):
component_selection_empty
-> $$ = nterm componentSelection ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92 80
Entering state 94
Reducing stack by rule 84 (line 266):
   $1 = token TOKEN_ID ()
   $2 = nterm componentSelection ()
variable
-> $$ = nterm variable ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92
Entering state 88
Reducing stack by rule 79 (line 253):
   $1 = nterm variable ()
factor
-> $$ = nterm factor ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92
Entering state 86
Reducing stack by rule 72 (line 244):
   $1 = nterm factor ()
term
-> $$ = nterm term ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92
Entering state 85
Next token is token TOKEN_RPAR ()
Reducing stack by rule 66 (line 236):
   $1 = nterm term ()
simple_expression
-> $$ = nterm simpleExpression ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92
Entering state 84
Next token is token TOKEN_RPAR ()
Reducing stack by rule 58 (line 226):
-> $$ = nterm groupRelOpSimExpr ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92 84
Entering state 120
Reducing stack by rule 56 (line 224):
   $1 = nterm simpleExpression ()
   $2 = nterm groupRelOpSimExpr ()
expression
-> $$ = nterm expression ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92
Entering state 131
Reducing stack by rule 91 (line 281):
   $1 = nterm expression ()
expressions
-> $$ = nterm expressionList ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92
Entering state 133
Next token is token TOKEN_RPAR ()
Reducing stack by rule 88 (line 276):
   $1 = nterm expressionList ()
actual_parameter_list
-> $$ = nterm actualParameterList ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92
Entering state 132
Next token is token TOKEN_RPAR ()
Shifting token TOKEN_RPAR ()
Entering state 152
Reducing stack by rule 40 (line 190):
   $1 = token TOKEN_ID ()
   $2 = token TOKEN_LPAR ()
   $3 = nterm actualParameterList ()
   $4 = token TOKEN_RPAR ()
procedure_statement
-> $$ = nterm procedureStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 60
Reducing stack by rule 37 (line 185):
   $1 = nterm procedureStatement ()
simple_statement
-> $$ = nterm simpleStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 58
Reducing stack by rule 34 (line 182):
   $1 = nterm simpleStatement ()
-> $$ = nterm groupSimStruStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 57
Reducing stack by rule 33 (line 180):
   $1 = nterm groupSimStruStatement ()
statement
-> $$ = nterm statement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 135
Reducing stack by rule 31 (line 177):
   $1 = nterm statementSequence ()
   $2 = token TOKEN_SEMICOLON ()
   $3 = nterm statement ()
statement_sequence_more
-> $$ = nterm statementSequence ()
Stack now 0 1 3 5 7 13 23 37
Entering state 55
Reading a token: Next token is token TOKEN_SEMICOLON ()
Shifting token TOKEN_SEMICOLON ()
Entering state 96
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 53
Reading a token: Next token is token TOKEN_LPAR ()
Shifting token TOKEN_LPAR ()
Entering state 92
Reading a token: Next token is token TOKEN_ID ()
Shifting token TOKEN_ID ()
Entering state 80
Reading a token: Next token is token TOKEN_RPAR ()
Reducing stack by rule 87 (line 274):
component_selection_empty
-> $$ = nterm componentSelection ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92 80
Entering state 94
Reducing stack by rule 84 (line 266):
   $1 = token TOKEN_ID ()
   $2 = nterm componentSelection ()
variable
-> $$ = nterm variable ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92
Entering state 88
Reducing stack by rule 79 (line 253):
   $1 = nterm variable ()
factor
-> $$ = nterm factor ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92
Entering state 86
Reducing stack by rule 72 (line 244):
   $1 = nterm factor ()
term
-> $$ = nterm term ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92
Entering state 85
Next token is token TOKEN_RPAR ()
Reducing stack by rule 66 (line 236):
   $1 = nterm term ()
simple_expression
-> $$ = nterm simpleExpression ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92
Entering state 84
Next token is token TOKEN_RPAR ()
Reducing stack by rule 58 (line 226):
-> $$ = nterm groupRelOpSimExpr ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92 84
Entering state 120
Reducing stack by rule 56 (line 224):
   $1 = nterm simpleExpression ()
   $2 = nterm groupRelOpSimExpr ()
expression
-> $$ = nterm expression ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92
Entering state 131
Reducing stack by rule 91 (line 281):
   $1 = nterm expression ()
expressions
-> $$ = nterm expressionList ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92
Entering state 133
Next token is token TOKEN_RPAR ()
Reducing stack by rule 88 (line 276):
   $1 = nterm expressionList ()
actual_parameter_list
-> $$ = nterm actualParameterList ()
Stack now 0 1 3 5 7 13 23 37 55 96 53 92
Entering state 132
Next token is token TOKEN_RPAR ()
Shifting token TOKEN_RPAR ()
Entering state 152
Reducing stack by rule 40 (line 190):
   $1 = token TOKEN_ID ()
   $2 = token TOKEN_LPAR ()
   $3 = nterm actualParameterList ()
   $4 = token TOKEN_RPAR ()
procedure_statement
-> $$ = nterm procedureStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 60
Reducing stack by rule 37 (line 185):
   $1 = nterm procedureStatement ()
simple_statement
-> $$ = nterm simpleStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 58
Reducing stack by rule 34 (line 182):
   $1 = nterm simpleStatement ()
-> $$ = nterm groupSimStruStatement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 57
Reducing stack by rule 33 (line 180):
   $1 = nterm groupSimStruStatement ()
statement
-> $$ = nterm statement ()
Stack now 0 1 3 5 7 13 23 37 55 96
Entering state 135
Reducing stack by rule 31 (line 177):
   $1 = nterm statementSequence ()
   $2 = token TOKEN_SEMICOLON ()
   $3 = nterm statement ()
statement_sequence_more
-> $$ = nterm statementSequence ()
Stack now 0 1 3 5 7 13 23 37
Entering state 55
Reading a token: Next token is token TOKEN_END ()
Shifting token TOKEN_END ()
Entering state 95
Reducing stack by rule 30 (line 175):
   $1 = token TOKEN_BEGIN ()
   $2 = nterm statementSequence ()
   $3 = token TOKEN_END ()
compound_statement
-> $$ = nterm compoundStatement ()
Stack now 0 1 3 5 7 13 23
Entering state 38
Reading a token: Next token is token TOKEN_DOT ()
Shifting token TOKEN_DOT ()
Entering state 63
Reducing stack by rule 1 (line 103):
   $1 = token TOKEN_PROGRAM ()
   $2 = token TOKEN_ID ()
   $3 = token TOKEN_SEMICOLON ()
   $4 = nterm groupTypeDefinitions ()
   $5 = nterm groupVariableDeclarations ()
   $6 = nterm groupSubprogramDeclarations ()
   $7 = nterm compoundStatement ()
   $8 = token TOKEN_DOT ()
program
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: Now at end of input.
Shifting token $end ()
Entering state 4
Stack now 0 2 4
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
id:b type:boolean addr:4
id:bar type:0 addr:9
id:boolean type:nil addr:3
id:f type:float addr:6
id:false type:nil addr:10
id:float type:nil addr:5
id:foo type:0 addr:8
id:i type:integer addr:2
id:int type:nil addr:1
id:integer type:nil addr:0
id:lexer_test type:nil addr:12
id:true type:nil addr:11
id:x type:int addr:7
