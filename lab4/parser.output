Terminals unused in grammar

   TOKEN_COMMENT
   TOKEN_DIVIDE
   TOKEN_DECIMAL
   TOKEN_EXPNUM


State 149 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    2 groupTypeDefinitions: typeDefinitions
    3                     | /* empty */

    4 groupVariableDeclarations: variableDeclarations
    5                          | /* empty */

    6 groupSubprogramDeclarations: subprogramDeclarations
    7                            | /* empty */

    8 typeDefinitions: TOKEN_TYPE typeDefinitionList

    9 typeDefinitionList: typeDefinitionList typeDefinition
   10                   | typeDefinition

   11 variableDeclarations: TOKEN_VAR variableDeclarationList

   12 variableDeclarationList: variableDeclarationList variableDeclaration
   13                        | variableDeclaration

   14 subprogramDeclarations: subprogramDeclarationList

   15 subprogramDeclarationList: subprogramDeclarationList procedureDeclaration
   16                          | subprogramDeclarationList functionDeclaration
   17                          | procedureDeclaration
   18                          | functionDeclaration

   19 typeDefinition: TOKEN_ID TOKEN_EQ type TOKEN_SEMICOLON

   20 variableDeclaration: identifierList TOKEN_COLON type TOKEN_SEMICOLON

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

   23 groupBlockForward: block
   24                  | TOKEN_FORWARD

   25 formalParameterList: formalParamSeq
   26                    | /* empty */

   27 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type
   28               | identifierList TOKEN_COLON type

   29 block: groupVariableDeclarations compoundStatement

   30 compoundStatement: TOKEN_BEGIN statementSequence TOKEN_END

   31 statementSequence: statementSequence TOKEN_SEMICOLON statement
   32                  | statement

   33 statement: simpleStatement
   34          | structuredStatement

   35 simpleStatement: assignmentStatement
   36                | procedureStatement
   37                | /* empty */

   38 assignmentStatement: variable TOKEN_ASSIGN expression

   39 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR

   40 structuredStatement: compoundStatement
   41                    | TOKEN_IF expression TOKEN_THEN statement
   42                    | TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE statement
   43                    | TOKEN_WHILE expression TOKEN_DO statement

   44 @1: /* empty */

   45 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression @1 TOKEN_DO statement

   46 type: TOKEN_ID
   47     | TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type
   48     | TOKEN_RECORD fieldList TOKEN_END

   49 resultType: TOKEN_ID

   50 fieldList: fieldListSeq
   51          | /* empty */

   52 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type
   53             | identifierList TOKEN_COLON type

   54 constant: TOKEN_INT
   55         | sign TOKEN_INT

   56 expression: simpleExpression groupRelOpSimExpr

   57 groupRelOpSimExpr: relationalOp simpleExpression
   58                  | /* empty */

   59 relationalOp: TOKEN_LT
   60             | TOKEN_LE
   61             | TOKEN_GT
   62             | TOKEN_GE
   63             | TOKEN_NOTEQ
   64             | TOKEN_EQ

   65 simpleExpression: sign term
   66                 | term
   67                 | simpleExpression addOp term

   68 addOp: TOKEN_PLUS
   69      | TOKEN_MINUS
   70      | TOKEN_OR

   71 term: term mulOp factor
   72     | factor

   73 mulOp: TOKEN_MULTIPLY
   74      | TOKEN_DIV
   75      | TOKEN_MOD
   76      | TOKEN_AND

   77 factor: factorElement
   78       | TOKEN_NOT factorElement

   79 factorElement: TOKEN_INT
   80              | TOKEN_STR
   81              | variable
   82              | functionReference
   83              | TOKEN_LPAR expression TOKEN_RPAR

   84 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR

   85 variable: TOKEN_ID groupComponentSelection

   86 groupComponentSelection: componentSelection
   87                        | /* empty */

   88 componentSelection: TOKEN_DOT TOKEN_ID
   89                   | TOKEN_LBRACKET expression TOKEN_RBRACKET
   90                   | componentSelection TOKEN_DOT TOKEN_ID
   91                   | componentSelection TOKEN_LBRACKET expression TOKEN_RBRACKET

   92 actualParameterList: expressionList
   93                    | /* empty */

   94 expressionList: expressionList TOKEN_COMMAS expression
   95               | expression

   96 identifierList: identifierList TOKEN_COMMAS TOKEN_ID
   97               | TOKEN_ID

   98 sign: TOKEN_PLUS
   99     | TOKEN_MINUS


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_COMMENT (258)
TOKEN_STR (259) 80
TOKEN_AND (260) 76
TOKEN_BEGIN (261) 30
TOKEN_FORWARD (262) 24
TOKEN_DIV (263) 74
TOKEN_DO (264) 43 45
TOKEN_ELSE (265) 42
TOKEN_END (266) 30 48
TOKEN_FOR (267) 45
TOKEN_FUNCTION (268) 22
TOKEN_IF (269) 41 42
TOKEN_ARRAY (270) 47
TOKEN_MOD (271) 75
TOKEN_NOT (272) 78
TOKEN_OF (273) 47
TOKEN_OR (274) 70
TOKEN_PROCEDURE (275) 21
TOKEN_PROGRAM (276) 1
TOKEN_RECORD (277) 48
TOKEN_THEN (278) 41 42
TOKEN_TO (279) 45
TOKEN_TYPE (280) 8
TOKEN_VAR (281) 11
TOKEN_WHILE (282) 43
TOKEN_PLUS (283) 68 98
TOKEN_MINUS (284) 69 99
TOKEN_MULTIPLY (285) 73
TOKEN_DIVIDE (286)
TOKEN_EQ (287) 19 64
TOKEN_LT (288) 59
TOKEN_LE (289) 60
TOKEN_GT (290) 61
TOKEN_GE (291) 62
TOKEN_NOTEQ (292) 63
TOKEN_ID (293) 1 19 21 22 39 45 46 49 84 85 88 90 96 97
TOKEN_INT (294) 54 55 79
TOKEN_DECIMAL (295)
TOKEN_EXPNUM (296)
TOKEN_DOT (297) 1 88 90
TOKEN_COMMAS (298) 94 96
TOKEN_COLON (299) 20 22 27 28 52 53
TOKEN_SEMICOLON (300) 1 19 20 21 22 27 31 52
TOKEN_ASSIGN (301) 38 45
TOKEN_RANGE (302) 47
TOKEN_LPAR (303) 21 22 39 83 84
TOKEN_RPAR (304) 21 22 39 83 84
TOKEN_LBRACKET (305) 47 89 91
TOKEN_RBRACKET (306) 47 89 91
UMINUS (307)
UPLUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
groupTypeDefinitions (56)
    on left: 2 3, on right: 1
groupVariableDeclarations (57)
    on left: 4 5, on right: 1 29
groupSubprogramDeclarations (58)
    on left: 6 7, on right: 1
typeDefinitions (59)
    on left: 8, on right: 2
typeDefinitionList (60)
    on left: 9 10, on right: 8 9
variableDeclarations (61)
    on left: 11, on right: 4
variableDeclarationList (62)
    on left: 12 13, on right: 11 12
subprogramDeclarations (63)
    on left: 14, on right: 6
subprogramDeclarationList (64)
    on left: 15 16 17 18, on right: 14 15 16
typeDefinition (65)
    on left: 19, on right: 9 10
variableDeclaration (66)
    on left: 20, on right: 12 13
procedureDeclaration (67)
    on left: 21, on right: 15 17
functionDeclaration (68)
    on left: 22, on right: 16 18
groupBlockForward (69)
    on left: 23 24, on right: 21 22
formalParameterList (70)
    on left: 25 26, on right: 21 22
formalParamSeq (71)
    on left: 27 28, on right: 25 27
block (72)
    on left: 29, on right: 23
compoundStatement (73)
    on left: 30, on right: 1 29 40
statementSequence (74)
    on left: 31 32, on right: 30 31
statement (75)
    on left: 33 34, on right: 31 32 41 42 43 45
simpleStatement (76)
    on left: 35 36 37, on right: 33
assignmentStatement (77)
    on left: 38, on right: 35
procedureStatement (78)
    on left: 39, on right: 36
structuredStatement (79)
    on left: 40 41 42 43 45, on right: 34
@1 (80)
    on left: 44, on right: 45
type (81)
    on left: 46 47 48, on right: 19 20 27 28 47 52 53
resultType (82)
    on left: 49, on right: 22
fieldList (83)
    on left: 50 51, on right: 48
fieldListSeq (84)
    on left: 52 53, on right: 50 52
constant (85)
    on left: 54 55, on right: 47
expression (86)
    on left: 56, on right: 38 41 42 43 45 83 89 91 94 95
groupRelOpSimExpr (87)
    on left: 57 58, on right: 56
relationalOp (88)
    on left: 59 60 61 62 63 64, on right: 57
simpleExpression (89)
    on left: 65 66 67, on right: 56 57 67
addOp (90)
    on left: 68 69 70, on right: 67
term (91)
    on left: 71 72, on right: 65 66 67 71
mulOp (92)
    on left: 73 74 75 76, on right: 71
factor (93)
    on left: 77 78, on right: 71 72
factorElement (94)
    on left: 79 80 81 82 83, on right: 77 78
functionReference (95)
    on left: 84, on right: 82
variable (96)
    on left: 85, on right: 38 81
groupComponentSelection (97)
    on left: 86 87, on right: 85
componentSelection (98)
    on left: 88 89 90 91, on right: 86 90 91
actualParameterList (99)
    on left: 92 93, on right: 39 84
expressionList (100)
    on left: 94 95, on right: 92 94
identifierList (101)
    on left: 96 97, on right: 20 27 28 52 53 96
sign (102)
    on left: 98 99, on right: 55 65


state 0

    0 $accept: . program $end

    TOKEN_PROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    1 program: TOKEN_PROGRAM . TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_ID  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: TOKEN_PROGRAM TOKEN_ID . TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_SEMICOLON  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON . groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_TYPE  shift, and go to state 6

    $default  reduce using rule 3 (groupTypeDefinitions)

    groupTypeDefinitions  go to state 7
    typeDefinitions       go to state 8


state 6

    8 typeDefinitions: TOKEN_TYPE . typeDefinitionList

    TOKEN_ID  shift, and go to state 9

    typeDefinitionList  go to state 10
    typeDefinition      go to state 11


state 7

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions . groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_VAR  shift, and go to state 12

    $default  reduce using rule 5 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 13
    variableDeclarations       go to state 14


state 8

    2 groupTypeDefinitions: typeDefinitions .

    $default  reduce using rule 2 (groupTypeDefinitions)


state 9

   19 typeDefinition: TOKEN_ID . TOKEN_EQ type TOKEN_SEMICOLON

    TOKEN_EQ  shift, and go to state 15


state 10

    8 typeDefinitions: TOKEN_TYPE typeDefinitionList .
    9 typeDefinitionList: typeDefinitionList . typeDefinition

    TOKEN_ID  shift, and go to state 9

    $default  reduce using rule 8 (typeDefinitions)

    typeDefinition  go to state 16


state 11

   10 typeDefinitionList: typeDefinition .

    $default  reduce using rule 10 (typeDefinitionList)


state 12

   11 variableDeclarations: TOKEN_VAR . variableDeclarationList

    TOKEN_ID  shift, and go to state 17

    variableDeclarationList  go to state 18
    variableDeclaration      go to state 19
    identifierList           go to state 20


state 13

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations . groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_FUNCTION   shift, and go to state 21
    TOKEN_PROCEDURE  shift, and go to state 22

    $default  reduce using rule 7 (groupSubprogramDeclarations)

    groupSubprogramDeclarations  go to state 23
    subprogramDeclarations       go to state 24
    subprogramDeclarationList    go to state 25
    procedureDeclaration         go to state 26
    functionDeclaration          go to state 27


state 14

    4 groupVariableDeclarations: variableDeclarations .

    $default  reduce using rule 4 (groupVariableDeclarations)


state 15

   19 typeDefinition: TOKEN_ID TOKEN_EQ . type TOKEN_SEMICOLON

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 31


state 16

    9 typeDefinitionList: typeDefinitionList typeDefinition .

    $default  reduce using rule 9 (typeDefinitionList)


state 17

   97 identifierList: TOKEN_ID .

    $default  reduce using rule 97 (identifierList)


state 18

   11 variableDeclarations: TOKEN_VAR variableDeclarationList .
   12 variableDeclarationList: variableDeclarationList . variableDeclaration

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 11 (variableDeclarations)

    variableDeclaration  go to state 32
    identifierList       go to state 20


state 19

   13 variableDeclarationList: variableDeclaration .

    $default  reduce using rule 13 (variableDeclarationList)


state 20

   20 variableDeclaration: identifierList . TOKEN_COLON type TOKEN_SEMICOLON
   96 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 34


state 21

   22 functionDeclaration: TOKEN_FUNCTION . TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 35


state 22

   21 procedureDeclaration: TOKEN_PROCEDURE . TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 36


state 23

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations . compoundStatement TOKEN_DOT

    TOKEN_BEGIN  shift, and go to state 37

    compoundStatement  go to state 38


state 24

    6 groupSubprogramDeclarations: subprogramDeclarations .

    $default  reduce using rule 6 (groupSubprogramDeclarations)


state 25

   14 subprogramDeclarations: subprogramDeclarationList .
   15 subprogramDeclarationList: subprogramDeclarationList . procedureDeclaration
   16                          | subprogramDeclarationList . functionDeclaration

    TOKEN_FUNCTION   shift, and go to state 21
    TOKEN_PROCEDURE  shift, and go to state 22

    $default  reduce using rule 14 (subprogramDeclarations)

    procedureDeclaration  go to state 39
    functionDeclaration   go to state 40


state 26

   17 subprogramDeclarationList: procedureDeclaration .

    $default  reduce using rule 17 (subprogramDeclarationList)


state 27

   18 subprogramDeclarationList: functionDeclaration .

    $default  reduce using rule 18 (subprogramDeclarationList)


state 28

   47 type: TOKEN_ARRAY . TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_LBRACKET  shift, and go to state 41


state 29

   48 type: TOKEN_RECORD . fieldList TOKEN_END

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 51 (fieldList)

    fieldList       go to state 42
    fieldListSeq    go to state 43
    identifierList  go to state 44


state 30

   46 type: TOKEN_ID .

    $default  reduce using rule 46 (type)


state 31

   19 typeDefinition: TOKEN_ID TOKEN_EQ type . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 45


state 32

   12 variableDeclarationList: variableDeclarationList variableDeclaration .

    $default  reduce using rule 12 (variableDeclarationList)


state 33

   96 identifierList: identifierList TOKEN_COMMAS . TOKEN_ID

    TOKEN_ID  shift, and go to state 46


state 34

   20 variableDeclaration: identifierList TOKEN_COLON . type TOKEN_SEMICOLON

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 47


state 35

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID . TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_LPAR  shift, and go to state 48


state 36

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID . TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_LPAR  shift, and go to state 49


state 37

   30 compoundStatement: TOKEN_BEGIN . statementSequence TOKEN_END

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 37 (simpleStatement)

    compoundStatement    go to state 54
    statementSequence    go to state 55
    statement            go to state 56
    simpleStatement      go to state 57
    assignmentStatement  go to state 58
    procedureStatement   go to state 59
    structuredStatement  go to state 60
    variable             go to state 61


state 38

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement . TOKEN_DOT

    TOKEN_DOT  shift, and go to state 62


state 39

   15 subprogramDeclarationList: subprogramDeclarationList procedureDeclaration .

    $default  reduce using rule 15 (subprogramDeclarationList)


state 40

   16 subprogramDeclarationList: subprogramDeclarationList functionDeclaration .

    $default  reduce using rule 16 (subprogramDeclarationList)


state 41

   47 type: TOKEN_ARRAY TOKEN_LBRACKET . constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_INT    shift, and go to state 65

    constant  go to state 66
    sign      go to state 67


state 42

   48 type: TOKEN_RECORD fieldList . TOKEN_END

    TOKEN_END  shift, and go to state 68


state 43

   50 fieldList: fieldListSeq .
   52 fieldListSeq: fieldListSeq . TOKEN_SEMICOLON identifierList TOKEN_COLON type

    TOKEN_SEMICOLON  shift, and go to state 69

    $default  reduce using rule 50 (fieldList)


state 44

   53 fieldListSeq: identifierList . TOKEN_COLON type
   96 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 70


state 45

   19 typeDefinition: TOKEN_ID TOKEN_EQ type TOKEN_SEMICOLON .

    $default  reduce using rule 19 (typeDefinition)


state 46

   96 identifierList: identifierList TOKEN_COMMAS TOKEN_ID .

    $default  reduce using rule 96 (identifierList)


state 47

   20 variableDeclaration: identifierList TOKEN_COLON type . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 71


state 48

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR . formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 26 (formalParameterList)

    formalParameterList  go to state 72
    formalParamSeq       go to state 73
    identifierList       go to state 74


state 49

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR . formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 26 (formalParameterList)

    formalParameterList  go to state 75
    formalParamSeq       go to state 73
    identifierList       go to state 74


state 50

   45 structuredStatement: TOKEN_FOR . TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression @1 TOKEN_DO statement

    TOKEN_ID  shift, and go to state 76


state 51

   41 structuredStatement: TOKEN_IF . expression TOKEN_THEN statement
   42                    | TOKEN_IF . expression TOKEN_THEN statement TOKEN_ELSE statement

    TOKEN_STR    shift, and go to state 77
    TOKEN_NOT    shift, and go to state 78
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 79
    TOKEN_INT    shift, and go to state 80
    TOKEN_LPAR   shift, and go to state 81

    expression         go to state 82
    simpleExpression   go to state 83
    term               go to state 84
    factor             go to state 85
    factorElement      go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 52

   43 structuredStatement: TOKEN_WHILE . expression TOKEN_DO statement

    TOKEN_STR    shift, and go to state 77
    TOKEN_NOT    shift, and go to state 78
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 79
    TOKEN_INT    shift, and go to state 80
    TOKEN_LPAR   shift, and go to state 81

    expression         go to state 90
    simpleExpression   go to state 83
    term               go to state 84
    factor             go to state 85
    factorElement      go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 53

   39 procedureStatement: TOKEN_ID . TOKEN_LPAR actualParameterList TOKEN_RPAR
   85 variable: TOKEN_ID . groupComponentSelection

    TOKEN_DOT       shift, and go to state 91
    TOKEN_LPAR      shift, and go to state 92
    TOKEN_LBRACKET  shift, and go to state 93

    $default  reduce using rule 87 (groupComponentSelection)

    groupComponentSelection  go to state 94
    componentSelection       go to state 95


state 54

   40 structuredStatement: compoundStatement .

    $default  reduce using rule 40 (structuredStatement)


state 55

   30 compoundStatement: TOKEN_BEGIN statementSequence . TOKEN_END
   31 statementSequence: statementSequence . TOKEN_SEMICOLON statement

    TOKEN_END        shift, and go to state 96
    TOKEN_SEMICOLON  shift, and go to state 97


state 56

   32 statementSequence: statement .

    $default  reduce using rule 32 (statementSequence)


state 57

   33 statement: simpleStatement .

    $default  reduce using rule 33 (statement)


state 58

   35 simpleStatement: assignmentStatement .

    $default  reduce using rule 35 (simpleStatement)


state 59

   36 simpleStatement: procedureStatement .

    $default  reduce using rule 36 (simpleStatement)


state 60

   34 statement: structuredStatement .

    $default  reduce using rule 34 (statement)


state 61

   38 assignmentStatement: variable . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 98


state 62

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT .

    $default  reduce using rule 1 (program)


state 63

   98 sign: TOKEN_PLUS .

    $default  reduce using rule 98 (sign)


state 64

   99 sign: TOKEN_MINUS .

    $default  reduce using rule 99 (sign)


state 65

   54 constant: TOKEN_INT .

    $default  reduce using rule 54 (constant)


state 66

   47 type: TOKEN_ARRAY TOKEN_LBRACKET constant . TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_RANGE  shift, and go to state 99


state 67

   55 constant: sign . TOKEN_INT

    TOKEN_INT  shift, and go to state 100


state 68

   48 type: TOKEN_RECORD fieldList TOKEN_END .

    $default  reduce using rule 48 (type)


state 69

   52 fieldListSeq: fieldListSeq TOKEN_SEMICOLON . identifierList TOKEN_COLON type

    TOKEN_ID  shift, and go to state 17

    identifierList  go to state 101


state 70

   53 fieldListSeq: identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 102


state 71

   20 variableDeclaration: identifierList TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 20 (variableDeclaration)


state 72

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList . TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_RPAR  shift, and go to state 103


state 73

   25 formalParameterList: formalParamSeq .
   27 formalParamSeq: formalParamSeq . TOKEN_SEMICOLON identifierList TOKEN_COLON type

    TOKEN_SEMICOLON  shift, and go to state 104

    $default  reduce using rule 25 (formalParameterList)


state 74

   28 formalParamSeq: identifierList . TOKEN_COLON type
   96 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 105


state 75

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList . TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_RPAR  shift, and go to state 106


state 76

   45 structuredStatement: TOKEN_FOR TOKEN_ID . TOKEN_ASSIGN expression TOKEN_TO expression @1 TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 107


state 77

   80 factorElement: TOKEN_STR .

    $default  reduce using rule 80 (factorElement)


state 78

   78 factor: TOKEN_NOT . factorElement

    TOKEN_STR   shift, and go to state 77
    TOKEN_ID    shift, and go to state 79
    TOKEN_INT   shift, and go to state 80
    TOKEN_LPAR  shift, and go to state 81

    factorElement      go to state 108
    functionReference  go to state 87
    variable           go to state 88


state 79

   84 functionReference: TOKEN_ID . TOKEN_LPAR actualParameterList TOKEN_RPAR
   85 variable: TOKEN_ID . groupComponentSelection

    TOKEN_DOT       shift, and go to state 91
    TOKEN_LPAR      shift, and go to state 109
    TOKEN_LBRACKET  shift, and go to state 93

    $default  reduce using rule 87 (groupComponentSelection)

    groupComponentSelection  go to state 94
    componentSelection       go to state 95


state 80

   79 factorElement: TOKEN_INT .

    $default  reduce using rule 79 (factorElement)


state 81

   83 factorElement: TOKEN_LPAR . expression TOKEN_RPAR

    TOKEN_STR    shift, and go to state 77
    TOKEN_NOT    shift, and go to state 78
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 79
    TOKEN_INT    shift, and go to state 80
    TOKEN_LPAR   shift, and go to state 81

    expression         go to state 110
    simpleExpression   go to state 83
    term               go to state 84
    factor             go to state 85
    factorElement      go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 82

   41 structuredStatement: TOKEN_IF expression . TOKEN_THEN statement
   42                    | TOKEN_IF expression . TOKEN_THEN statement TOKEN_ELSE statement

    TOKEN_THEN  shift, and go to state 111


state 83

   56 expression: simpleExpression . groupRelOpSimExpr
   67 simpleExpression: simpleExpression . addOp term

    TOKEN_OR     shift, and go to state 112
    TOKEN_PLUS   shift, and go to state 113
    TOKEN_MINUS  shift, and go to state 114
    TOKEN_EQ     shift, and go to state 115
    TOKEN_LT     shift, and go to state 116
    TOKEN_LE     shift, and go to state 117
    TOKEN_GT     shift, and go to state 118
    TOKEN_GE     shift, and go to state 119
    TOKEN_NOTEQ  shift, and go to state 120

    $default  reduce using rule 58 (groupRelOpSimExpr)

    groupRelOpSimExpr  go to state 121
    relationalOp       go to state 122
    addOp              go to state 123


state 84

   66 simpleExpression: term .
   71 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 124
    TOKEN_DIV       shift, and go to state 125
    TOKEN_MOD       shift, and go to state 126
    TOKEN_MULTIPLY  shift, and go to state 127

    $default  reduce using rule 66 (simpleExpression)

    mulOp  go to state 128


state 85

   72 term: factor .

    $default  reduce using rule 72 (term)


state 86

   77 factor: factorElement .

    $default  reduce using rule 77 (factor)


state 87

   82 factorElement: functionReference .

    $default  reduce using rule 82 (factorElement)


state 88

   81 factorElement: variable .

    $default  reduce using rule 81 (factorElement)


state 89

   65 simpleExpression: sign . term

    TOKEN_STR   shift, and go to state 77
    TOKEN_NOT   shift, and go to state 78
    TOKEN_ID    shift, and go to state 79
    TOKEN_INT   shift, and go to state 80
    TOKEN_LPAR  shift, and go to state 81

    term               go to state 129
    factor             go to state 85
    factorElement      go to state 86
    functionReference  go to state 87
    variable           go to state 88


state 90

   43 structuredStatement: TOKEN_WHILE expression . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 130


state 91

   88 componentSelection: TOKEN_DOT . TOKEN_ID

    TOKEN_ID  shift, and go to state 131


state 92

   39 procedureStatement: TOKEN_ID TOKEN_LPAR . actualParameterList TOKEN_RPAR

    TOKEN_STR    shift, and go to state 77
    TOKEN_NOT    shift, and go to state 78
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 79
    TOKEN_INT    shift, and go to state 80
    TOKEN_LPAR   shift, and go to state 81

    $default  reduce using rule 93 (actualParameterList)

    expression           go to state 132
    simpleExpression     go to state 83
    term                 go to state 84
    factor               go to state 85
    factorElement        go to state 86
    functionReference    go to state 87
    variable             go to state 88
    actualParameterList  go to state 133
    expressionList       go to state 134
    sign                 go to state 89


state 93

   89 componentSelection: TOKEN_LBRACKET . expression TOKEN_RBRACKET

    TOKEN_STR    shift, and go to state 77
    TOKEN_NOT    shift, and go to state 78
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 79
    TOKEN_INT    shift, and go to state 80
    TOKEN_LPAR   shift, and go to state 81

    expression         go to state 135
    simpleExpression   go to state 83
    term               go to state 84
    factor             go to state 85
    factorElement      go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 94

   85 variable: TOKEN_ID groupComponentSelection .

    $default  reduce using rule 85 (variable)


state 95

   86 groupComponentSelection: componentSelection .
   90 componentSelection: componentSelection . TOKEN_DOT TOKEN_ID
   91                   | componentSelection . TOKEN_LBRACKET expression TOKEN_RBRACKET

    TOKEN_DOT       shift, and go to state 136
    TOKEN_LBRACKET  shift, and go to state 137

    $default  reduce using rule 86 (groupComponentSelection)


state 96

   30 compoundStatement: TOKEN_BEGIN statementSequence TOKEN_END .

    $default  reduce using rule 30 (compoundStatement)


state 97

   31 statementSequence: statementSequence TOKEN_SEMICOLON . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 37 (simpleStatement)

    compoundStatement    go to state 54
    statement            go to state 138
    simpleStatement      go to state 57
    assignmentStatement  go to state 58
    procedureStatement   go to state 59
    structuredStatement  go to state 60
    variable             go to state 61


state 98

   38 assignmentStatement: variable TOKEN_ASSIGN . expression

    TOKEN_STR    shift, and go to state 77
    TOKEN_NOT    shift, and go to state 78
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 79
    TOKEN_INT    shift, and go to state 80
    TOKEN_LPAR   shift, and go to state 81

    expression         go to state 139
    simpleExpression   go to state 83
    term               go to state 84
    factor             go to state 85
    factorElement      go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 99

   47 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE . constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_INT    shift, and go to state 65

    constant  go to state 140
    sign      go to state 67


state 100

   55 constant: sign TOKEN_INT .

    $default  reduce using rule 55 (constant)


state 101

   52 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList . TOKEN_COLON type
   96 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 141


state 102

   53 fieldListSeq: identifierList TOKEN_COLON type .

    $default  reduce using rule 53 (fieldListSeq)


state 103

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR . TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_COLON  shift, and go to state 142


state 104

   27 formalParamSeq: formalParamSeq TOKEN_SEMICOLON . identifierList TOKEN_COLON type

    TOKEN_ID  shift, and go to state 17

    identifierList  go to state 143


state 105

   28 formalParamSeq: identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 144


state 106

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR . TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 145


state 107

   45 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN . expression TOKEN_TO expression @1 TOKEN_DO statement

    TOKEN_STR    shift, and go to state 77
    TOKEN_NOT    shift, and go to state 78
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 79
    TOKEN_INT    shift, and go to state 80
    TOKEN_LPAR   shift, and go to state 81

    expression         go to state 146
    simpleExpression   go to state 83
    term               go to state 84
    factor             go to state 85
    factorElement      go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 108

   78 factor: TOKEN_NOT factorElement .

    $default  reduce using rule 78 (factor)


state 109

   84 functionReference: TOKEN_ID TOKEN_LPAR . actualParameterList TOKEN_RPAR

    TOKEN_STR    shift, and go to state 77
    TOKEN_NOT    shift, and go to state 78
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 79
    TOKEN_INT    shift, and go to state 80
    TOKEN_LPAR   shift, and go to state 81

    $default  reduce using rule 93 (actualParameterList)

    expression           go to state 132
    simpleExpression     go to state 83
    term                 go to state 84
    factor               go to state 85
    factorElement        go to state 86
    functionReference    go to state 87
    variable             go to state 88
    actualParameterList  go to state 147
    expressionList       go to state 134
    sign                 go to state 89


state 110

   83 factorElement: TOKEN_LPAR expression . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 148


state 111

   41 structuredStatement: TOKEN_IF expression TOKEN_THEN . statement
   42                    | TOKEN_IF expression TOKEN_THEN . statement TOKEN_ELSE statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 37 (simpleStatement)

    compoundStatement    go to state 54
    statement            go to state 149
    simpleStatement      go to state 57
    assignmentStatement  go to state 58
    procedureStatement   go to state 59
    structuredStatement  go to state 60
    variable             go to state 61


state 112

   70 addOp: TOKEN_OR .

    $default  reduce using rule 70 (addOp)


state 113

   68 addOp: TOKEN_PLUS .

    $default  reduce using rule 68 (addOp)


state 114

   69 addOp: TOKEN_MINUS .

    $default  reduce using rule 69 (addOp)


state 115

   64 relationalOp: TOKEN_EQ .

    $default  reduce using rule 64 (relationalOp)


state 116

   59 relationalOp: TOKEN_LT .

    $default  reduce using rule 59 (relationalOp)


state 117

   60 relationalOp: TOKEN_LE .

    $default  reduce using rule 60 (relationalOp)


state 118

   61 relationalOp: TOKEN_GT .

    $default  reduce using rule 61 (relationalOp)


state 119

   62 relationalOp: TOKEN_GE .

    $default  reduce using rule 62 (relationalOp)


state 120

   63 relationalOp: TOKEN_NOTEQ .

    $default  reduce using rule 63 (relationalOp)


state 121

   56 expression: simpleExpression groupRelOpSimExpr .

    $default  reduce using rule 56 (expression)


state 122

   57 groupRelOpSimExpr: relationalOp . simpleExpression

    TOKEN_STR    shift, and go to state 77
    TOKEN_NOT    shift, and go to state 78
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 79
    TOKEN_INT    shift, and go to state 80
    TOKEN_LPAR   shift, and go to state 81

    simpleExpression   go to state 150
    term               go to state 84
    factor             go to state 85
    factorElement      go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 123

   67 simpleExpression: simpleExpression addOp . term

    TOKEN_STR   shift, and go to state 77
    TOKEN_NOT   shift, and go to state 78
    TOKEN_ID    shift, and go to state 79
    TOKEN_INT   shift, and go to state 80
    TOKEN_LPAR  shift, and go to state 81

    term               go to state 151
    factor             go to state 85
    factorElement      go to state 86
    functionReference  go to state 87
    variable           go to state 88


state 124

   76 mulOp: TOKEN_AND .

    $default  reduce using rule 76 (mulOp)


state 125

   74 mulOp: TOKEN_DIV .

    $default  reduce using rule 74 (mulOp)


state 126

   75 mulOp: TOKEN_MOD .

    $default  reduce using rule 75 (mulOp)


state 127

   73 mulOp: TOKEN_MULTIPLY .

    $default  reduce using rule 73 (mulOp)


state 128

   71 term: term mulOp . factor

    TOKEN_STR   shift, and go to state 77
    TOKEN_NOT   shift, and go to state 78
    TOKEN_ID    shift, and go to state 79
    TOKEN_INT   shift, and go to state 80
    TOKEN_LPAR  shift, and go to state 81

    factor             go to state 152
    factorElement      go to state 86
    functionReference  go to state 87
    variable           go to state 88


state 129

   65 simpleExpression: sign term .
   71 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 124
    TOKEN_DIV       shift, and go to state 125
    TOKEN_MOD       shift, and go to state 126
    TOKEN_MULTIPLY  shift, and go to state 127

    $default  reduce using rule 65 (simpleExpression)

    mulOp  go to state 128


state 130

   43 structuredStatement: TOKEN_WHILE expression TOKEN_DO . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 37 (simpleStatement)

    compoundStatement    go to state 54
    statement            go to state 153
    simpleStatement      go to state 57
    assignmentStatement  go to state 58
    procedureStatement   go to state 59
    structuredStatement  go to state 60
    variable             go to state 61


state 131

   88 componentSelection: TOKEN_DOT TOKEN_ID .

    $default  reduce using rule 88 (componentSelection)


state 132

   95 expressionList: expression .

    $default  reduce using rule 95 (expressionList)


state 133

   39 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 154


state 134

   92 actualParameterList: expressionList .
   94 expressionList: expressionList . TOKEN_COMMAS expression

    TOKEN_COMMAS  shift, and go to state 155

    $default  reduce using rule 92 (actualParameterList)


state 135

   89 componentSelection: TOKEN_LBRACKET expression . TOKEN_RBRACKET

    TOKEN_RBRACKET  shift, and go to state 156


state 136

   90 componentSelection: componentSelection TOKEN_DOT . TOKEN_ID

    TOKEN_ID  shift, and go to state 157


state 137

   91 componentSelection: componentSelection TOKEN_LBRACKET . expression TOKEN_RBRACKET

    TOKEN_STR    shift, and go to state 77
    TOKEN_NOT    shift, and go to state 78
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 79
    TOKEN_INT    shift, and go to state 80
    TOKEN_LPAR   shift, and go to state 81

    expression         go to state 158
    simpleExpression   go to state 83
    term               go to state 84
    factor             go to state 85
    factorElement      go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 138

   31 statementSequence: statementSequence TOKEN_SEMICOLON statement .

    $default  reduce using rule 31 (statementSequence)


state 139

   38 assignmentStatement: variable TOKEN_ASSIGN expression .

    $default  reduce using rule 38 (assignmentStatement)


state 140

   47 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant . TOKEN_RBRACKET TOKEN_OF type

    TOKEN_RBRACKET  shift, and go to state 159


state 141

   52 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 160


state 142

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON . resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 161

    resultType  go to state 162


state 143

   27 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList . TOKEN_COLON type
   96 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 163


state 144

   28 formalParamSeq: identifierList TOKEN_COLON type .

    $default  reduce using rule 28 (formalParamSeq)


state 145

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON . groupBlockForward TOKEN_SEMICOLON

    TOKEN_FORWARD  shift, and go to state 164
    TOKEN_VAR      shift, and go to state 12

    $default  reduce using rule 5 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 165
    variableDeclarations       go to state 14
    groupBlockForward          go to state 166
    block                      go to state 167


state 146

   45 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression . TOKEN_TO expression @1 TOKEN_DO statement

    TOKEN_TO  shift, and go to state 168


state 147

   84 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 169


state 148

   83 factorElement: TOKEN_LPAR expression TOKEN_RPAR .

    $default  reduce using rule 83 (factorElement)


state 149

   41 structuredStatement: TOKEN_IF expression TOKEN_THEN statement .
   42                    | TOKEN_IF expression TOKEN_THEN statement . TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 170

    TOKEN_ELSE  [reduce using rule 41 (structuredStatement)]
    $default    reduce using rule 41 (structuredStatement)


state 150

   57 groupRelOpSimExpr: relationalOp simpleExpression .
   67 simpleExpression: simpleExpression . addOp term

    TOKEN_OR     shift, and go to state 112
    TOKEN_PLUS   shift, and go to state 113
    TOKEN_MINUS  shift, and go to state 114

    $default  reduce using rule 57 (groupRelOpSimExpr)

    addOp  go to state 123


state 151

   67 simpleExpression: simpleExpression addOp term .
   71 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 124
    TOKEN_DIV       shift, and go to state 125
    TOKEN_MOD       shift, and go to state 126
    TOKEN_MULTIPLY  shift, and go to state 127

    $default  reduce using rule 67 (simpleExpression)

    mulOp  go to state 128


state 152

   71 term: term mulOp factor .

    $default  reduce using rule 71 (term)


state 153

   43 structuredStatement: TOKEN_WHILE expression TOKEN_DO statement .

    $default  reduce using rule 43 (structuredStatement)


state 154

   39 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR .

    $default  reduce using rule 39 (procedureStatement)


state 155

   94 expressionList: expressionList TOKEN_COMMAS . expression

    TOKEN_STR    shift, and go to state 77
    TOKEN_NOT    shift, and go to state 78
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 79
    TOKEN_INT    shift, and go to state 80
    TOKEN_LPAR   shift, and go to state 81

    expression         go to state 171
    simpleExpression   go to state 83
    term               go to state 84
    factor             go to state 85
    factorElement      go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 156

   89 componentSelection: TOKEN_LBRACKET expression TOKEN_RBRACKET .

    $default  reduce using rule 89 (componentSelection)


state 157

   90 componentSelection: componentSelection TOKEN_DOT TOKEN_ID .

    $default  reduce using rule 90 (componentSelection)


state 158

   91 componentSelection: componentSelection TOKEN_LBRACKET expression . TOKEN_RBRACKET

    TOKEN_RBRACKET  shift, and go to state 172


state 159

   47 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET . TOKEN_OF type

    TOKEN_OF  shift, and go to state 173


state 160

   52 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type .

    $default  reduce using rule 52 (fieldListSeq)


state 161

   49 resultType: TOKEN_ID .

    $default  reduce using rule 49 (resultType)


state 162

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType . TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 174


state 163

   27 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 175


state 164

   24 groupBlockForward: TOKEN_FORWARD .

    $default  reduce using rule 24 (groupBlockForward)


state 165

   29 block: groupVariableDeclarations . compoundStatement

    TOKEN_BEGIN  shift, and go to state 37

    compoundStatement  go to state 176


state 166

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 177


state 167

   23 groupBlockForward: block .

    $default  reduce using rule 23 (groupBlockForward)


state 168

   45 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO . expression @1 TOKEN_DO statement

    TOKEN_STR    shift, and go to state 77
    TOKEN_NOT    shift, and go to state 78
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 79
    TOKEN_INT    shift, and go to state 80
    TOKEN_LPAR   shift, and go to state 81

    expression         go to state 178
    simpleExpression   go to state 83
    term               go to state 84
    factor             go to state 85
    factorElement      go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 169

   84 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR .

    $default  reduce using rule 84 (functionReference)


state 170

   42 structuredStatement: TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 37 (simpleStatement)

    compoundStatement    go to state 54
    statement            go to state 179
    simpleStatement      go to state 57
    assignmentStatement  go to state 58
    procedureStatement   go to state 59
    structuredStatement  go to state 60
    variable             go to state 61


state 171

   94 expressionList: expressionList TOKEN_COMMAS expression .

    $default  reduce using rule 94 (expressionList)


state 172

   91 componentSelection: componentSelection TOKEN_LBRACKET expression TOKEN_RBRACKET .

    $default  reduce using rule 91 (componentSelection)


state 173

   47 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 180


state 174

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON . groupBlockForward TOKEN_SEMICOLON

    TOKEN_FORWARD  shift, and go to state 164
    TOKEN_VAR      shift, and go to state 12

    $default  reduce using rule 5 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 165
    variableDeclarations       go to state 14
    groupBlockForward          go to state 181
    block                      go to state 167


state 175

   27 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type .

    $default  reduce using rule 27 (formalParamSeq)


state 176

   29 block: groupVariableDeclarations compoundStatement .

    $default  reduce using rule 29 (block)


state 177

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON .

    $default  reduce using rule 21 (procedureDeclaration)


state 178

   45 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression . @1 TOKEN_DO statement

    $default  reduce using rule 44 (@1)

    @1  go to state 182


state 179

   42 structuredStatement: TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE statement .

    $default  reduce using rule 42 (structuredStatement)


state 180

   47 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type .

    $default  reduce using rule 47 (type)


state 181

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 183


state 182

   45 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression @1 . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 184


state 183

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON .

    $default  reduce using rule 22 (functionDeclaration)


state 184

   45 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression @1 TOKEN_DO . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 37 (simpleStatement)

    compoundStatement    go to state 54
    statement            go to state 185
    simpleStatement      go to state 57
    assignmentStatement  go to state 58
    procedureStatement   go to state 59
    structuredStatement  go to state 60
    variable             go to state 61


state 185

   45 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression @1 TOKEN_DO statement .

    $default  reduce using rule 45 (structuredStatement)
