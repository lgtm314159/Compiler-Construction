Terminals unused in grammar

   TOKEN_COMMENT
   TOKEN_DIVIDE
   TOKEN_DECIMAL
   TOKEN_EXPNUM


State 147 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    2 groupTypeDefinitions: typeDefinitions
    3                     | /* empty */

    4 groupVariableDeclarations: variableDeclarations
    5                          | /* empty */

    6 groupSubprogramDeclarations: subprogramDeclarations
    7                            | /* empty */

    8 typeDefinitions: TOKEN_TYPE typeDefinitionList

    9 typeDefinitionList: typeDefinitionList typeDefinition
   10                   | typeDefinition

   11 variableDeclarations: TOKEN_VAR variableDeclarationList

   12 variableDeclarationList: variableDeclarationList variableDeclaration
   13                        | variableDeclaration

   14 subprogramDeclarations: subprogramDeclarationList

   15 subprogramDeclarationList: subprogramDeclarationList procedureDeclaration
   16                          | subprogramDeclarationList functionDeclaration
   17                          | procedureDeclaration
   18                          | functionDeclaration

   19 typeDefinition: TOKEN_ID TOKEN_EQ type TOKEN_SEMICOLON

   20 variableDeclaration: identifierList TOKEN_COLON type TOKEN_SEMICOLON

   21 $@1: /* empty */

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@1 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

   23 $@2: /* empty */

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@2 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

   25 groupBlockForward: block
   26                  | TOKEN_FORWARD

   27 formalParameterList: formalParamSeq
   28                    | /* empty */

   29 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type
   30               | identifierList TOKEN_COLON type

   31 block: groupVariableDeclarations compoundStatement

   32 compoundStatement: TOKEN_BEGIN statementSequence TOKEN_END

   33 statementSequence: statementSequence TOKEN_SEMICOLON statement
   34                  | statement

   35 statement: simpleStatement
   36          | structuredStatement

   37 simpleStatement: assignmentStatement
   38                | procedureStatement
   39                | /* empty */

   40 assignmentStatement: variable TOKEN_ASSIGN expression

   41 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR

   42 structuredStatement: compoundStatement
   43                    | TOKEN_IF expression TOKEN_THEN statement
   44                    | TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE statement
   45                    | TOKEN_WHILE expression TOKEN_DO statement

   46 @3: /* empty */

   47 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression @3 TOKEN_DO statement

   48 type: TOKEN_ID
   49     | TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type
   50     | TOKEN_RECORD fieldList TOKEN_END

   51 resultType: TOKEN_ID

   52 fieldList: fieldListSeq
   53          | /* empty */

   54 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type
   55             | identifierList TOKEN_COLON type

   56 constant: TOKEN_INT
   57         | sign TOKEN_INT

   58 expression: simpleExpression groupRelOpSimExpr

   59 groupRelOpSimExpr: relationalOp simpleExpression
   60                  | /* empty */

   61 relationalOp: TOKEN_LT
   62             | TOKEN_LE
   63             | TOKEN_GT
   64             | TOKEN_GE
   65             | TOKEN_NOTEQ
   66             | TOKEN_EQ

   67 simpleExpression: sign term
   68                 | term
   69                 | simpleExpression addOp term

   70 addOp: TOKEN_PLUS
   71      | TOKEN_MINUS
   72      | TOKEN_OR

   73 term: term mulOp factor
   74     | factor

   75 mulOp: TOKEN_MULTIPLY
   76      | TOKEN_DIV
   77      | TOKEN_MOD
   78      | TOKEN_AND

   79 factor: factorElement
   80       | TOKEN_NOT factorElement

   81 factorElement: TOKEN_INT
   82              | TOKEN_STR
   83              | variable
   84              | functionReference
   85              | TOKEN_LPAR expression TOKEN_RPAR

   86 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR

   87 variable: TOKEN_ID groupComponentSelection

   88 groupComponentSelection: componentSelection
   89                        | /* empty */

   90 componentSelection: TOKEN_DOT TOKEN_ID
   91                   | TOKEN_LBRACKET expression TOKEN_RBRACKET
   92                   | componentSelection TOKEN_DOT TOKEN_ID
   93                   | componentSelection TOKEN_LBRACKET expression TOKEN_RBRACKET

   94 actualParameterList: expressionList
   95                    | /* empty */

   96 expressionList: expressionList TOKEN_COMMAS expression
   97               | expression

   98 identifierList: identifierList TOKEN_COMMAS TOKEN_ID
   99               | TOKEN_ID

  100 sign: TOKEN_PLUS
  101     | TOKEN_MINUS


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_COMMENT (258)
TOKEN_STR (259) 82
TOKEN_AND (260) 78
TOKEN_BEGIN (261) 32
TOKEN_FORWARD (262) 26
TOKEN_DIV (263) 76
TOKEN_DO (264) 45 47
TOKEN_ELSE (265) 44
TOKEN_END (266) 32 50
TOKEN_FOR (267) 47
TOKEN_FUNCTION (268) 24
TOKEN_IF (269) 43 44
TOKEN_ARRAY (270) 49
TOKEN_MOD (271) 77
TOKEN_NOT (272) 80
TOKEN_OF (273) 49
TOKEN_OR (274) 72
TOKEN_PROCEDURE (275) 22
TOKEN_PROGRAM (276) 1
TOKEN_RECORD (277) 50
TOKEN_THEN (278) 43 44
TOKEN_TO (279) 47
TOKEN_TYPE (280) 8
TOKEN_VAR (281) 11
TOKEN_WHILE (282) 45
TOKEN_PLUS (283) 70 100
TOKEN_MINUS (284) 71 101
TOKEN_MULTIPLY (285) 75
TOKEN_DIVIDE (286)
TOKEN_EQ (287) 19 66
TOKEN_LT (288) 61
TOKEN_LE (289) 62
TOKEN_GT (290) 63
TOKEN_GE (291) 64
TOKEN_NOTEQ (292) 65
TOKEN_ID (293) 1 19 22 24 41 47 48 51 86 87 90 92 98 99
TOKEN_INT (294) 56 57 81
TOKEN_DECIMAL (295)
TOKEN_EXPNUM (296)
TOKEN_DOT (297) 1 90 92
TOKEN_COMMAS (298) 96 98
TOKEN_COLON (299) 20 24 29 30 54 55
TOKEN_SEMICOLON (300) 1 19 20 22 24 29 33 54
TOKEN_ASSIGN (301) 40 47
TOKEN_RANGE (302) 49
TOKEN_LPAR (303) 22 24 41 85 86
TOKEN_RPAR (304) 22 24 41 85 86
TOKEN_LBRACKET (305) 49 91 93
TOKEN_RBRACKET (306) 49 91 93
UMINUS (307)
UPLUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
groupTypeDefinitions (56)
    on left: 2 3, on right: 1
groupVariableDeclarations (57)
    on left: 4 5, on right: 1 31
groupSubprogramDeclarations (58)
    on left: 6 7, on right: 1
typeDefinitions (59)
    on left: 8, on right: 2
typeDefinitionList (60)
    on left: 9 10, on right: 8 9
variableDeclarations (61)
    on left: 11, on right: 4
variableDeclarationList (62)
    on left: 12 13, on right: 11 12
subprogramDeclarations (63)
    on left: 14, on right: 6
subprogramDeclarationList (64)
    on left: 15 16 17 18, on right: 14 15 16
typeDefinition (65)
    on left: 19, on right: 9 10
variableDeclaration (66)
    on left: 20, on right: 12 13
procedureDeclaration (67)
    on left: 22, on right: 15 17
$@1 (68)
    on left: 21, on right: 22
functionDeclaration (69)
    on left: 24, on right: 16 18
$@2 (70)
    on left: 23, on right: 24
groupBlockForward (71)
    on left: 25 26, on right: 22 24
formalParameterList (72)
    on left: 27 28, on right: 22 24
formalParamSeq (73)
    on left: 29 30, on right: 27 29
block (74)
    on left: 31, on right: 25
compoundStatement (75)
    on left: 32, on right: 1 31 42
statementSequence (76)
    on left: 33 34, on right: 32 33
statement (77)
    on left: 35 36, on right: 33 34 43 44 45 47
simpleStatement (78)
    on left: 37 38 39, on right: 35
assignmentStatement (79)
    on left: 40, on right: 37
procedureStatement (80)
    on left: 41, on right: 38
structuredStatement (81)
    on left: 42 43 44 45 47, on right: 36
@3 (82)
    on left: 46, on right: 47
type (83)
    on left: 48 49 50, on right: 19 20 29 30 49 54 55
resultType (84)
    on left: 51, on right: 24
fieldList (85)
    on left: 52 53, on right: 50
fieldListSeq (86)
    on left: 54 55, on right: 52 54
constant (87)
    on left: 56 57, on right: 49
expression (88)
    on left: 58, on right: 40 43 44 45 47 85 91 93 96 97
groupRelOpSimExpr (89)
    on left: 59 60, on right: 58
relationalOp (90)
    on left: 61 62 63 64 65 66, on right: 59
simpleExpression (91)
    on left: 67 68 69, on right: 58 59 69
addOp (92)
    on left: 70 71 72, on right: 69
term (93)
    on left: 73 74, on right: 67 68 69 73
mulOp (94)
    on left: 75 76 77 78, on right: 73
factor (95)
    on left: 79 80, on right: 73 74
factorElement (96)
    on left: 81 82 83 84 85, on right: 79 80
functionReference (97)
    on left: 86, on right: 84
variable (98)
    on left: 87, on right: 40 83
groupComponentSelection (99)
    on left: 88 89, on right: 87
componentSelection (100)
    on left: 90 91 92 93, on right: 88 92 93
actualParameterList (101)
    on left: 94 95, on right: 41 86
expressionList (102)
    on left: 96 97, on right: 94 96
identifierList (103)
    on left: 98 99, on right: 20 29 30 54 55 98
sign (104)
    on left: 100 101, on right: 57 67


state 0

    0 $accept: . program $end

    TOKEN_PROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    1 program: TOKEN_PROGRAM . TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_ID  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: TOKEN_PROGRAM TOKEN_ID . TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_SEMICOLON  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON . groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_TYPE  shift, and go to state 6

    $default  reduce using rule 3 (groupTypeDefinitions)

    groupTypeDefinitions  go to state 7
    typeDefinitions       go to state 8


state 6

    8 typeDefinitions: TOKEN_TYPE . typeDefinitionList

    TOKEN_ID  shift, and go to state 9

    typeDefinitionList  go to state 10
    typeDefinition      go to state 11


state 7

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions . groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_VAR  shift, and go to state 12

    $default  reduce using rule 5 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 13
    variableDeclarations       go to state 14


state 8

    2 groupTypeDefinitions: typeDefinitions .

    $default  reduce using rule 2 (groupTypeDefinitions)


state 9

   19 typeDefinition: TOKEN_ID . TOKEN_EQ type TOKEN_SEMICOLON

    TOKEN_EQ  shift, and go to state 15


state 10

    8 typeDefinitions: TOKEN_TYPE typeDefinitionList .
    9 typeDefinitionList: typeDefinitionList . typeDefinition

    TOKEN_ID  shift, and go to state 9

    $default  reduce using rule 8 (typeDefinitions)

    typeDefinition  go to state 16


state 11

   10 typeDefinitionList: typeDefinition .

    $default  reduce using rule 10 (typeDefinitionList)


state 12

   11 variableDeclarations: TOKEN_VAR . variableDeclarationList

    TOKEN_ID  shift, and go to state 17

    variableDeclarationList  go to state 18
    variableDeclaration      go to state 19
    identifierList           go to state 20


state 13

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations . groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_FUNCTION   shift, and go to state 21
    TOKEN_PROCEDURE  shift, and go to state 22

    $default  reduce using rule 7 (groupSubprogramDeclarations)

    groupSubprogramDeclarations  go to state 23
    subprogramDeclarations       go to state 24
    subprogramDeclarationList    go to state 25
    procedureDeclaration         go to state 26
    functionDeclaration          go to state 27


state 14

    4 groupVariableDeclarations: variableDeclarations .

    $default  reduce using rule 4 (groupVariableDeclarations)


state 15

   19 typeDefinition: TOKEN_ID TOKEN_EQ . type TOKEN_SEMICOLON

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 31


state 16

    9 typeDefinitionList: typeDefinitionList typeDefinition .

    $default  reduce using rule 9 (typeDefinitionList)


state 17

   99 identifierList: TOKEN_ID .

    $default  reduce using rule 99 (identifierList)


state 18

   11 variableDeclarations: TOKEN_VAR variableDeclarationList .
   12 variableDeclarationList: variableDeclarationList . variableDeclaration

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 11 (variableDeclarations)

    variableDeclaration  go to state 32
    identifierList       go to state 20


state 19

   13 variableDeclarationList: variableDeclaration .

    $default  reduce using rule 13 (variableDeclarationList)


state 20

   20 variableDeclaration: identifierList . TOKEN_COLON type TOKEN_SEMICOLON
   98 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 34


state 21

   24 functionDeclaration: TOKEN_FUNCTION . TOKEN_ID $@2 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 35


state 22

   22 procedureDeclaration: TOKEN_PROCEDURE . TOKEN_ID $@1 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 36


state 23

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations . compoundStatement TOKEN_DOT

    TOKEN_BEGIN  shift, and go to state 37

    compoundStatement  go to state 38


state 24

    6 groupSubprogramDeclarations: subprogramDeclarations .

    $default  reduce using rule 6 (groupSubprogramDeclarations)


state 25

   14 subprogramDeclarations: subprogramDeclarationList .
   15 subprogramDeclarationList: subprogramDeclarationList . procedureDeclaration
   16                          | subprogramDeclarationList . functionDeclaration

    TOKEN_FUNCTION   shift, and go to state 21
    TOKEN_PROCEDURE  shift, and go to state 22

    $default  reduce using rule 14 (subprogramDeclarations)

    procedureDeclaration  go to state 39
    functionDeclaration   go to state 40


state 26

   17 subprogramDeclarationList: procedureDeclaration .

    $default  reduce using rule 17 (subprogramDeclarationList)


state 27

   18 subprogramDeclarationList: functionDeclaration .

    $default  reduce using rule 18 (subprogramDeclarationList)


state 28

   49 type: TOKEN_ARRAY . TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_LBRACKET  shift, and go to state 41


state 29

   50 type: TOKEN_RECORD . fieldList TOKEN_END

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 53 (fieldList)

    fieldList       go to state 42
    fieldListSeq    go to state 43
    identifierList  go to state 44


state 30

   48 type: TOKEN_ID .

    $default  reduce using rule 48 (type)


state 31

   19 typeDefinition: TOKEN_ID TOKEN_EQ type . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 45


state 32

   12 variableDeclarationList: variableDeclarationList variableDeclaration .

    $default  reduce using rule 12 (variableDeclarationList)


state 33

   98 identifierList: identifierList TOKEN_COMMAS . TOKEN_ID

    TOKEN_ID  shift, and go to state 46


state 34

   20 variableDeclaration: identifierList TOKEN_COLON . type TOKEN_SEMICOLON

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 47


state 35

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID . $@2 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    $default  reduce using rule 23 ($@2)

    $@2  go to state 48


state 36

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID . $@1 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    $default  reduce using rule 21 ($@1)

    $@1  go to state 49


state 37

   32 compoundStatement: TOKEN_BEGIN . statementSequence TOKEN_END

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 39 (simpleStatement)

    compoundStatement    go to state 54
    statementSequence    go to state 55
    statement            go to state 56
    simpleStatement      go to state 57
    assignmentStatement  go to state 58
    procedureStatement   go to state 59
    structuredStatement  go to state 60
    variable             go to state 61


state 38

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement . TOKEN_DOT

    TOKEN_DOT  shift, and go to state 62


state 39

   15 subprogramDeclarationList: subprogramDeclarationList procedureDeclaration .

    $default  reduce using rule 15 (subprogramDeclarationList)


state 40

   16 subprogramDeclarationList: subprogramDeclarationList functionDeclaration .

    $default  reduce using rule 16 (subprogramDeclarationList)


state 41

   49 type: TOKEN_ARRAY TOKEN_LBRACKET . constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_INT    shift, and go to state 65

    constant  go to state 66
    sign      go to state 67


state 42

   50 type: TOKEN_RECORD fieldList . TOKEN_END

    TOKEN_END  shift, and go to state 68


state 43

   52 fieldList: fieldListSeq .
   54 fieldListSeq: fieldListSeq . TOKEN_SEMICOLON identifierList TOKEN_COLON type

    TOKEN_SEMICOLON  shift, and go to state 69

    $default  reduce using rule 52 (fieldList)


state 44

   55 fieldListSeq: identifierList . TOKEN_COLON type
   98 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 70


state 45

   19 typeDefinition: TOKEN_ID TOKEN_EQ type TOKEN_SEMICOLON .

    $default  reduce using rule 19 (typeDefinition)


state 46

   98 identifierList: identifierList TOKEN_COMMAS TOKEN_ID .

    $default  reduce using rule 98 (identifierList)


state 47

   20 variableDeclaration: identifierList TOKEN_COLON type . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 71


state 48

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@2 . TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_LPAR  shift, and go to state 72


state 49

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@1 . TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_LPAR  shift, and go to state 73


state 50

   47 structuredStatement: TOKEN_FOR . TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression @3 TOKEN_DO statement

    TOKEN_ID  shift, and go to state 74


state 51

   43 structuredStatement: TOKEN_IF . expression TOKEN_THEN statement
   44                    | TOKEN_IF . expression TOKEN_THEN statement TOKEN_ELSE statement

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 80
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    factorElement      go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 52

   45 structuredStatement: TOKEN_WHILE . expression TOKEN_DO statement

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 88
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    factorElement      go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 53

   41 procedureStatement: TOKEN_ID . TOKEN_LPAR actualParameterList TOKEN_RPAR
   87 variable: TOKEN_ID . groupComponentSelection

    TOKEN_DOT       shift, and go to state 89
    TOKEN_LPAR      shift, and go to state 90
    TOKEN_LBRACKET  shift, and go to state 91

    $default  reduce using rule 89 (groupComponentSelection)

    groupComponentSelection  go to state 92
    componentSelection       go to state 93


state 54

   42 structuredStatement: compoundStatement .

    $default  reduce using rule 42 (structuredStatement)


state 55

   32 compoundStatement: TOKEN_BEGIN statementSequence . TOKEN_END
   33 statementSequence: statementSequence . TOKEN_SEMICOLON statement

    TOKEN_END        shift, and go to state 94
    TOKEN_SEMICOLON  shift, and go to state 95


state 56

   34 statementSequence: statement .

    $default  reduce using rule 34 (statementSequence)


state 57

   35 statement: simpleStatement .

    $default  reduce using rule 35 (statement)


state 58

   37 simpleStatement: assignmentStatement .

    $default  reduce using rule 37 (simpleStatement)


state 59

   38 simpleStatement: procedureStatement .

    $default  reduce using rule 38 (simpleStatement)


state 60

   36 statement: structuredStatement .

    $default  reduce using rule 36 (statement)


state 61

   40 assignmentStatement: variable . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 96


state 62

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT .

    $default  reduce using rule 1 (program)


state 63

  100 sign: TOKEN_PLUS .

    $default  reduce using rule 100 (sign)


state 64

  101 sign: TOKEN_MINUS .

    $default  reduce using rule 101 (sign)


state 65

   56 constant: TOKEN_INT .

    $default  reduce using rule 56 (constant)


state 66

   49 type: TOKEN_ARRAY TOKEN_LBRACKET constant . TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_RANGE  shift, and go to state 97


state 67

   57 constant: sign . TOKEN_INT

    TOKEN_INT  shift, and go to state 98


state 68

   50 type: TOKEN_RECORD fieldList TOKEN_END .

    $default  reduce using rule 50 (type)


state 69

   54 fieldListSeq: fieldListSeq TOKEN_SEMICOLON . identifierList TOKEN_COLON type

    TOKEN_ID  shift, and go to state 17

    identifierList  go to state 99


state 70

   55 fieldListSeq: identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 100


state 71

   20 variableDeclaration: identifierList TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 20 (variableDeclaration)


state 72

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@2 TOKEN_LPAR . formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 28 (formalParameterList)

    formalParameterList  go to state 101
    formalParamSeq       go to state 102
    identifierList       go to state 103


state 73

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@1 TOKEN_LPAR . formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 28 (formalParameterList)

    formalParameterList  go to state 104
    formalParamSeq       go to state 102
    identifierList       go to state 103


state 74

   47 structuredStatement: TOKEN_FOR TOKEN_ID . TOKEN_ASSIGN expression TOKEN_TO expression @3 TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 105


state 75

   82 factorElement: TOKEN_STR .

    $default  reduce using rule 82 (factorElement)


state 76

   80 factor: TOKEN_NOT . factorElement

    TOKEN_STR   shift, and go to state 75
    TOKEN_ID    shift, and go to state 77
    TOKEN_INT   shift, and go to state 78
    TOKEN_LPAR  shift, and go to state 79

    factorElement      go to state 106
    functionReference  go to state 85
    variable           go to state 86


state 77

   86 functionReference: TOKEN_ID . TOKEN_LPAR actualParameterList TOKEN_RPAR
   87 variable: TOKEN_ID . groupComponentSelection

    TOKEN_DOT       shift, and go to state 89
    TOKEN_LPAR      shift, and go to state 107
    TOKEN_LBRACKET  shift, and go to state 91

    $default  reduce using rule 89 (groupComponentSelection)

    groupComponentSelection  go to state 92
    componentSelection       go to state 93


state 78

   81 factorElement: TOKEN_INT .

    $default  reduce using rule 81 (factorElement)


state 79

   85 factorElement: TOKEN_LPAR . expression TOKEN_RPAR

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 108
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    factorElement      go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 80

   43 structuredStatement: TOKEN_IF expression . TOKEN_THEN statement
   44                    | TOKEN_IF expression . TOKEN_THEN statement TOKEN_ELSE statement

    TOKEN_THEN  shift, and go to state 109


state 81

   58 expression: simpleExpression . groupRelOpSimExpr
   69 simpleExpression: simpleExpression . addOp term

    TOKEN_OR     shift, and go to state 110
    TOKEN_PLUS   shift, and go to state 111
    TOKEN_MINUS  shift, and go to state 112
    TOKEN_EQ     shift, and go to state 113
    TOKEN_LT     shift, and go to state 114
    TOKEN_LE     shift, and go to state 115
    TOKEN_GT     shift, and go to state 116
    TOKEN_GE     shift, and go to state 117
    TOKEN_NOTEQ  shift, and go to state 118

    $default  reduce using rule 60 (groupRelOpSimExpr)

    groupRelOpSimExpr  go to state 119
    relationalOp       go to state 120
    addOp              go to state 121


state 82

   68 simpleExpression: term .
   73 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 122
    TOKEN_DIV       shift, and go to state 123
    TOKEN_MOD       shift, and go to state 124
    TOKEN_MULTIPLY  shift, and go to state 125

    $default  reduce using rule 68 (simpleExpression)

    mulOp  go to state 126


state 83

   74 term: factor .

    $default  reduce using rule 74 (term)


state 84

   79 factor: factorElement .

    $default  reduce using rule 79 (factor)


state 85

   84 factorElement: functionReference .

    $default  reduce using rule 84 (factorElement)


state 86

   83 factorElement: variable .

    $default  reduce using rule 83 (factorElement)


state 87

   67 simpleExpression: sign . term

    TOKEN_STR   shift, and go to state 75
    TOKEN_NOT   shift, and go to state 76
    TOKEN_ID    shift, and go to state 77
    TOKEN_INT   shift, and go to state 78
    TOKEN_LPAR  shift, and go to state 79

    term               go to state 127
    factor             go to state 83
    factorElement      go to state 84
    functionReference  go to state 85
    variable           go to state 86


state 88

   45 structuredStatement: TOKEN_WHILE expression . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 128


state 89

   90 componentSelection: TOKEN_DOT . TOKEN_ID

    TOKEN_ID  shift, and go to state 129


state 90

   41 procedureStatement: TOKEN_ID TOKEN_LPAR . actualParameterList TOKEN_RPAR

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    $default  reduce using rule 95 (actualParameterList)

    expression           go to state 130
    simpleExpression     go to state 81
    term                 go to state 82
    factor               go to state 83
    factorElement        go to state 84
    functionReference    go to state 85
    variable             go to state 86
    actualParameterList  go to state 131
    expressionList       go to state 132
    sign                 go to state 87


state 91

   91 componentSelection: TOKEN_LBRACKET . expression TOKEN_RBRACKET

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 133
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    factorElement      go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 92

   87 variable: TOKEN_ID groupComponentSelection .

    $default  reduce using rule 87 (variable)


state 93

   88 groupComponentSelection: componentSelection .
   92 componentSelection: componentSelection . TOKEN_DOT TOKEN_ID
   93                   | componentSelection . TOKEN_LBRACKET expression TOKEN_RBRACKET

    TOKEN_DOT       shift, and go to state 134
    TOKEN_LBRACKET  shift, and go to state 135

    $default  reduce using rule 88 (groupComponentSelection)


state 94

   32 compoundStatement: TOKEN_BEGIN statementSequence TOKEN_END .

    $default  reduce using rule 32 (compoundStatement)


state 95

   33 statementSequence: statementSequence TOKEN_SEMICOLON . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 39 (simpleStatement)

    compoundStatement    go to state 54
    statement            go to state 136
    simpleStatement      go to state 57
    assignmentStatement  go to state 58
    procedureStatement   go to state 59
    structuredStatement  go to state 60
    variable             go to state 61


state 96

   40 assignmentStatement: variable TOKEN_ASSIGN . expression

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 137
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    factorElement      go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 97

   49 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE . constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_INT    shift, and go to state 65

    constant  go to state 138
    sign      go to state 67


state 98

   57 constant: sign TOKEN_INT .

    $default  reduce using rule 57 (constant)


state 99

   54 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList . TOKEN_COLON type
   98 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 139


state 100

   55 fieldListSeq: identifierList TOKEN_COLON type .

    $default  reduce using rule 55 (fieldListSeq)


state 101

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@2 TOKEN_LPAR formalParameterList . TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_RPAR  shift, and go to state 140


state 102

   27 formalParameterList: formalParamSeq .
   29 formalParamSeq: formalParamSeq . TOKEN_SEMICOLON identifierList TOKEN_COLON type

    TOKEN_SEMICOLON  shift, and go to state 141

    $default  reduce using rule 27 (formalParameterList)


state 103

   30 formalParamSeq: identifierList . TOKEN_COLON type
   98 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 142


state 104

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@1 TOKEN_LPAR formalParameterList . TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_RPAR  shift, and go to state 143


state 105

   47 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN . expression TOKEN_TO expression @3 TOKEN_DO statement

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 144
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    factorElement      go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 106

   80 factor: TOKEN_NOT factorElement .

    $default  reduce using rule 80 (factor)


state 107

   86 functionReference: TOKEN_ID TOKEN_LPAR . actualParameterList TOKEN_RPAR

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    $default  reduce using rule 95 (actualParameterList)

    expression           go to state 130
    simpleExpression     go to state 81
    term                 go to state 82
    factor               go to state 83
    factorElement        go to state 84
    functionReference    go to state 85
    variable             go to state 86
    actualParameterList  go to state 145
    expressionList       go to state 132
    sign                 go to state 87


state 108

   85 factorElement: TOKEN_LPAR expression . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 146


state 109

   43 structuredStatement: TOKEN_IF expression TOKEN_THEN . statement
   44                    | TOKEN_IF expression TOKEN_THEN . statement TOKEN_ELSE statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 39 (simpleStatement)

    compoundStatement    go to state 54
    statement            go to state 147
    simpleStatement      go to state 57
    assignmentStatement  go to state 58
    procedureStatement   go to state 59
    structuredStatement  go to state 60
    variable             go to state 61


state 110

   72 addOp: TOKEN_OR .

    $default  reduce using rule 72 (addOp)


state 111

   70 addOp: TOKEN_PLUS .

    $default  reduce using rule 70 (addOp)


state 112

   71 addOp: TOKEN_MINUS .

    $default  reduce using rule 71 (addOp)


state 113

   66 relationalOp: TOKEN_EQ .

    $default  reduce using rule 66 (relationalOp)


state 114

   61 relationalOp: TOKEN_LT .

    $default  reduce using rule 61 (relationalOp)


state 115

   62 relationalOp: TOKEN_LE .

    $default  reduce using rule 62 (relationalOp)


state 116

   63 relationalOp: TOKEN_GT .

    $default  reduce using rule 63 (relationalOp)


state 117

   64 relationalOp: TOKEN_GE .

    $default  reduce using rule 64 (relationalOp)


state 118

   65 relationalOp: TOKEN_NOTEQ .

    $default  reduce using rule 65 (relationalOp)


state 119

   58 expression: simpleExpression groupRelOpSimExpr .

    $default  reduce using rule 58 (expression)


state 120

   59 groupRelOpSimExpr: relationalOp . simpleExpression

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    simpleExpression   go to state 148
    term               go to state 82
    factor             go to state 83
    factorElement      go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 121

   69 simpleExpression: simpleExpression addOp . term

    TOKEN_STR   shift, and go to state 75
    TOKEN_NOT   shift, and go to state 76
    TOKEN_ID    shift, and go to state 77
    TOKEN_INT   shift, and go to state 78
    TOKEN_LPAR  shift, and go to state 79

    term               go to state 149
    factor             go to state 83
    factorElement      go to state 84
    functionReference  go to state 85
    variable           go to state 86


state 122

   78 mulOp: TOKEN_AND .

    $default  reduce using rule 78 (mulOp)


state 123

   76 mulOp: TOKEN_DIV .

    $default  reduce using rule 76 (mulOp)


state 124

   77 mulOp: TOKEN_MOD .

    $default  reduce using rule 77 (mulOp)


state 125

   75 mulOp: TOKEN_MULTIPLY .

    $default  reduce using rule 75 (mulOp)


state 126

   73 term: term mulOp . factor

    TOKEN_STR   shift, and go to state 75
    TOKEN_NOT   shift, and go to state 76
    TOKEN_ID    shift, and go to state 77
    TOKEN_INT   shift, and go to state 78
    TOKEN_LPAR  shift, and go to state 79

    factor             go to state 150
    factorElement      go to state 84
    functionReference  go to state 85
    variable           go to state 86


state 127

   67 simpleExpression: sign term .
   73 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 122
    TOKEN_DIV       shift, and go to state 123
    TOKEN_MOD       shift, and go to state 124
    TOKEN_MULTIPLY  shift, and go to state 125

    $default  reduce using rule 67 (simpleExpression)

    mulOp  go to state 126


state 128

   45 structuredStatement: TOKEN_WHILE expression TOKEN_DO . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 39 (simpleStatement)

    compoundStatement    go to state 54
    statement            go to state 151
    simpleStatement      go to state 57
    assignmentStatement  go to state 58
    procedureStatement   go to state 59
    structuredStatement  go to state 60
    variable             go to state 61


state 129

   90 componentSelection: TOKEN_DOT TOKEN_ID .

    $default  reduce using rule 90 (componentSelection)


state 130

   97 expressionList: expression .

    $default  reduce using rule 97 (expressionList)


state 131

   41 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 152


state 132

   94 actualParameterList: expressionList .
   96 expressionList: expressionList . TOKEN_COMMAS expression

    TOKEN_COMMAS  shift, and go to state 153

    $default  reduce using rule 94 (actualParameterList)


state 133

   91 componentSelection: TOKEN_LBRACKET expression . TOKEN_RBRACKET

    TOKEN_RBRACKET  shift, and go to state 154


state 134

   92 componentSelection: componentSelection TOKEN_DOT . TOKEN_ID

    TOKEN_ID  shift, and go to state 155


state 135

   93 componentSelection: componentSelection TOKEN_LBRACKET . expression TOKEN_RBRACKET

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 156
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    factorElement      go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 136

   33 statementSequence: statementSequence TOKEN_SEMICOLON statement .

    $default  reduce using rule 33 (statementSequence)


state 137

   40 assignmentStatement: variable TOKEN_ASSIGN expression .

    $default  reduce using rule 40 (assignmentStatement)


state 138

   49 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant . TOKEN_RBRACKET TOKEN_OF type

    TOKEN_RBRACKET  shift, and go to state 157


state 139

   54 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 158


state 140

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@2 TOKEN_LPAR formalParameterList TOKEN_RPAR . TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_COLON  shift, and go to state 159


state 141

   29 formalParamSeq: formalParamSeq TOKEN_SEMICOLON . identifierList TOKEN_COLON type

    TOKEN_ID  shift, and go to state 17

    identifierList  go to state 160


state 142

   30 formalParamSeq: identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 161


state 143

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@1 TOKEN_LPAR formalParameterList TOKEN_RPAR . TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 162


state 144

   47 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression . TOKEN_TO expression @3 TOKEN_DO statement

    TOKEN_TO  shift, and go to state 163


state 145

   86 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 164


state 146

   85 factorElement: TOKEN_LPAR expression TOKEN_RPAR .

    $default  reduce using rule 85 (factorElement)


state 147

   43 structuredStatement: TOKEN_IF expression TOKEN_THEN statement .
   44                    | TOKEN_IF expression TOKEN_THEN statement . TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 165

    TOKEN_ELSE  [reduce using rule 43 (structuredStatement)]
    $default    reduce using rule 43 (structuredStatement)


state 148

   59 groupRelOpSimExpr: relationalOp simpleExpression .
   69 simpleExpression: simpleExpression . addOp term

    TOKEN_OR     shift, and go to state 110
    TOKEN_PLUS   shift, and go to state 111
    TOKEN_MINUS  shift, and go to state 112

    $default  reduce using rule 59 (groupRelOpSimExpr)

    addOp  go to state 121


state 149

   69 simpleExpression: simpleExpression addOp term .
   73 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 122
    TOKEN_DIV       shift, and go to state 123
    TOKEN_MOD       shift, and go to state 124
    TOKEN_MULTIPLY  shift, and go to state 125

    $default  reduce using rule 69 (simpleExpression)

    mulOp  go to state 126


state 150

   73 term: term mulOp factor .

    $default  reduce using rule 73 (term)


state 151

   45 structuredStatement: TOKEN_WHILE expression TOKEN_DO statement .

    $default  reduce using rule 45 (structuredStatement)


state 152

   41 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR .

    $default  reduce using rule 41 (procedureStatement)


state 153

   96 expressionList: expressionList TOKEN_COMMAS . expression

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 166
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    factorElement      go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 154

   91 componentSelection: TOKEN_LBRACKET expression TOKEN_RBRACKET .

    $default  reduce using rule 91 (componentSelection)


state 155

   92 componentSelection: componentSelection TOKEN_DOT TOKEN_ID .

    $default  reduce using rule 92 (componentSelection)


state 156

   93 componentSelection: componentSelection TOKEN_LBRACKET expression . TOKEN_RBRACKET

    TOKEN_RBRACKET  shift, and go to state 167


state 157

   49 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET . TOKEN_OF type

    TOKEN_OF  shift, and go to state 168


state 158

   54 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type .

    $default  reduce using rule 54 (fieldListSeq)


state 159

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@2 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON . resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 169

    resultType  go to state 170


state 160

   29 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList . TOKEN_COLON type
   98 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 171


state 161

   30 formalParamSeq: identifierList TOKEN_COLON type .

    $default  reduce using rule 30 (formalParamSeq)


state 162

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@1 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON . groupBlockForward TOKEN_SEMICOLON

    TOKEN_FORWARD  shift, and go to state 172
    TOKEN_VAR      shift, and go to state 12

    $default  reduce using rule 5 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 173
    variableDeclarations       go to state 14
    groupBlockForward          go to state 174
    block                      go to state 175


state 163

   47 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO . expression @3 TOKEN_DO statement

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 176
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    factorElement      go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 164

   86 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR .

    $default  reduce using rule 86 (functionReference)


state 165

   44 structuredStatement: TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 39 (simpleStatement)

    compoundStatement    go to state 54
    statement            go to state 177
    simpleStatement      go to state 57
    assignmentStatement  go to state 58
    procedureStatement   go to state 59
    structuredStatement  go to state 60
    variable             go to state 61


state 166

   96 expressionList: expressionList TOKEN_COMMAS expression .

    $default  reduce using rule 96 (expressionList)


state 167

   93 componentSelection: componentSelection TOKEN_LBRACKET expression TOKEN_RBRACKET .

    $default  reduce using rule 93 (componentSelection)


state 168

   49 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 178


state 169

   51 resultType: TOKEN_ID .

    $default  reduce using rule 51 (resultType)


state 170

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@2 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType . TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 179


state 171

   29 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 180


state 172

   26 groupBlockForward: TOKEN_FORWARD .

    $default  reduce using rule 26 (groupBlockForward)


state 173

   31 block: groupVariableDeclarations . compoundStatement

    TOKEN_BEGIN  shift, and go to state 37

    compoundStatement  go to state 181


state 174

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@1 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 182


state 175

   25 groupBlockForward: block .

    $default  reduce using rule 25 (groupBlockForward)


state 176

   47 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression . @3 TOKEN_DO statement

    $default  reduce using rule 46 (@3)

    @3  go to state 183


state 177

   44 structuredStatement: TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE statement .

    $default  reduce using rule 44 (structuredStatement)


state 178

   49 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type .

    $default  reduce using rule 49 (type)


state 179

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@2 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON . groupBlockForward TOKEN_SEMICOLON

    TOKEN_FORWARD  shift, and go to state 172
    TOKEN_VAR      shift, and go to state 12

    $default  reduce using rule 5 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 173
    variableDeclarations       go to state 14
    groupBlockForward          go to state 184
    block                      go to state 175


state 180

   29 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type .

    $default  reduce using rule 29 (formalParamSeq)


state 181

   31 block: groupVariableDeclarations compoundStatement .

    $default  reduce using rule 31 (block)


state 182

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@1 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON .

    $default  reduce using rule 22 (procedureDeclaration)


state 183

   47 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression @3 . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 185


state 184

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@2 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 186


state 185

   47 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression @3 TOKEN_DO . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 39 (simpleStatement)

    compoundStatement    go to state 54
    statement            go to state 187
    simpleStatement      go to state 57
    assignmentStatement  go to state 58
    procedureStatement   go to state 59
    structuredStatement  go to state 60
    variable             go to state 61


state 186

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@2 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON .

    $default  reduce using rule 24 (functionDeclaration)


state 187

   47 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression @3 TOKEN_DO statement .

    $default  reduce using rule 47 (structuredStatement)
