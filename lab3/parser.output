Terminals unused in grammar

   TOKEN_COMMENT
   TOKEN_DIVIDE
   TOKEN_DECIMAL
   TOKEN_EXPNUM


State 146 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    2 groupTypeDefinitions: typeDefinitions
    3                     | /* empty */

    4 groupVariableDeclarations: variableDeclarations
    5                          | /* empty */

    6 groupSubprogramDeclarations: subprogramDeclarations
    7                            | /* empty */

    8 typeDefinitions: TOKEN_TYPE typeDefinitionList

    9 typeDefinitionList: typeDefinitionList typeDefinition
   10                   | typeDefinition

   11 variableDeclarations: TOKEN_VAR variableDeclarationList

   12 variableDeclarationList: variableDeclarationList variableDeclaration
   13                        | variableDeclaration

   14 subprogramDeclarations: subprogramDeclarationList

   15 subprogramDeclarationList: subprogramDeclarationList procedureDeclaration
   16                          | subprogramDeclarationList functionDeclaration
   17                          | procedureDeclaration
   18                          | functionDeclaration

   19 typeDefinition: TOKEN_ID TOKEN_EQ type TOKEN_SEMICOLON

   20 variableDeclaration: identifierList TOKEN_COLON type TOKEN_SEMICOLON

   21 $@1: /* empty */

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList $@1 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

   23 $@2: /* empty */

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@2 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

   25 groupBlockForward: block
   26                  | TOKEN_FORWARD

   27 formalParameterList: formalParamSeq
   28                    | /* empty */

   29 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type
   30               | identifierList TOKEN_COLON type

   31 block: groupVariableDeclarations compoundStatement

   32 compoundStatement: TOKEN_BEGIN statementSequence TOKEN_END

   33 statementSequence: statementSequence TOKEN_SEMICOLON statement
   34                  | statement

   35 statement: groupSimStruStatement

   36 groupSimStruStatement: simpleStatement
   37                      | structuredStatement

   38 simpleStatement: assignmentStatement
   39                | procedureStatement
   40                | /* empty */

   41 assignmentStatement: variable TOKEN_ASSIGN expression

   42 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR

   43 structuredStatement: compoundStatement
   44                    | TOKEN_IF expression TOKEN_THEN statement
   45                    | TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE statement

   46 $@3: /* empty */

   47 structuredStatement: TOKEN_WHILE expression $@3 TOKEN_DO statement

   48 $@4: /* empty */

   49 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression $@4 TOKEN_DO statement

   50 type: TOKEN_ID
   51     | TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

   52 $@5: /* empty */

   53 type: TOKEN_RECORD $@5 fieldList TOKEN_END

   54 resultType: TOKEN_ID

   55 fieldList: fieldListSeq
   56          | /* empty */

   57 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type
   58             | identifierList TOKEN_COLON type

   59 constant: TOKEN_INT
   60         | sign TOKEN_INT

   61 expression: simpleExpression groupRelOpSimExpr

   62 groupRelOpSimExpr: relationalOp simpleExpression
   63                  | /* empty */

   64 relationalOp: TOKEN_LT
   65             | TOKEN_LE
   66             | TOKEN_GT
   67             | TOKEN_GE
   68             | TOKEN_NOTEQ
   69             | TOKEN_EQ

   70 simpleExpression: sign term
   71                 | term
   72                 | simpleExpression addOp term

   73 addOp: TOKEN_PLUS
   74      | TOKEN_MINUS
   75      | TOKEN_OR

   76 term: term mulOp factor
   77     | factor

   78 mulOp: TOKEN_MULTIPLY
   79      | TOKEN_DIV
   80      | TOKEN_MOD
   81      | TOKEN_AND

   82 factor: TOKEN_INT
   83       | TOKEN_STR
   84       | variable
   85       | functionReference
   86       | TOKEN_NOT factor
   87       | TOKEN_LPAR expression TOKEN_RPAR

   88 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR

   89 variable: TOKEN_ID componentSelection

   90 componentSelection: TOKEN_DOT TOKEN_ID componentSelection
   91                   | TOKEN_LBRACKET expression TOKEN_RBRACKET componentSelection
   92                   | /* empty */

   93 actualParameterList: expressionList
   94                    | /* empty */

   95 expressionList: expressionList TOKEN_COMMAS expression
   96               | expression

   97 identifierList: identifierList TOKEN_COMMAS TOKEN_ID
   98               | TOKEN_ID

   99 sign: TOKEN_PLUS
  100     | TOKEN_MINUS


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_COMMENT (258)
TOKEN_STR (259) 83
TOKEN_AND (260) 81
TOKEN_BEGIN (261) 32
TOKEN_FORWARD (262) 26
TOKEN_DIV (263) 79
TOKEN_DO (264) 47 49
TOKEN_ELSE (265) 45
TOKEN_END (266) 32 53
TOKEN_FOR (267) 49
TOKEN_FUNCTION (268) 24
TOKEN_IF (269) 44 45
TOKEN_ARRAY (270) 51
TOKEN_MOD (271) 80
TOKEN_NOT (272) 86
TOKEN_OF (273) 51
TOKEN_OR (274) 75
TOKEN_PROCEDURE (275) 22
TOKEN_PROGRAM (276) 1
TOKEN_RECORD (277) 53
TOKEN_THEN (278) 44 45
TOKEN_TO (279) 49
TOKEN_TYPE (280) 8
TOKEN_VAR (281) 11
TOKEN_WHILE (282) 47
TOKEN_PLUS (283) 73 99
TOKEN_MINUS (284) 74 100
TOKEN_MULTIPLY (285) 78
TOKEN_DIVIDE (286)
TOKEN_EQ (287) 19 69
TOKEN_LT (288) 64
TOKEN_LE (289) 65
TOKEN_GT (290) 66
TOKEN_GE (291) 67
TOKEN_NOTEQ (292) 68
TOKEN_ID (293) 1 19 22 24 42 49 50 54 88 89 90 97 98
TOKEN_INT (294) 59 60 82
TOKEN_DECIMAL (295)
TOKEN_EXPNUM (296)
TOKEN_DOT (297) 1 90
TOKEN_COMMAS (298) 95 97
TOKEN_COLON (299) 20 24 29 30 57 58
TOKEN_SEMICOLON (300) 1 19 20 22 24 29 33 57
TOKEN_ASSIGN (301) 41 49
TOKEN_RANGE (302) 51
TOKEN_LPAR (303) 22 24 42 87 88
TOKEN_RPAR (304) 22 24 42 87 88
TOKEN_LBRACKET (305) 51 91
TOKEN_RBRACKET (306) 51 91
UMINUS (307)
UPLUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
groupTypeDefinitions (56)
    on left: 2 3, on right: 1
groupVariableDeclarations (57)
    on left: 4 5, on right: 1 31
groupSubprogramDeclarations (58)
    on left: 6 7, on right: 1
typeDefinitions (59)
    on left: 8, on right: 2
typeDefinitionList (60)
    on left: 9 10, on right: 8 9
variableDeclarations (61)
    on left: 11, on right: 4
variableDeclarationList (62)
    on left: 12 13, on right: 11 12
subprogramDeclarations (63)
    on left: 14, on right: 6
subprogramDeclarationList (64)
    on left: 15 16 17 18, on right: 14 15 16
typeDefinition (65)
    on left: 19, on right: 9 10
variableDeclaration (66)
    on left: 20, on right: 12 13
procedureDeclaration (67)
    on left: 22, on right: 15 17
$@1 (68)
    on left: 21, on right: 22
functionDeclaration (69)
    on left: 24, on right: 16 18
$@2 (70)
    on left: 23, on right: 24
groupBlockForward (71)
    on left: 25 26, on right: 22 24
formalParameterList (72)
    on left: 27 28, on right: 22 24
formalParamSeq (73)
    on left: 29 30, on right: 27 29
block (74)
    on left: 31, on right: 25
compoundStatement (75)
    on left: 32, on right: 1 31 43
statementSequence (76)
    on left: 33 34, on right: 32 33
statement (77)
    on left: 35, on right: 33 34 44 45 47 49
groupSimStruStatement (78)
    on left: 36 37, on right: 35
simpleStatement (79)
    on left: 38 39 40, on right: 36
assignmentStatement (80)
    on left: 41, on right: 38
procedureStatement (81)
    on left: 42, on right: 39
structuredStatement (82)
    on left: 43 44 45 47 49, on right: 37
$@3 (83)
    on left: 46, on right: 47
$@4 (84)
    on left: 48, on right: 49
type (85)
    on left: 50 51 53, on right: 19 20 29 30 51 57 58
$@5 (86)
    on left: 52, on right: 53
resultType (87)
    on left: 54, on right: 24
fieldList (88)
    on left: 55 56, on right: 53
fieldListSeq (89)
    on left: 57 58, on right: 55 57
constant (90)
    on left: 59 60, on right: 51
expression (91)
    on left: 61, on right: 41 44 45 47 49 87 91 95 96
groupRelOpSimExpr (92)
    on left: 62 63, on right: 61
relationalOp (93)
    on left: 64 65 66 67 68 69, on right: 62
simpleExpression (94)
    on left: 70 71 72, on right: 61 62 72
addOp (95)
    on left: 73 74 75, on right: 72
term (96)
    on left: 76 77, on right: 70 71 72 76
mulOp (97)
    on left: 78 79 80 81, on right: 76
factor (98)
    on left: 82 83 84 85 86 87, on right: 76 77 86
functionReference (99)
    on left: 88, on right: 85
variable (100)
    on left: 89, on right: 41 84
componentSelection (101)
    on left: 90 91 92, on right: 89 90 91
actualParameterList (102)
    on left: 93 94, on right: 42 88
expressionList (103)
    on left: 95 96, on right: 93 95
identifierList (104)
    on left: 97 98, on right: 20 29 30 57 58 97
sign (105)
    on left: 99 100, on right: 60 70


state 0

    0 $accept: . program $end

    TOKEN_PROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    1 program: TOKEN_PROGRAM . TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_ID  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: TOKEN_PROGRAM TOKEN_ID . TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_SEMICOLON  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON . groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_TYPE  shift, and go to state 6

    $default  reduce using rule 3 (groupTypeDefinitions)

    groupTypeDefinitions  go to state 7
    typeDefinitions       go to state 8


state 6

    8 typeDefinitions: TOKEN_TYPE . typeDefinitionList

    TOKEN_ID  shift, and go to state 9

    typeDefinitionList  go to state 10
    typeDefinition      go to state 11


state 7

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions . groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_VAR  shift, and go to state 12

    $default  reduce using rule 5 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 13
    variableDeclarations       go to state 14


state 8

    2 groupTypeDefinitions: typeDefinitions .

    $default  reduce using rule 2 (groupTypeDefinitions)


state 9

   19 typeDefinition: TOKEN_ID . TOKEN_EQ type TOKEN_SEMICOLON

    TOKEN_EQ  shift, and go to state 15


state 10

    8 typeDefinitions: TOKEN_TYPE typeDefinitionList .
    9 typeDefinitionList: typeDefinitionList . typeDefinition

    TOKEN_ID  shift, and go to state 9

    $default  reduce using rule 8 (typeDefinitions)

    typeDefinition  go to state 16


state 11

   10 typeDefinitionList: typeDefinition .

    $default  reduce using rule 10 (typeDefinitionList)


state 12

   11 variableDeclarations: TOKEN_VAR . variableDeclarationList

    TOKEN_ID  shift, and go to state 17

    variableDeclarationList  go to state 18
    variableDeclaration      go to state 19
    identifierList           go to state 20


state 13

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations . groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_FUNCTION   shift, and go to state 21
    TOKEN_PROCEDURE  shift, and go to state 22

    $default  reduce using rule 7 (groupSubprogramDeclarations)

    groupSubprogramDeclarations  go to state 23
    subprogramDeclarations       go to state 24
    subprogramDeclarationList    go to state 25
    procedureDeclaration         go to state 26
    functionDeclaration          go to state 27


state 14

    4 groupVariableDeclarations: variableDeclarations .

    $default  reduce using rule 4 (groupVariableDeclarations)


state 15

   19 typeDefinition: TOKEN_ID TOKEN_EQ . type TOKEN_SEMICOLON

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 31


state 16

    9 typeDefinitionList: typeDefinitionList typeDefinition .

    $default  reduce using rule 9 (typeDefinitionList)


state 17

   98 identifierList: TOKEN_ID .

    $default  reduce using rule 98 (identifierList)


state 18

   11 variableDeclarations: TOKEN_VAR variableDeclarationList .
   12 variableDeclarationList: variableDeclarationList . variableDeclaration

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 11 (variableDeclarations)

    variableDeclaration  go to state 32
    identifierList       go to state 20


state 19

   13 variableDeclarationList: variableDeclaration .

    $default  reduce using rule 13 (variableDeclarationList)


state 20

   20 variableDeclaration: identifierList . TOKEN_COLON type TOKEN_SEMICOLON
   97 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 34


state 21

   24 functionDeclaration: TOKEN_FUNCTION . TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@2 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 35


state 22

   22 procedureDeclaration: TOKEN_PROCEDURE . TOKEN_ID TOKEN_LPAR formalParameterList $@1 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 36


state 23

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations . compoundStatement TOKEN_DOT

    TOKEN_BEGIN  shift, and go to state 37

    compoundStatement  go to state 38


state 24

    6 groupSubprogramDeclarations: subprogramDeclarations .

    $default  reduce using rule 6 (groupSubprogramDeclarations)


state 25

   14 subprogramDeclarations: subprogramDeclarationList .
   15 subprogramDeclarationList: subprogramDeclarationList . procedureDeclaration
   16                          | subprogramDeclarationList . functionDeclaration

    TOKEN_FUNCTION   shift, and go to state 21
    TOKEN_PROCEDURE  shift, and go to state 22

    $default  reduce using rule 14 (subprogramDeclarations)

    procedureDeclaration  go to state 39
    functionDeclaration   go to state 40


state 26

   17 subprogramDeclarationList: procedureDeclaration .

    $default  reduce using rule 17 (subprogramDeclarationList)


state 27

   18 subprogramDeclarationList: functionDeclaration .

    $default  reduce using rule 18 (subprogramDeclarationList)


state 28

   51 type: TOKEN_ARRAY . TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_LBRACKET  shift, and go to state 41


state 29

   53 type: TOKEN_RECORD . $@5 fieldList TOKEN_END

    $default  reduce using rule 52 ($@5)

    $@5  go to state 42


state 30

   50 type: TOKEN_ID .

    $default  reduce using rule 50 (type)


state 31

   19 typeDefinition: TOKEN_ID TOKEN_EQ type . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 43


state 32

   12 variableDeclarationList: variableDeclarationList variableDeclaration .

    $default  reduce using rule 12 (variableDeclarationList)


state 33

   97 identifierList: identifierList TOKEN_COMMAS . TOKEN_ID

    TOKEN_ID  shift, and go to state 44


state 34

   20 variableDeclaration: identifierList TOKEN_COLON . type TOKEN_SEMICOLON

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 45


state 35

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID . TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@2 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_LPAR  shift, and go to state 46


state 36

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID . TOKEN_LPAR formalParameterList $@1 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_LPAR  shift, and go to state 47


state 37

   32 compoundStatement: TOKEN_BEGIN . statementSequence TOKEN_END

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 48
    TOKEN_IF     shift, and go to state 49
    TOKEN_WHILE  shift, and go to state 50
    TOKEN_ID     shift, and go to state 51

    $default  reduce using rule 40 (simpleStatement)

    compoundStatement      go to state 52
    statementSequence      go to state 53
    statement              go to state 54
    groupSimStruStatement  go to state 55
    simpleStatement        go to state 56
    assignmentStatement    go to state 57
    procedureStatement     go to state 58
    structuredStatement    go to state 59
    variable               go to state 60


state 38

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement . TOKEN_DOT

    TOKEN_DOT  shift, and go to state 61


state 39

   15 subprogramDeclarationList: subprogramDeclarationList procedureDeclaration .

    $default  reduce using rule 15 (subprogramDeclarationList)


state 40

   16 subprogramDeclarationList: subprogramDeclarationList functionDeclaration .

    $default  reduce using rule 16 (subprogramDeclarationList)


state 41

   51 type: TOKEN_ARRAY TOKEN_LBRACKET . constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_PLUS   shift, and go to state 62
    TOKEN_MINUS  shift, and go to state 63
    TOKEN_INT    shift, and go to state 64

    constant  go to state 65
    sign      go to state 66


state 42

   53 type: TOKEN_RECORD $@5 . fieldList TOKEN_END

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 56 (fieldList)

    fieldList       go to state 67
    fieldListSeq    go to state 68
    identifierList  go to state 69


state 43

   19 typeDefinition: TOKEN_ID TOKEN_EQ type TOKEN_SEMICOLON .

    $default  reduce using rule 19 (typeDefinition)


state 44

   97 identifierList: identifierList TOKEN_COMMAS TOKEN_ID .

    $default  reduce using rule 97 (identifierList)


state 45

   20 variableDeclaration: identifierList TOKEN_COLON type . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 70


state 46

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR . formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@2 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 28 (formalParameterList)

    formalParameterList  go to state 71
    formalParamSeq       go to state 72
    identifierList       go to state 73


state 47

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR . formalParameterList $@1 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 28 (formalParameterList)

    formalParameterList  go to state 74
    formalParamSeq       go to state 72
    identifierList       go to state 73


state 48

   49 structuredStatement: TOKEN_FOR . TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression $@4 TOKEN_DO statement

    TOKEN_ID  shift, and go to state 75


state 49

   44 structuredStatement: TOKEN_IF . expression TOKEN_THEN statement
   45                    | TOKEN_IF . expression TOKEN_THEN statement TOKEN_ELSE statement

    TOKEN_STR    shift, and go to state 76
    TOKEN_NOT    shift, and go to state 77
    TOKEN_PLUS   shift, and go to state 62
    TOKEN_MINUS  shift, and go to state 63
    TOKEN_ID     shift, and go to state 78
    TOKEN_INT    shift, and go to state 79
    TOKEN_LPAR   shift, and go to state 80

    expression         go to state 81
    simpleExpression   go to state 82
    term               go to state 83
    factor             go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 50

   47 structuredStatement: TOKEN_WHILE . expression $@3 TOKEN_DO statement

    TOKEN_STR    shift, and go to state 76
    TOKEN_NOT    shift, and go to state 77
    TOKEN_PLUS   shift, and go to state 62
    TOKEN_MINUS  shift, and go to state 63
    TOKEN_ID     shift, and go to state 78
    TOKEN_INT    shift, and go to state 79
    TOKEN_LPAR   shift, and go to state 80

    expression         go to state 88
    simpleExpression   go to state 82
    term               go to state 83
    factor             go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 51

   42 procedureStatement: TOKEN_ID . TOKEN_LPAR actualParameterList TOKEN_RPAR
   89 variable: TOKEN_ID . componentSelection

    TOKEN_DOT       shift, and go to state 89
    TOKEN_LPAR      shift, and go to state 90
    TOKEN_LBRACKET  shift, and go to state 91

    $default  reduce using rule 92 (componentSelection)

    componentSelection  go to state 92


state 52

   43 structuredStatement: compoundStatement .

    $default  reduce using rule 43 (structuredStatement)


state 53

   32 compoundStatement: TOKEN_BEGIN statementSequence . TOKEN_END
   33 statementSequence: statementSequence . TOKEN_SEMICOLON statement

    TOKEN_END        shift, and go to state 93
    TOKEN_SEMICOLON  shift, and go to state 94


state 54

   34 statementSequence: statement .

    $default  reduce using rule 34 (statementSequence)


state 55

   35 statement: groupSimStruStatement .

    $default  reduce using rule 35 (statement)


state 56

   36 groupSimStruStatement: simpleStatement .

    $default  reduce using rule 36 (groupSimStruStatement)


state 57

   38 simpleStatement: assignmentStatement .

    $default  reduce using rule 38 (simpleStatement)


state 58

   39 simpleStatement: procedureStatement .

    $default  reduce using rule 39 (simpleStatement)


state 59

   37 groupSimStruStatement: structuredStatement .

    $default  reduce using rule 37 (groupSimStruStatement)


state 60

   41 assignmentStatement: variable . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 95


state 61

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT .

    $default  reduce using rule 1 (program)


state 62

   99 sign: TOKEN_PLUS .

    $default  reduce using rule 99 (sign)


state 63

  100 sign: TOKEN_MINUS .

    $default  reduce using rule 100 (sign)


state 64

   59 constant: TOKEN_INT .

    $default  reduce using rule 59 (constant)


state 65

   51 type: TOKEN_ARRAY TOKEN_LBRACKET constant . TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_RANGE  shift, and go to state 96


state 66

   60 constant: sign . TOKEN_INT

    TOKEN_INT  shift, and go to state 97


state 67

   53 type: TOKEN_RECORD $@5 fieldList . TOKEN_END

    TOKEN_END  shift, and go to state 98


state 68

   55 fieldList: fieldListSeq .
   57 fieldListSeq: fieldListSeq . TOKEN_SEMICOLON identifierList TOKEN_COLON type

    TOKEN_SEMICOLON  shift, and go to state 99

    $default  reduce using rule 55 (fieldList)


state 69

   58 fieldListSeq: identifierList . TOKEN_COLON type
   97 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 100


state 70

   20 variableDeclaration: identifierList TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 20 (variableDeclaration)


state 71

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList . TOKEN_RPAR TOKEN_COLON resultType $@2 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_RPAR  shift, and go to state 101


state 72

   27 formalParameterList: formalParamSeq .
   29 formalParamSeq: formalParamSeq . TOKEN_SEMICOLON identifierList TOKEN_COLON type

    TOKEN_SEMICOLON  shift, and go to state 102

    $default  reduce using rule 27 (formalParameterList)


state 73

   30 formalParamSeq: identifierList . TOKEN_COLON type
   97 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 103


state 74

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList . $@1 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    $default  reduce using rule 21 ($@1)

    $@1  go to state 104


state 75

   49 structuredStatement: TOKEN_FOR TOKEN_ID . TOKEN_ASSIGN expression TOKEN_TO expression $@4 TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 105


state 76

   83 factor: TOKEN_STR .

    $default  reduce using rule 83 (factor)


state 77

   86 factor: TOKEN_NOT . factor

    TOKEN_STR   shift, and go to state 76
    TOKEN_NOT   shift, and go to state 77
    TOKEN_ID    shift, and go to state 78
    TOKEN_INT   shift, and go to state 79
    TOKEN_LPAR  shift, and go to state 80

    factor             go to state 106
    functionReference  go to state 85
    variable           go to state 86


state 78

   88 functionReference: TOKEN_ID . TOKEN_LPAR actualParameterList TOKEN_RPAR
   89 variable: TOKEN_ID . componentSelection

    TOKEN_DOT       shift, and go to state 89
    TOKEN_LPAR      shift, and go to state 107
    TOKEN_LBRACKET  shift, and go to state 91

    $default  reduce using rule 92 (componentSelection)

    componentSelection  go to state 92


state 79

   82 factor: TOKEN_INT .

    $default  reduce using rule 82 (factor)


state 80

   87 factor: TOKEN_LPAR . expression TOKEN_RPAR

    TOKEN_STR    shift, and go to state 76
    TOKEN_NOT    shift, and go to state 77
    TOKEN_PLUS   shift, and go to state 62
    TOKEN_MINUS  shift, and go to state 63
    TOKEN_ID     shift, and go to state 78
    TOKEN_INT    shift, and go to state 79
    TOKEN_LPAR   shift, and go to state 80

    expression         go to state 108
    simpleExpression   go to state 82
    term               go to state 83
    factor             go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 81

   44 structuredStatement: TOKEN_IF expression . TOKEN_THEN statement
   45                    | TOKEN_IF expression . TOKEN_THEN statement TOKEN_ELSE statement

    TOKEN_THEN  shift, and go to state 109


state 82

   61 expression: simpleExpression . groupRelOpSimExpr
   72 simpleExpression: simpleExpression . addOp term

    TOKEN_OR     shift, and go to state 110
    TOKEN_PLUS   shift, and go to state 111
    TOKEN_MINUS  shift, and go to state 112
    TOKEN_EQ     shift, and go to state 113
    TOKEN_LT     shift, and go to state 114
    TOKEN_LE     shift, and go to state 115
    TOKEN_GT     shift, and go to state 116
    TOKEN_GE     shift, and go to state 117
    TOKEN_NOTEQ  shift, and go to state 118

    $default  reduce using rule 63 (groupRelOpSimExpr)

    groupRelOpSimExpr  go to state 119
    relationalOp       go to state 120
    addOp              go to state 121


state 83

   71 simpleExpression: term .
   76 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 122
    TOKEN_DIV       shift, and go to state 123
    TOKEN_MOD       shift, and go to state 124
    TOKEN_MULTIPLY  shift, and go to state 125

    $default  reduce using rule 71 (simpleExpression)

    mulOp  go to state 126


state 84

   77 term: factor .

    $default  reduce using rule 77 (term)


state 85

   85 factor: functionReference .

    $default  reduce using rule 85 (factor)


state 86

   84 factor: variable .

    $default  reduce using rule 84 (factor)


state 87

   70 simpleExpression: sign . term

    TOKEN_STR   shift, and go to state 76
    TOKEN_NOT   shift, and go to state 77
    TOKEN_ID    shift, and go to state 78
    TOKEN_INT   shift, and go to state 79
    TOKEN_LPAR  shift, and go to state 80

    term               go to state 127
    factor             go to state 84
    functionReference  go to state 85
    variable           go to state 86


state 88

   47 structuredStatement: TOKEN_WHILE expression . $@3 TOKEN_DO statement

    $default  reduce using rule 46 ($@3)

    $@3  go to state 128


state 89

   90 componentSelection: TOKEN_DOT . TOKEN_ID componentSelection

    TOKEN_ID  shift, and go to state 129


state 90

   42 procedureStatement: TOKEN_ID TOKEN_LPAR . actualParameterList TOKEN_RPAR

    TOKEN_STR    shift, and go to state 76
    TOKEN_NOT    shift, and go to state 77
    TOKEN_PLUS   shift, and go to state 62
    TOKEN_MINUS  shift, and go to state 63
    TOKEN_ID     shift, and go to state 78
    TOKEN_INT    shift, and go to state 79
    TOKEN_LPAR   shift, and go to state 80

    $default  reduce using rule 94 (actualParameterList)

    expression           go to state 130
    simpleExpression     go to state 82
    term                 go to state 83
    factor               go to state 84
    functionReference    go to state 85
    variable             go to state 86
    actualParameterList  go to state 131
    expressionList       go to state 132
    sign                 go to state 87


state 91

   91 componentSelection: TOKEN_LBRACKET . expression TOKEN_RBRACKET componentSelection

    TOKEN_STR    shift, and go to state 76
    TOKEN_NOT    shift, and go to state 77
    TOKEN_PLUS   shift, and go to state 62
    TOKEN_MINUS  shift, and go to state 63
    TOKEN_ID     shift, and go to state 78
    TOKEN_INT    shift, and go to state 79
    TOKEN_LPAR   shift, and go to state 80

    expression         go to state 133
    simpleExpression   go to state 82
    term               go to state 83
    factor             go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 92

   89 variable: TOKEN_ID componentSelection .

    $default  reduce using rule 89 (variable)


state 93

   32 compoundStatement: TOKEN_BEGIN statementSequence TOKEN_END .

    $default  reduce using rule 32 (compoundStatement)


state 94

   33 statementSequence: statementSequence TOKEN_SEMICOLON . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 48
    TOKEN_IF     shift, and go to state 49
    TOKEN_WHILE  shift, and go to state 50
    TOKEN_ID     shift, and go to state 51

    $default  reduce using rule 40 (simpleStatement)

    compoundStatement      go to state 52
    statement              go to state 134
    groupSimStruStatement  go to state 55
    simpleStatement        go to state 56
    assignmentStatement    go to state 57
    procedureStatement     go to state 58
    structuredStatement    go to state 59
    variable               go to state 60


state 95

   41 assignmentStatement: variable TOKEN_ASSIGN . expression

    TOKEN_STR    shift, and go to state 76
    TOKEN_NOT    shift, and go to state 77
    TOKEN_PLUS   shift, and go to state 62
    TOKEN_MINUS  shift, and go to state 63
    TOKEN_ID     shift, and go to state 78
    TOKEN_INT    shift, and go to state 79
    TOKEN_LPAR   shift, and go to state 80

    expression         go to state 135
    simpleExpression   go to state 82
    term               go to state 83
    factor             go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 96

   51 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE . constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_PLUS   shift, and go to state 62
    TOKEN_MINUS  shift, and go to state 63
    TOKEN_INT    shift, and go to state 64

    constant  go to state 136
    sign      go to state 66


state 97

   60 constant: sign TOKEN_INT .

    $default  reduce using rule 60 (constant)


state 98

   53 type: TOKEN_RECORD $@5 fieldList TOKEN_END .

    $default  reduce using rule 53 (type)


state 99

   57 fieldListSeq: fieldListSeq TOKEN_SEMICOLON . identifierList TOKEN_COLON type

    TOKEN_ID  shift, and go to state 17

    identifierList  go to state 137


state 100

   58 fieldListSeq: identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 138


state 101

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR . TOKEN_COLON resultType $@2 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_COLON  shift, and go to state 139


state 102

   29 formalParamSeq: formalParamSeq TOKEN_SEMICOLON . identifierList TOKEN_COLON type

    TOKEN_ID  shift, and go to state 17

    identifierList  go to state 140


state 103

   30 formalParamSeq: identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 141


state 104

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList $@1 . TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_RPAR  shift, and go to state 142


state 105

   49 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN . expression TOKEN_TO expression $@4 TOKEN_DO statement

    TOKEN_STR    shift, and go to state 76
    TOKEN_NOT    shift, and go to state 77
    TOKEN_PLUS   shift, and go to state 62
    TOKEN_MINUS  shift, and go to state 63
    TOKEN_ID     shift, and go to state 78
    TOKEN_INT    shift, and go to state 79
    TOKEN_LPAR   shift, and go to state 80

    expression         go to state 143
    simpleExpression   go to state 82
    term               go to state 83
    factor             go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 106

   86 factor: TOKEN_NOT factor .

    $default  reduce using rule 86 (factor)


state 107

   88 functionReference: TOKEN_ID TOKEN_LPAR . actualParameterList TOKEN_RPAR

    TOKEN_STR    shift, and go to state 76
    TOKEN_NOT    shift, and go to state 77
    TOKEN_PLUS   shift, and go to state 62
    TOKEN_MINUS  shift, and go to state 63
    TOKEN_ID     shift, and go to state 78
    TOKEN_INT    shift, and go to state 79
    TOKEN_LPAR   shift, and go to state 80

    $default  reduce using rule 94 (actualParameterList)

    expression           go to state 130
    simpleExpression     go to state 82
    term                 go to state 83
    factor               go to state 84
    functionReference    go to state 85
    variable             go to state 86
    actualParameterList  go to state 144
    expressionList       go to state 132
    sign                 go to state 87


state 108

   87 factor: TOKEN_LPAR expression . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 145


state 109

   44 structuredStatement: TOKEN_IF expression TOKEN_THEN . statement
   45                    | TOKEN_IF expression TOKEN_THEN . statement TOKEN_ELSE statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 48
    TOKEN_IF     shift, and go to state 49
    TOKEN_WHILE  shift, and go to state 50
    TOKEN_ID     shift, and go to state 51

    $default  reduce using rule 40 (simpleStatement)

    compoundStatement      go to state 52
    statement              go to state 146
    groupSimStruStatement  go to state 55
    simpleStatement        go to state 56
    assignmentStatement    go to state 57
    procedureStatement     go to state 58
    structuredStatement    go to state 59
    variable               go to state 60


state 110

   75 addOp: TOKEN_OR .

    $default  reduce using rule 75 (addOp)


state 111

   73 addOp: TOKEN_PLUS .

    $default  reduce using rule 73 (addOp)


state 112

   74 addOp: TOKEN_MINUS .

    $default  reduce using rule 74 (addOp)


state 113

   69 relationalOp: TOKEN_EQ .

    $default  reduce using rule 69 (relationalOp)


state 114

   64 relationalOp: TOKEN_LT .

    $default  reduce using rule 64 (relationalOp)


state 115

   65 relationalOp: TOKEN_LE .

    $default  reduce using rule 65 (relationalOp)


state 116

   66 relationalOp: TOKEN_GT .

    $default  reduce using rule 66 (relationalOp)


state 117

   67 relationalOp: TOKEN_GE .

    $default  reduce using rule 67 (relationalOp)


state 118

   68 relationalOp: TOKEN_NOTEQ .

    $default  reduce using rule 68 (relationalOp)


state 119

   61 expression: simpleExpression groupRelOpSimExpr .

    $default  reduce using rule 61 (expression)


state 120

   62 groupRelOpSimExpr: relationalOp . simpleExpression

    TOKEN_STR    shift, and go to state 76
    TOKEN_NOT    shift, and go to state 77
    TOKEN_PLUS   shift, and go to state 62
    TOKEN_MINUS  shift, and go to state 63
    TOKEN_ID     shift, and go to state 78
    TOKEN_INT    shift, and go to state 79
    TOKEN_LPAR   shift, and go to state 80

    simpleExpression   go to state 147
    term               go to state 83
    factor             go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 121

   72 simpleExpression: simpleExpression addOp . term

    TOKEN_STR   shift, and go to state 76
    TOKEN_NOT   shift, and go to state 77
    TOKEN_ID    shift, and go to state 78
    TOKEN_INT   shift, and go to state 79
    TOKEN_LPAR  shift, and go to state 80

    term               go to state 148
    factor             go to state 84
    functionReference  go to state 85
    variable           go to state 86


state 122

   81 mulOp: TOKEN_AND .

    $default  reduce using rule 81 (mulOp)


state 123

   79 mulOp: TOKEN_DIV .

    $default  reduce using rule 79 (mulOp)


state 124

   80 mulOp: TOKEN_MOD .

    $default  reduce using rule 80 (mulOp)


state 125

   78 mulOp: TOKEN_MULTIPLY .

    $default  reduce using rule 78 (mulOp)


state 126

   76 term: term mulOp . factor

    TOKEN_STR   shift, and go to state 76
    TOKEN_NOT   shift, and go to state 77
    TOKEN_ID    shift, and go to state 78
    TOKEN_INT   shift, and go to state 79
    TOKEN_LPAR  shift, and go to state 80

    factor             go to state 149
    functionReference  go to state 85
    variable           go to state 86


state 127

   70 simpleExpression: sign term .
   76 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 122
    TOKEN_DIV       shift, and go to state 123
    TOKEN_MOD       shift, and go to state 124
    TOKEN_MULTIPLY  shift, and go to state 125

    $default  reduce using rule 70 (simpleExpression)

    mulOp  go to state 126


state 128

   47 structuredStatement: TOKEN_WHILE expression $@3 . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 150


state 129

   90 componentSelection: TOKEN_DOT TOKEN_ID . componentSelection

    TOKEN_DOT       shift, and go to state 89
    TOKEN_LBRACKET  shift, and go to state 91

    $default  reduce using rule 92 (componentSelection)

    componentSelection  go to state 151


state 130

   96 expressionList: expression .

    $default  reduce using rule 96 (expressionList)


state 131

   42 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 152


state 132

   93 actualParameterList: expressionList .
   95 expressionList: expressionList . TOKEN_COMMAS expression

    TOKEN_COMMAS  shift, and go to state 153

    $default  reduce using rule 93 (actualParameterList)


state 133

   91 componentSelection: TOKEN_LBRACKET expression . TOKEN_RBRACKET componentSelection

    TOKEN_RBRACKET  shift, and go to state 154


state 134

   33 statementSequence: statementSequence TOKEN_SEMICOLON statement .

    $default  reduce using rule 33 (statementSequence)


state 135

   41 assignmentStatement: variable TOKEN_ASSIGN expression .

    $default  reduce using rule 41 (assignmentStatement)


state 136

   51 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant . TOKEN_RBRACKET TOKEN_OF type

    TOKEN_RBRACKET  shift, and go to state 155


state 137

   57 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList . TOKEN_COLON type
   97 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 156


state 138

   58 fieldListSeq: identifierList TOKEN_COLON type .

    $default  reduce using rule 58 (fieldListSeq)


state 139

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON . resultType $@2 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 157

    resultType  go to state 158


state 140

   29 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList . TOKEN_COLON type
   97 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 159


state 141

   30 formalParamSeq: identifierList TOKEN_COLON type .

    $default  reduce using rule 30 (formalParamSeq)


state 142

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList $@1 TOKEN_RPAR . TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 160


state 143

   49 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression . TOKEN_TO expression $@4 TOKEN_DO statement

    TOKEN_TO  shift, and go to state 161


state 144

   88 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 162


state 145

   87 factor: TOKEN_LPAR expression TOKEN_RPAR .

    $default  reduce using rule 87 (factor)


state 146

   44 structuredStatement: TOKEN_IF expression TOKEN_THEN statement .
   45                    | TOKEN_IF expression TOKEN_THEN statement . TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 163

    TOKEN_ELSE  [reduce using rule 44 (structuredStatement)]
    $default    reduce using rule 44 (structuredStatement)


state 147

   62 groupRelOpSimExpr: relationalOp simpleExpression .
   72 simpleExpression: simpleExpression . addOp term

    TOKEN_OR     shift, and go to state 110
    TOKEN_PLUS   shift, and go to state 111
    TOKEN_MINUS  shift, and go to state 112

    $default  reduce using rule 62 (groupRelOpSimExpr)

    addOp  go to state 121


state 148

   72 simpleExpression: simpleExpression addOp term .
   76 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 122
    TOKEN_DIV       shift, and go to state 123
    TOKEN_MOD       shift, and go to state 124
    TOKEN_MULTIPLY  shift, and go to state 125

    $default  reduce using rule 72 (simpleExpression)

    mulOp  go to state 126


state 149

   76 term: term mulOp factor .

    $default  reduce using rule 76 (term)


state 150

   47 structuredStatement: TOKEN_WHILE expression $@3 TOKEN_DO . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 48
    TOKEN_IF     shift, and go to state 49
    TOKEN_WHILE  shift, and go to state 50
    TOKEN_ID     shift, and go to state 51

    $default  reduce using rule 40 (simpleStatement)

    compoundStatement      go to state 52
    statement              go to state 164
    groupSimStruStatement  go to state 55
    simpleStatement        go to state 56
    assignmentStatement    go to state 57
    procedureStatement     go to state 58
    structuredStatement    go to state 59
    variable               go to state 60


state 151

   90 componentSelection: TOKEN_DOT TOKEN_ID componentSelection .

    $default  reduce using rule 90 (componentSelection)


state 152

   42 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR .

    $default  reduce using rule 42 (procedureStatement)


state 153

   95 expressionList: expressionList TOKEN_COMMAS . expression

    TOKEN_STR    shift, and go to state 76
    TOKEN_NOT    shift, and go to state 77
    TOKEN_PLUS   shift, and go to state 62
    TOKEN_MINUS  shift, and go to state 63
    TOKEN_ID     shift, and go to state 78
    TOKEN_INT    shift, and go to state 79
    TOKEN_LPAR   shift, and go to state 80

    expression         go to state 165
    simpleExpression   go to state 82
    term               go to state 83
    factor             go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 154

   91 componentSelection: TOKEN_LBRACKET expression TOKEN_RBRACKET . componentSelection

    TOKEN_DOT       shift, and go to state 89
    TOKEN_LBRACKET  shift, and go to state 91

    $default  reduce using rule 92 (componentSelection)

    componentSelection  go to state 166


state 155

   51 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET . TOKEN_OF type

    TOKEN_OF  shift, and go to state 167


state 156

   57 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 168


state 157

   54 resultType: TOKEN_ID .

    $default  reduce using rule 54 (resultType)


state 158

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType . $@2 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    $default  reduce using rule 23 ($@2)

    $@2  go to state 169


state 159

   29 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 170


state 160

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList $@1 TOKEN_RPAR TOKEN_SEMICOLON . groupBlockForward TOKEN_SEMICOLON

    TOKEN_FORWARD  shift, and go to state 171
    TOKEN_VAR      shift, and go to state 12

    $default  reduce using rule 5 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 172
    variableDeclarations       go to state 14
    groupBlockForward          go to state 173
    block                      go to state 174


state 161

   49 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO . expression $@4 TOKEN_DO statement

    TOKEN_STR    shift, and go to state 76
    TOKEN_NOT    shift, and go to state 77
    TOKEN_PLUS   shift, and go to state 62
    TOKEN_MINUS  shift, and go to state 63
    TOKEN_ID     shift, and go to state 78
    TOKEN_INT    shift, and go to state 79
    TOKEN_LPAR   shift, and go to state 80

    expression         go to state 175
    simpleExpression   go to state 82
    term               go to state 83
    factor             go to state 84
    functionReference  go to state 85
    variable           go to state 86
    sign               go to state 87


state 162

   88 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR .

    $default  reduce using rule 88 (functionReference)


state 163

   45 structuredStatement: TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 48
    TOKEN_IF     shift, and go to state 49
    TOKEN_WHILE  shift, and go to state 50
    TOKEN_ID     shift, and go to state 51

    $default  reduce using rule 40 (simpleStatement)

    compoundStatement      go to state 52
    statement              go to state 176
    groupSimStruStatement  go to state 55
    simpleStatement        go to state 56
    assignmentStatement    go to state 57
    procedureStatement     go to state 58
    structuredStatement    go to state 59
    variable               go to state 60


state 164

   47 structuredStatement: TOKEN_WHILE expression $@3 TOKEN_DO statement .

    $default  reduce using rule 47 (structuredStatement)


state 165

   95 expressionList: expressionList TOKEN_COMMAS expression .

    $default  reduce using rule 95 (expressionList)


state 166

   91 componentSelection: TOKEN_LBRACKET expression TOKEN_RBRACKET componentSelection .

    $default  reduce using rule 91 (componentSelection)


state 167

   51 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 177


state 168

   57 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type .

    $default  reduce using rule 57 (fieldListSeq)


state 169

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@2 . TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 178


state 170

   29 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type .

    $default  reduce using rule 29 (formalParamSeq)


state 171

   26 groupBlockForward: TOKEN_FORWARD .

    $default  reduce using rule 26 (groupBlockForward)


state 172

   31 block: groupVariableDeclarations . compoundStatement

    TOKEN_BEGIN  shift, and go to state 37

    compoundStatement  go to state 179


state 173

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList $@1 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 180


state 174

   25 groupBlockForward: block .

    $default  reduce using rule 25 (groupBlockForward)


state 175

   49 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression . $@4 TOKEN_DO statement

    $default  reduce using rule 48 ($@4)

    $@4  go to state 181


state 176

   45 structuredStatement: TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE statement .

    $default  reduce using rule 45 (structuredStatement)


state 177

   51 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type .

    $default  reduce using rule 51 (type)


state 178

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@2 TOKEN_SEMICOLON . groupBlockForward TOKEN_SEMICOLON

    TOKEN_FORWARD  shift, and go to state 171
    TOKEN_VAR      shift, and go to state 12

    $default  reduce using rule 5 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 172
    variableDeclarations       go to state 14
    groupBlockForward          go to state 182
    block                      go to state 174


state 179

   31 block: groupVariableDeclarations compoundStatement .

    $default  reduce using rule 31 (block)


state 180

   22 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList $@1 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON .

    $default  reduce using rule 22 (procedureDeclaration)


state 181

   49 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression $@4 . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 183


state 182

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@2 TOKEN_SEMICOLON groupBlockForward . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 184


state 183

   49 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression $@4 TOKEN_DO . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 48
    TOKEN_IF     shift, and go to state 49
    TOKEN_WHILE  shift, and go to state 50
    TOKEN_ID     shift, and go to state 51

    $default  reduce using rule 40 (simpleStatement)

    compoundStatement      go to state 52
    statement              go to state 185
    groupSimStruStatement  go to state 55
    simpleStatement        go to state 56
    assignmentStatement    go to state 57
    procedureStatement     go to state 58
    structuredStatement    go to state 59
    variable               go to state 60


state 184

   24 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@2 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON .

    $default  reduce using rule 24 (functionDeclaration)


state 185

   49 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression $@4 TOKEN_DO statement .

    $default  reduce using rule 49 (structuredStatement)
