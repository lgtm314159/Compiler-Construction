Terminals unused in grammar

   TOKEN_COMMENT
   TOKEN_DIVIDE
   TOKEN_DECIMAL
   TOKEN_EXPNUM


State 145 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 program: TOKEN_PROGRAM TOKEN_ID $@1 TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    3 groupTypeDefinitions: typeDefinitions
    4                     | /* empty */

    5 groupVariableDeclarations: variableDeclarations
    6                          | /* empty */

    7 groupSubprogramDeclarations: subprogramDeclarations
    8                            | /* empty */

    9 typeDefinitions: TOKEN_TYPE typeDefinitionList

   10 typeDefinitionList: typeDefinitionList typeDefinition
   11                   | typeDefinition

   12 variableDeclarations: TOKEN_VAR variableDeclarationList

   13 variableDeclarationList: variableDeclarationList variableDeclaration
   14                        | variableDeclaration

   15 subprogramDeclarations: subprogramDeclarationList

   16 subprogramDeclarationList: subprogramDeclarationList procedureDeclaration
   17                          | subprogramDeclarationList functionDeclaration
   18                          | procedureDeclaration
   19                          | functionDeclaration

   20 typeDefinition: TOKEN_ID TOKEN_EQ type TOKEN_SEMICOLON

   21 variableDeclaration: identifierList TOKEN_COLON type TOKEN_SEMICOLON

   22 $@2: /* empty */

   23 $@3: /* empty */

   24 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@2 TOKEN_LPAR formalParameterList $@3 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

   25 $@4: /* empty */

   26 $@5: /* empty */

   27 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@4 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@5 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

   28 groupBlockForward: block
   29                  | TOKEN_FORWARD

   30 formalParameterList: formalParamSeq
   31                    | /* empty */

   32 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type
   33               | identifierList TOKEN_COLON type

   34 block: groupVariableDeclarations compoundStatement

   35 compoundStatement: TOKEN_BEGIN statementSequence TOKEN_END

   36 statementSequence: statementSequence TOKEN_SEMICOLON statement
   37                  | statement

   38 statement: groupSimStruStatement

   39 groupSimStruStatement: simpleStatement
   40                      | structuredStatement

   41 simpleStatement: assignmentStatement
   42                | procedureStatement
   43                | /* empty */

   44 assignmentStatement: variable TOKEN_ASSIGN expression

   45 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR

   46 structuredStatement: compoundStatement
   47                    | TOKEN_IF expression TOKEN_THEN statement
   48                    | TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE statement

   49 $@6: /* empty */

   50 structuredStatement: TOKEN_WHILE expression $@6 TOKEN_DO statement

   51 $@7: /* empty */

   52 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression $@7 TOKEN_DO statement

   53 type: TOKEN_ID
   54     | TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

   55 $@8: /* empty */

   56 type: TOKEN_RECORD $@8 fieldList TOKEN_END

   57 resultType: TOKEN_ID

   58 fieldList: fieldListSeq
   59          | /* empty */

   60 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type
   61             | identifierList TOKEN_COLON type

   62 constant: TOKEN_INT
   63         | sign TOKEN_INT

   64 expression: simpleExpression groupRelOpSimExpr

   65 groupRelOpSimExpr: relationalOp simpleExpression
   66                  | /* empty */

   67 relationalOp: TOKEN_LT
   68             | TOKEN_LE
   69             | TOKEN_GT
   70             | TOKEN_GE
   71             | TOKEN_NOTEQ
   72             | TOKEN_EQ

   73 simpleExpression: sign term
   74                 | term
   75                 | simpleExpression addOp term

   76 addOp: TOKEN_PLUS
   77      | TOKEN_MINUS
   78      | TOKEN_OR

   79 term: term mulOp factor
   80     | factor

   81 mulOp: TOKEN_MULTIPLY
   82      | TOKEN_DIV
   83      | TOKEN_MOD
   84      | TOKEN_AND

   85 factor: TOKEN_INT
   86       | TOKEN_STR
   87       | variable
   88       | functionReference
   89       | TOKEN_NOT factor
   90       | TOKEN_LPAR expression TOKEN_RPAR

   91 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR

   92 variable: TOKEN_ID componentSelection

   93 componentSelection: TOKEN_DOT TOKEN_ID componentSelection
   94                   | TOKEN_LBRACKET expression TOKEN_RBRACKET componentSelection
   95                   | /* empty */

   96 actualParameterList: expressionList
   97                    | /* empty */

   98 expressionList: expressionList TOKEN_COMMAS expression
   99               | expression

  100 identifierList: identifierList TOKEN_COMMAS TOKEN_ID
  101               | TOKEN_ID

  102 sign: TOKEN_PLUS
  103     | TOKEN_MINUS


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_COMMENT (258)
TOKEN_STR (259) 86
TOKEN_AND (260) 84
TOKEN_BEGIN (261) 35
TOKEN_FORWARD (262) 29
TOKEN_DIV (263) 82
TOKEN_DO (264) 50 52
TOKEN_ELSE (265) 48
TOKEN_END (266) 35 56
TOKEN_FOR (267) 52
TOKEN_FUNCTION (268) 27
TOKEN_IF (269) 47 48
TOKEN_ARRAY (270) 54
TOKEN_MOD (271) 83
TOKEN_NOT (272) 89
TOKEN_OF (273) 54
TOKEN_OR (274) 78
TOKEN_PROCEDURE (275) 24
TOKEN_PROGRAM (276) 2
TOKEN_RECORD (277) 56
TOKEN_THEN (278) 47 48
TOKEN_TO (279) 52
TOKEN_TYPE (280) 9
TOKEN_VAR (281) 12
TOKEN_WHILE (282) 50
TOKEN_PLUS (283) 76 102
TOKEN_MINUS (284) 77 103
TOKEN_MULTIPLY (285) 81
TOKEN_DIVIDE (286)
TOKEN_EQ (287) 20 72
TOKEN_LT (288) 67
TOKEN_LE (289) 68
TOKEN_GT (290) 69
TOKEN_GE (291) 70
TOKEN_NOTEQ (292) 71
TOKEN_ID (293) 2 20 24 27 45 52 53 57 91 92 93 100 101
TOKEN_INT (294) 62 63 85
TOKEN_DECIMAL (295)
TOKEN_EXPNUM (296)
TOKEN_DOT (297) 2 93
TOKEN_COMMAS (298) 98 100
TOKEN_COLON (299) 21 27 32 33 60 61
TOKEN_SEMICOLON (300) 2 20 21 24 27 32 36 60
TOKEN_ASSIGN (301) 44 52
TOKEN_RANGE (302) 54
TOKEN_LPAR (303) 24 27 45 90 91
TOKEN_RPAR (304) 24 27 45 90 91
TOKEN_LBRACKET (305) 54 94
TOKEN_RBRACKET (306) 54 94
UMINUS (307)
UPLUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 2, on right: 0
$@1 (56)
    on left: 1, on right: 2
groupTypeDefinitions (57)
    on left: 3 4, on right: 2
groupVariableDeclarations (58)
    on left: 5 6, on right: 2 34
groupSubprogramDeclarations (59)
    on left: 7 8, on right: 2
typeDefinitions (60)
    on left: 9, on right: 3
typeDefinitionList (61)
    on left: 10 11, on right: 9 10
variableDeclarations (62)
    on left: 12, on right: 5
variableDeclarationList (63)
    on left: 13 14, on right: 12 13
subprogramDeclarations (64)
    on left: 15, on right: 7
subprogramDeclarationList (65)
    on left: 16 17 18 19, on right: 15 16 17
typeDefinition (66)
    on left: 20, on right: 10 11
variableDeclaration (67)
    on left: 21, on right: 13 14
procedureDeclaration (68)
    on left: 24, on right: 16 18
$@2 (69)
    on left: 22, on right: 24
$@3 (70)
    on left: 23, on right: 24
functionDeclaration (71)
    on left: 27, on right: 17 19
$@4 (72)
    on left: 25, on right: 27
$@5 (73)
    on left: 26, on right: 27
groupBlockForward (74)
    on left: 28 29, on right: 24 27
formalParameterList (75)
    on left: 30 31, on right: 24 27
formalParamSeq (76)
    on left: 32 33, on right: 30 32
block (77)
    on left: 34, on right: 28
compoundStatement (78)
    on left: 35, on right: 2 34 46
statementSequence (79)
    on left: 36 37, on right: 35 36
statement (80)
    on left: 38, on right: 36 37 47 48 50 52
groupSimStruStatement (81)
    on left: 39 40, on right: 38
simpleStatement (82)
    on left: 41 42 43, on right: 39
assignmentStatement (83)
    on left: 44, on right: 41
procedureStatement (84)
    on left: 45, on right: 42
structuredStatement (85)
    on left: 46 47 48 50 52, on right: 40
$@6 (86)
    on left: 49, on right: 50
$@7 (87)
    on left: 51, on right: 52
type (88)
    on left: 53 54 56, on right: 20 21 32 33 54 60 61
$@8 (89)
    on left: 55, on right: 56
resultType (90)
    on left: 57, on right: 27
fieldList (91)
    on left: 58 59, on right: 56
fieldListSeq (92)
    on left: 60 61, on right: 58 60
constant (93)
    on left: 62 63, on right: 54
expression (94)
    on left: 64, on right: 44 47 48 50 52 90 94 98 99
groupRelOpSimExpr (95)
    on left: 65 66, on right: 64
relationalOp (96)
    on left: 67 68 69 70 71 72, on right: 65
simpleExpression (97)
    on left: 73 74 75, on right: 64 65 75
addOp (98)
    on left: 76 77 78, on right: 75
term (99)
    on left: 79 80, on right: 73 74 75 79
mulOp (100)
    on left: 81 82 83 84, on right: 79
factor (101)
    on left: 85 86 87 88 89 90, on right: 79 80 89
functionReference (102)
    on left: 91, on right: 88
variable (103)
    on left: 92, on right: 44 87
componentSelection (104)
    on left: 93 94 95, on right: 92 93 94
actualParameterList (105)
    on left: 96 97, on right: 45 91
expressionList (106)
    on left: 98 99, on right: 96 98
identifierList (107)
    on left: 100 101, on right: 21 32 33 60 61 100
sign (108)
    on left: 102 103, on right: 63 73


state 0

    0 $accept: . program $end

    TOKEN_PROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    2 program: TOKEN_PROGRAM . TOKEN_ID $@1 TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_ID  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    2 program: TOKEN_PROGRAM TOKEN_ID . $@1 TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    2 program: TOKEN_PROGRAM TOKEN_ID $@1 . TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_SEMICOLON  shift, and go to state 6


state 6

    2 program: TOKEN_PROGRAM TOKEN_ID $@1 TOKEN_SEMICOLON . groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_TYPE  shift, and go to state 7

    $default  reduce using rule 4 (groupTypeDefinitions)

    groupTypeDefinitions  go to state 8
    typeDefinitions       go to state 9


state 7

    9 typeDefinitions: TOKEN_TYPE . typeDefinitionList

    TOKEN_ID  shift, and go to state 10

    typeDefinitionList  go to state 11
    typeDefinition      go to state 12


state 8

    2 program: TOKEN_PROGRAM TOKEN_ID $@1 TOKEN_SEMICOLON groupTypeDefinitions . groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_VAR  shift, and go to state 13

    $default  reduce using rule 6 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 14
    variableDeclarations       go to state 15


state 9

    3 groupTypeDefinitions: typeDefinitions .

    $default  reduce using rule 3 (groupTypeDefinitions)


state 10

   20 typeDefinition: TOKEN_ID . TOKEN_EQ type TOKEN_SEMICOLON

    TOKEN_EQ  shift, and go to state 16


state 11

    9 typeDefinitions: TOKEN_TYPE typeDefinitionList .
   10 typeDefinitionList: typeDefinitionList . typeDefinition

    TOKEN_ID  shift, and go to state 10

    $default  reduce using rule 9 (typeDefinitions)

    typeDefinition  go to state 17


state 12

   11 typeDefinitionList: typeDefinition .

    $default  reduce using rule 11 (typeDefinitionList)


state 13

   12 variableDeclarations: TOKEN_VAR . variableDeclarationList

    TOKEN_ID  shift, and go to state 18

    variableDeclarationList  go to state 19
    variableDeclaration      go to state 20
    identifierList           go to state 21


state 14

    2 program: TOKEN_PROGRAM TOKEN_ID $@1 TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations . groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_FUNCTION   shift, and go to state 22
    TOKEN_PROCEDURE  shift, and go to state 23

    $default  reduce using rule 8 (groupSubprogramDeclarations)

    groupSubprogramDeclarations  go to state 24
    subprogramDeclarations       go to state 25
    subprogramDeclarationList    go to state 26
    procedureDeclaration         go to state 27
    functionDeclaration          go to state 28


state 15

    5 groupVariableDeclarations: variableDeclarations .

    $default  reduce using rule 5 (groupVariableDeclarations)


state 16

   20 typeDefinition: TOKEN_ID TOKEN_EQ . type TOKEN_SEMICOLON

    TOKEN_ARRAY   shift, and go to state 29
    TOKEN_RECORD  shift, and go to state 30
    TOKEN_ID      shift, and go to state 31

    type  go to state 32


state 17

   10 typeDefinitionList: typeDefinitionList typeDefinition .

    $default  reduce using rule 10 (typeDefinitionList)


state 18

  101 identifierList: TOKEN_ID .

    $default  reduce using rule 101 (identifierList)


state 19

   12 variableDeclarations: TOKEN_VAR variableDeclarationList .
   13 variableDeclarationList: variableDeclarationList . variableDeclaration

    TOKEN_ID  shift, and go to state 18

    $default  reduce using rule 12 (variableDeclarations)

    variableDeclaration  go to state 33
    identifierList       go to state 21


state 20

   14 variableDeclarationList: variableDeclaration .

    $default  reduce using rule 14 (variableDeclarationList)


state 21

   21 variableDeclaration: identifierList . TOKEN_COLON type TOKEN_SEMICOLON
  100 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 34
    TOKEN_COLON   shift, and go to state 35


state 22

   27 functionDeclaration: TOKEN_FUNCTION . TOKEN_ID $@4 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@5 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 36


state 23

   24 procedureDeclaration: TOKEN_PROCEDURE . TOKEN_ID $@2 TOKEN_LPAR formalParameterList $@3 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 37


state 24

    2 program: TOKEN_PROGRAM TOKEN_ID $@1 TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations . compoundStatement TOKEN_DOT

    TOKEN_BEGIN  shift, and go to state 38

    compoundStatement  go to state 39


state 25

    7 groupSubprogramDeclarations: subprogramDeclarations .

    $default  reduce using rule 7 (groupSubprogramDeclarations)


state 26

   15 subprogramDeclarations: subprogramDeclarationList .
   16 subprogramDeclarationList: subprogramDeclarationList . procedureDeclaration
   17                          | subprogramDeclarationList . functionDeclaration

    TOKEN_FUNCTION   shift, and go to state 22
    TOKEN_PROCEDURE  shift, and go to state 23

    $default  reduce using rule 15 (subprogramDeclarations)

    procedureDeclaration  go to state 40
    functionDeclaration   go to state 41


state 27

   18 subprogramDeclarationList: procedureDeclaration .

    $default  reduce using rule 18 (subprogramDeclarationList)


state 28

   19 subprogramDeclarationList: functionDeclaration .

    $default  reduce using rule 19 (subprogramDeclarationList)


state 29

   54 type: TOKEN_ARRAY . TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_LBRACKET  shift, and go to state 42


state 30

   56 type: TOKEN_RECORD . $@8 fieldList TOKEN_END

    $default  reduce using rule 55 ($@8)

    $@8  go to state 43


state 31

   53 type: TOKEN_ID .

    $default  reduce using rule 53 (type)


state 32

   20 typeDefinition: TOKEN_ID TOKEN_EQ type . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 44


state 33

   13 variableDeclarationList: variableDeclarationList variableDeclaration .

    $default  reduce using rule 13 (variableDeclarationList)


state 34

  100 identifierList: identifierList TOKEN_COMMAS . TOKEN_ID

    TOKEN_ID  shift, and go to state 45


state 35

   21 variableDeclaration: identifierList TOKEN_COLON . type TOKEN_SEMICOLON

    TOKEN_ARRAY   shift, and go to state 29
    TOKEN_RECORD  shift, and go to state 30
    TOKEN_ID      shift, and go to state 31

    type  go to state 46


state 36

   27 functionDeclaration: TOKEN_FUNCTION TOKEN_ID . $@4 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@5 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    $default  reduce using rule 25 ($@4)

    $@4  go to state 47


state 37

   24 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID . $@2 TOKEN_LPAR formalParameterList $@3 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    $default  reduce using rule 22 ($@2)

    $@2  go to state 48


state 38

   35 compoundStatement: TOKEN_BEGIN . statementSequence TOKEN_END

    TOKEN_BEGIN  shift, and go to state 38
    TOKEN_FOR    shift, and go to state 49
    TOKEN_IF     shift, and go to state 50
    TOKEN_WHILE  shift, and go to state 51
    TOKEN_ID     shift, and go to state 52

    $default  reduce using rule 43 (simpleStatement)

    compoundStatement      go to state 53
    statementSequence      go to state 54
    statement              go to state 55
    groupSimStruStatement  go to state 56
    simpleStatement        go to state 57
    assignmentStatement    go to state 58
    procedureStatement     go to state 59
    structuredStatement    go to state 60
    variable               go to state 61


state 39

    2 program: TOKEN_PROGRAM TOKEN_ID $@1 TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement . TOKEN_DOT

    TOKEN_DOT  shift, and go to state 62


state 40

   16 subprogramDeclarationList: subprogramDeclarationList procedureDeclaration .

    $default  reduce using rule 16 (subprogramDeclarationList)


state 41

   17 subprogramDeclarationList: subprogramDeclarationList functionDeclaration .

    $default  reduce using rule 17 (subprogramDeclarationList)


state 42

   54 type: TOKEN_ARRAY TOKEN_LBRACKET . constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_INT    shift, and go to state 65

    constant  go to state 66
    sign      go to state 67


state 43

   56 type: TOKEN_RECORD $@8 . fieldList TOKEN_END

    TOKEN_ID  shift, and go to state 18

    $default  reduce using rule 59 (fieldList)

    fieldList       go to state 68
    fieldListSeq    go to state 69
    identifierList  go to state 70


state 44

   20 typeDefinition: TOKEN_ID TOKEN_EQ type TOKEN_SEMICOLON .

    $default  reduce using rule 20 (typeDefinition)


state 45

  100 identifierList: identifierList TOKEN_COMMAS TOKEN_ID .

    $default  reduce using rule 100 (identifierList)


state 46

   21 variableDeclaration: identifierList TOKEN_COLON type . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 71


state 47

   27 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@4 . TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@5 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_LPAR  shift, and go to state 72


state 48

   24 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@2 . TOKEN_LPAR formalParameterList $@3 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_LPAR  shift, and go to state 73


state 49

   52 structuredStatement: TOKEN_FOR . TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression $@7 TOKEN_DO statement

    TOKEN_ID  shift, and go to state 74


state 50

   47 structuredStatement: TOKEN_IF . expression TOKEN_THEN statement
   48                    | TOKEN_IF . expression TOKEN_THEN statement TOKEN_ELSE statement

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 80
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    functionReference  go to state 84
    variable           go to state 85
    sign               go to state 86


state 51

   50 structuredStatement: TOKEN_WHILE . expression $@6 TOKEN_DO statement

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 87
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    functionReference  go to state 84
    variable           go to state 85
    sign               go to state 86


state 52

   45 procedureStatement: TOKEN_ID . TOKEN_LPAR actualParameterList TOKEN_RPAR
   92 variable: TOKEN_ID . componentSelection

    TOKEN_DOT       shift, and go to state 88
    TOKEN_LPAR      shift, and go to state 89
    TOKEN_LBRACKET  shift, and go to state 90

    $default  reduce using rule 95 (componentSelection)

    componentSelection  go to state 91


state 53

   46 structuredStatement: compoundStatement .

    $default  reduce using rule 46 (structuredStatement)


state 54

   35 compoundStatement: TOKEN_BEGIN statementSequence . TOKEN_END
   36 statementSequence: statementSequence . TOKEN_SEMICOLON statement

    TOKEN_END        shift, and go to state 92
    TOKEN_SEMICOLON  shift, and go to state 93


state 55

   37 statementSequence: statement .

    $default  reduce using rule 37 (statementSequence)


state 56

   38 statement: groupSimStruStatement .

    $default  reduce using rule 38 (statement)


state 57

   39 groupSimStruStatement: simpleStatement .

    $default  reduce using rule 39 (groupSimStruStatement)


state 58

   41 simpleStatement: assignmentStatement .

    $default  reduce using rule 41 (simpleStatement)


state 59

   42 simpleStatement: procedureStatement .

    $default  reduce using rule 42 (simpleStatement)


state 60

   40 groupSimStruStatement: structuredStatement .

    $default  reduce using rule 40 (groupSimStruStatement)


state 61

   44 assignmentStatement: variable . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 94


state 62

    2 program: TOKEN_PROGRAM TOKEN_ID $@1 TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT .

    $default  reduce using rule 2 (program)


state 63

  102 sign: TOKEN_PLUS .

    $default  reduce using rule 102 (sign)


state 64

  103 sign: TOKEN_MINUS .

    $default  reduce using rule 103 (sign)


state 65

   62 constant: TOKEN_INT .

    $default  reduce using rule 62 (constant)


state 66

   54 type: TOKEN_ARRAY TOKEN_LBRACKET constant . TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_RANGE  shift, and go to state 95


state 67

   63 constant: sign . TOKEN_INT

    TOKEN_INT  shift, and go to state 96


state 68

   56 type: TOKEN_RECORD $@8 fieldList . TOKEN_END

    TOKEN_END  shift, and go to state 97


state 69

   58 fieldList: fieldListSeq .
   60 fieldListSeq: fieldListSeq . TOKEN_SEMICOLON identifierList TOKEN_COLON type

    TOKEN_SEMICOLON  shift, and go to state 98

    $default  reduce using rule 58 (fieldList)


state 70

   61 fieldListSeq: identifierList . TOKEN_COLON type
  100 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 34
    TOKEN_COLON   shift, and go to state 99


state 71

   21 variableDeclaration: identifierList TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 21 (variableDeclaration)


state 72

   27 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@4 TOKEN_LPAR . formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@5 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 18

    $default  reduce using rule 31 (formalParameterList)

    formalParameterList  go to state 100
    formalParamSeq       go to state 101
    identifierList       go to state 102


state 73

   24 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@2 TOKEN_LPAR . formalParameterList $@3 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 18

    $default  reduce using rule 31 (formalParameterList)

    formalParameterList  go to state 103
    formalParamSeq       go to state 101
    identifierList       go to state 102


state 74

   52 structuredStatement: TOKEN_FOR TOKEN_ID . TOKEN_ASSIGN expression TOKEN_TO expression $@7 TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 104


state 75

   86 factor: TOKEN_STR .

    $default  reduce using rule 86 (factor)


state 76

   89 factor: TOKEN_NOT . factor

    TOKEN_STR   shift, and go to state 75
    TOKEN_NOT   shift, and go to state 76
    TOKEN_ID    shift, and go to state 77
    TOKEN_INT   shift, and go to state 78
    TOKEN_LPAR  shift, and go to state 79

    factor             go to state 105
    functionReference  go to state 84
    variable           go to state 85


state 77

   91 functionReference: TOKEN_ID . TOKEN_LPAR actualParameterList TOKEN_RPAR
   92 variable: TOKEN_ID . componentSelection

    TOKEN_DOT       shift, and go to state 88
    TOKEN_LPAR      shift, and go to state 106
    TOKEN_LBRACKET  shift, and go to state 90

    $default  reduce using rule 95 (componentSelection)

    componentSelection  go to state 91


state 78

   85 factor: TOKEN_INT .

    $default  reduce using rule 85 (factor)


state 79

   90 factor: TOKEN_LPAR . expression TOKEN_RPAR

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 107
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    functionReference  go to state 84
    variable           go to state 85
    sign               go to state 86


state 80

   47 structuredStatement: TOKEN_IF expression . TOKEN_THEN statement
   48                    | TOKEN_IF expression . TOKEN_THEN statement TOKEN_ELSE statement

    TOKEN_THEN  shift, and go to state 108


state 81

   64 expression: simpleExpression . groupRelOpSimExpr
   75 simpleExpression: simpleExpression . addOp term

    TOKEN_OR     shift, and go to state 109
    TOKEN_PLUS   shift, and go to state 110
    TOKEN_MINUS  shift, and go to state 111
    TOKEN_EQ     shift, and go to state 112
    TOKEN_LT     shift, and go to state 113
    TOKEN_LE     shift, and go to state 114
    TOKEN_GT     shift, and go to state 115
    TOKEN_GE     shift, and go to state 116
    TOKEN_NOTEQ  shift, and go to state 117

    $default  reduce using rule 66 (groupRelOpSimExpr)

    groupRelOpSimExpr  go to state 118
    relationalOp       go to state 119
    addOp              go to state 120


state 82

   74 simpleExpression: term .
   79 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 121
    TOKEN_DIV       shift, and go to state 122
    TOKEN_MOD       shift, and go to state 123
    TOKEN_MULTIPLY  shift, and go to state 124

    $default  reduce using rule 74 (simpleExpression)

    mulOp  go to state 125


state 83

   80 term: factor .

    $default  reduce using rule 80 (term)


state 84

   88 factor: functionReference .

    $default  reduce using rule 88 (factor)


state 85

   87 factor: variable .

    $default  reduce using rule 87 (factor)


state 86

   73 simpleExpression: sign . term

    TOKEN_STR   shift, and go to state 75
    TOKEN_NOT   shift, and go to state 76
    TOKEN_ID    shift, and go to state 77
    TOKEN_INT   shift, and go to state 78
    TOKEN_LPAR  shift, and go to state 79

    term               go to state 126
    factor             go to state 83
    functionReference  go to state 84
    variable           go to state 85


state 87

   50 structuredStatement: TOKEN_WHILE expression . $@6 TOKEN_DO statement

    $default  reduce using rule 49 ($@6)

    $@6  go to state 127


state 88

   93 componentSelection: TOKEN_DOT . TOKEN_ID componentSelection

    TOKEN_ID  shift, and go to state 128


state 89

   45 procedureStatement: TOKEN_ID TOKEN_LPAR . actualParameterList TOKEN_RPAR

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    $default  reduce using rule 97 (actualParameterList)

    expression           go to state 129
    simpleExpression     go to state 81
    term                 go to state 82
    factor               go to state 83
    functionReference    go to state 84
    variable             go to state 85
    actualParameterList  go to state 130
    expressionList       go to state 131
    sign                 go to state 86


state 90

   94 componentSelection: TOKEN_LBRACKET . expression TOKEN_RBRACKET componentSelection

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 132
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    functionReference  go to state 84
    variable           go to state 85
    sign               go to state 86


state 91

   92 variable: TOKEN_ID componentSelection .

    $default  reduce using rule 92 (variable)


state 92

   35 compoundStatement: TOKEN_BEGIN statementSequence TOKEN_END .

    $default  reduce using rule 35 (compoundStatement)


state 93

   36 statementSequence: statementSequence TOKEN_SEMICOLON . statement

    TOKEN_BEGIN  shift, and go to state 38
    TOKEN_FOR    shift, and go to state 49
    TOKEN_IF     shift, and go to state 50
    TOKEN_WHILE  shift, and go to state 51
    TOKEN_ID     shift, and go to state 52

    $default  reduce using rule 43 (simpleStatement)

    compoundStatement      go to state 53
    statement              go to state 133
    groupSimStruStatement  go to state 56
    simpleStatement        go to state 57
    assignmentStatement    go to state 58
    procedureStatement     go to state 59
    structuredStatement    go to state 60
    variable               go to state 61


state 94

   44 assignmentStatement: variable TOKEN_ASSIGN . expression

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 134
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    functionReference  go to state 84
    variable           go to state 85
    sign               go to state 86


state 95

   54 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE . constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_INT    shift, and go to state 65

    constant  go to state 135
    sign      go to state 67


state 96

   63 constant: sign TOKEN_INT .

    $default  reduce using rule 63 (constant)


state 97

   56 type: TOKEN_RECORD $@8 fieldList TOKEN_END .

    $default  reduce using rule 56 (type)


state 98

   60 fieldListSeq: fieldListSeq TOKEN_SEMICOLON . identifierList TOKEN_COLON type

    TOKEN_ID  shift, and go to state 18

    identifierList  go to state 136


state 99

   61 fieldListSeq: identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 29
    TOKEN_RECORD  shift, and go to state 30
    TOKEN_ID      shift, and go to state 31

    type  go to state 137


state 100

   27 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@4 TOKEN_LPAR formalParameterList . TOKEN_RPAR TOKEN_COLON resultType $@5 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_RPAR  shift, and go to state 138


state 101

   30 formalParameterList: formalParamSeq .
   32 formalParamSeq: formalParamSeq . TOKEN_SEMICOLON identifierList TOKEN_COLON type

    TOKEN_SEMICOLON  shift, and go to state 139

    $default  reduce using rule 30 (formalParameterList)


state 102

   33 formalParamSeq: identifierList . TOKEN_COLON type
  100 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 34
    TOKEN_COLON   shift, and go to state 140


state 103

   24 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@2 TOKEN_LPAR formalParameterList . $@3 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    $default  reduce using rule 23 ($@3)

    $@3  go to state 141


state 104

   52 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN . expression TOKEN_TO expression $@7 TOKEN_DO statement

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 142
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    functionReference  go to state 84
    variable           go to state 85
    sign               go to state 86


state 105

   89 factor: TOKEN_NOT factor .

    $default  reduce using rule 89 (factor)


state 106

   91 functionReference: TOKEN_ID TOKEN_LPAR . actualParameterList TOKEN_RPAR

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    $default  reduce using rule 97 (actualParameterList)

    expression           go to state 129
    simpleExpression     go to state 81
    term                 go to state 82
    factor               go to state 83
    functionReference    go to state 84
    variable             go to state 85
    actualParameterList  go to state 143
    expressionList       go to state 131
    sign                 go to state 86


state 107

   90 factor: TOKEN_LPAR expression . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 144


state 108

   47 structuredStatement: TOKEN_IF expression TOKEN_THEN . statement
   48                    | TOKEN_IF expression TOKEN_THEN . statement TOKEN_ELSE statement

    TOKEN_BEGIN  shift, and go to state 38
    TOKEN_FOR    shift, and go to state 49
    TOKEN_IF     shift, and go to state 50
    TOKEN_WHILE  shift, and go to state 51
    TOKEN_ID     shift, and go to state 52

    $default  reduce using rule 43 (simpleStatement)

    compoundStatement      go to state 53
    statement              go to state 145
    groupSimStruStatement  go to state 56
    simpleStatement        go to state 57
    assignmentStatement    go to state 58
    procedureStatement     go to state 59
    structuredStatement    go to state 60
    variable               go to state 61


state 109

   78 addOp: TOKEN_OR .

    $default  reduce using rule 78 (addOp)


state 110

   76 addOp: TOKEN_PLUS .

    $default  reduce using rule 76 (addOp)


state 111

   77 addOp: TOKEN_MINUS .

    $default  reduce using rule 77 (addOp)


state 112

   72 relationalOp: TOKEN_EQ .

    $default  reduce using rule 72 (relationalOp)


state 113

   67 relationalOp: TOKEN_LT .

    $default  reduce using rule 67 (relationalOp)


state 114

   68 relationalOp: TOKEN_LE .

    $default  reduce using rule 68 (relationalOp)


state 115

   69 relationalOp: TOKEN_GT .

    $default  reduce using rule 69 (relationalOp)


state 116

   70 relationalOp: TOKEN_GE .

    $default  reduce using rule 70 (relationalOp)


state 117

   71 relationalOp: TOKEN_NOTEQ .

    $default  reduce using rule 71 (relationalOp)


state 118

   64 expression: simpleExpression groupRelOpSimExpr .

    $default  reduce using rule 64 (expression)


state 119

   65 groupRelOpSimExpr: relationalOp . simpleExpression

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    simpleExpression   go to state 146
    term               go to state 82
    factor             go to state 83
    functionReference  go to state 84
    variable           go to state 85
    sign               go to state 86


state 120

   75 simpleExpression: simpleExpression addOp . term

    TOKEN_STR   shift, and go to state 75
    TOKEN_NOT   shift, and go to state 76
    TOKEN_ID    shift, and go to state 77
    TOKEN_INT   shift, and go to state 78
    TOKEN_LPAR  shift, and go to state 79

    term               go to state 147
    factor             go to state 83
    functionReference  go to state 84
    variable           go to state 85


state 121

   84 mulOp: TOKEN_AND .

    $default  reduce using rule 84 (mulOp)


state 122

   82 mulOp: TOKEN_DIV .

    $default  reduce using rule 82 (mulOp)


state 123

   83 mulOp: TOKEN_MOD .

    $default  reduce using rule 83 (mulOp)


state 124

   81 mulOp: TOKEN_MULTIPLY .

    $default  reduce using rule 81 (mulOp)


state 125

   79 term: term mulOp . factor

    TOKEN_STR   shift, and go to state 75
    TOKEN_NOT   shift, and go to state 76
    TOKEN_ID    shift, and go to state 77
    TOKEN_INT   shift, and go to state 78
    TOKEN_LPAR  shift, and go to state 79

    factor             go to state 148
    functionReference  go to state 84
    variable           go to state 85


state 126

   73 simpleExpression: sign term .
   79 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 121
    TOKEN_DIV       shift, and go to state 122
    TOKEN_MOD       shift, and go to state 123
    TOKEN_MULTIPLY  shift, and go to state 124

    $default  reduce using rule 73 (simpleExpression)

    mulOp  go to state 125


state 127

   50 structuredStatement: TOKEN_WHILE expression $@6 . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 149


state 128

   93 componentSelection: TOKEN_DOT TOKEN_ID . componentSelection

    TOKEN_DOT       shift, and go to state 88
    TOKEN_LBRACKET  shift, and go to state 90

    $default  reduce using rule 95 (componentSelection)

    componentSelection  go to state 150


state 129

   99 expressionList: expression .

    $default  reduce using rule 99 (expressionList)


state 130

   45 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 151


state 131

   96 actualParameterList: expressionList .
   98 expressionList: expressionList . TOKEN_COMMAS expression

    TOKEN_COMMAS  shift, and go to state 152

    $default  reduce using rule 96 (actualParameterList)


state 132

   94 componentSelection: TOKEN_LBRACKET expression . TOKEN_RBRACKET componentSelection

    TOKEN_RBRACKET  shift, and go to state 153


state 133

   36 statementSequence: statementSequence TOKEN_SEMICOLON statement .

    $default  reduce using rule 36 (statementSequence)


state 134

   44 assignmentStatement: variable TOKEN_ASSIGN expression .

    $default  reduce using rule 44 (assignmentStatement)


state 135

   54 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant . TOKEN_RBRACKET TOKEN_OF type

    TOKEN_RBRACKET  shift, and go to state 154


state 136

   60 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList . TOKEN_COLON type
  100 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 34
    TOKEN_COLON   shift, and go to state 155


state 137

   61 fieldListSeq: identifierList TOKEN_COLON type .

    $default  reduce using rule 61 (fieldListSeq)


state 138

   27 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@4 TOKEN_LPAR formalParameterList TOKEN_RPAR . TOKEN_COLON resultType $@5 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_COLON  shift, and go to state 156


state 139

   32 formalParamSeq: formalParamSeq TOKEN_SEMICOLON . identifierList TOKEN_COLON type

    TOKEN_ID  shift, and go to state 18

    identifierList  go to state 157


state 140

   33 formalParamSeq: identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 29
    TOKEN_RECORD  shift, and go to state 30
    TOKEN_ID      shift, and go to state 31

    type  go to state 158


state 141

   24 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@2 TOKEN_LPAR formalParameterList $@3 . TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_RPAR  shift, and go to state 159


state 142

   52 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression . TOKEN_TO expression $@7 TOKEN_DO statement

    TOKEN_TO  shift, and go to state 160


state 143

   91 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 161


state 144

   90 factor: TOKEN_LPAR expression TOKEN_RPAR .

    $default  reduce using rule 90 (factor)


state 145

   47 structuredStatement: TOKEN_IF expression TOKEN_THEN statement .
   48                    | TOKEN_IF expression TOKEN_THEN statement . TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 162

    TOKEN_ELSE  [reduce using rule 47 (structuredStatement)]
    $default    reduce using rule 47 (structuredStatement)


state 146

   65 groupRelOpSimExpr: relationalOp simpleExpression .
   75 simpleExpression: simpleExpression . addOp term

    TOKEN_OR     shift, and go to state 109
    TOKEN_PLUS   shift, and go to state 110
    TOKEN_MINUS  shift, and go to state 111

    $default  reduce using rule 65 (groupRelOpSimExpr)

    addOp  go to state 120


state 147

   75 simpleExpression: simpleExpression addOp term .
   79 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 121
    TOKEN_DIV       shift, and go to state 122
    TOKEN_MOD       shift, and go to state 123
    TOKEN_MULTIPLY  shift, and go to state 124

    $default  reduce using rule 75 (simpleExpression)

    mulOp  go to state 125


state 148

   79 term: term mulOp factor .

    $default  reduce using rule 79 (term)


state 149

   50 structuredStatement: TOKEN_WHILE expression $@6 TOKEN_DO . statement

    TOKEN_BEGIN  shift, and go to state 38
    TOKEN_FOR    shift, and go to state 49
    TOKEN_IF     shift, and go to state 50
    TOKEN_WHILE  shift, and go to state 51
    TOKEN_ID     shift, and go to state 52

    $default  reduce using rule 43 (simpleStatement)

    compoundStatement      go to state 53
    statement              go to state 163
    groupSimStruStatement  go to state 56
    simpleStatement        go to state 57
    assignmentStatement    go to state 58
    procedureStatement     go to state 59
    structuredStatement    go to state 60
    variable               go to state 61


state 150

   93 componentSelection: TOKEN_DOT TOKEN_ID componentSelection .

    $default  reduce using rule 93 (componentSelection)


state 151

   45 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR .

    $default  reduce using rule 45 (procedureStatement)


state 152

   98 expressionList: expressionList TOKEN_COMMAS . expression

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 164
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    functionReference  go to state 84
    variable           go to state 85
    sign               go to state 86


state 153

   94 componentSelection: TOKEN_LBRACKET expression TOKEN_RBRACKET . componentSelection

    TOKEN_DOT       shift, and go to state 88
    TOKEN_LBRACKET  shift, and go to state 90

    $default  reduce using rule 95 (componentSelection)

    componentSelection  go to state 165


state 154

   54 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET . TOKEN_OF type

    TOKEN_OF  shift, and go to state 166


state 155

   60 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 29
    TOKEN_RECORD  shift, and go to state 30
    TOKEN_ID      shift, and go to state 31

    type  go to state 167


state 156

   27 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@4 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON . resultType $@5 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 168

    resultType  go to state 169


state 157

   32 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList . TOKEN_COLON type
  100 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 34
    TOKEN_COLON   shift, and go to state 170


state 158

   33 formalParamSeq: identifierList TOKEN_COLON type .

    $default  reduce using rule 33 (formalParamSeq)


state 159

   24 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@2 TOKEN_LPAR formalParameterList $@3 TOKEN_RPAR . TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 171


state 160

   52 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO . expression $@7 TOKEN_DO statement

    TOKEN_STR    shift, and go to state 75
    TOKEN_NOT    shift, and go to state 76
    TOKEN_PLUS   shift, and go to state 63
    TOKEN_MINUS  shift, and go to state 64
    TOKEN_ID     shift, and go to state 77
    TOKEN_INT    shift, and go to state 78
    TOKEN_LPAR   shift, and go to state 79

    expression         go to state 172
    simpleExpression   go to state 81
    term               go to state 82
    factor             go to state 83
    functionReference  go to state 84
    variable           go to state 85
    sign               go to state 86


state 161

   91 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR .

    $default  reduce using rule 91 (functionReference)


state 162

   48 structuredStatement: TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE . statement

    TOKEN_BEGIN  shift, and go to state 38
    TOKEN_FOR    shift, and go to state 49
    TOKEN_IF     shift, and go to state 50
    TOKEN_WHILE  shift, and go to state 51
    TOKEN_ID     shift, and go to state 52

    $default  reduce using rule 43 (simpleStatement)

    compoundStatement      go to state 53
    statement              go to state 173
    groupSimStruStatement  go to state 56
    simpleStatement        go to state 57
    assignmentStatement    go to state 58
    procedureStatement     go to state 59
    structuredStatement    go to state 60
    variable               go to state 61


state 163

   50 structuredStatement: TOKEN_WHILE expression $@6 TOKEN_DO statement .

    $default  reduce using rule 50 (structuredStatement)


state 164

   98 expressionList: expressionList TOKEN_COMMAS expression .

    $default  reduce using rule 98 (expressionList)


state 165

   94 componentSelection: TOKEN_LBRACKET expression TOKEN_RBRACKET componentSelection .

    $default  reduce using rule 94 (componentSelection)


state 166

   54 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF . type

    TOKEN_ARRAY   shift, and go to state 29
    TOKEN_RECORD  shift, and go to state 30
    TOKEN_ID      shift, and go to state 31

    type  go to state 174


state 167

   60 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type .

    $default  reduce using rule 60 (fieldListSeq)


state 168

   57 resultType: TOKEN_ID .

    $default  reduce using rule 57 (resultType)


state 169

   27 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@4 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType . $@5 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    $default  reduce using rule 26 ($@5)

    $@5  go to state 175


state 170

   32 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 29
    TOKEN_RECORD  shift, and go to state 30
    TOKEN_ID      shift, and go to state 31

    type  go to state 176


state 171

   24 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@2 TOKEN_LPAR formalParameterList $@3 TOKEN_RPAR TOKEN_SEMICOLON . groupBlockForward TOKEN_SEMICOLON

    TOKEN_FORWARD  shift, and go to state 177
    TOKEN_VAR      shift, and go to state 13

    $default  reduce using rule 6 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 178
    variableDeclarations       go to state 15
    groupBlockForward          go to state 179
    block                      go to state 180


state 172

   52 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression . $@7 TOKEN_DO statement

    $default  reduce using rule 51 ($@7)

    $@7  go to state 181


state 173

   48 structuredStatement: TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE statement .

    $default  reduce using rule 48 (structuredStatement)


state 174

   54 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type .

    $default  reduce using rule 54 (type)


state 175

   27 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@4 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@5 . TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 182


state 176

   32 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type .

    $default  reduce using rule 32 (formalParamSeq)


state 177

   29 groupBlockForward: TOKEN_FORWARD .

    $default  reduce using rule 29 (groupBlockForward)


state 178

   34 block: groupVariableDeclarations . compoundStatement

    TOKEN_BEGIN  shift, and go to state 38

    compoundStatement  go to state 183


state 179

   24 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@2 TOKEN_LPAR formalParameterList $@3 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 184


state 180

   28 groupBlockForward: block .

    $default  reduce using rule 28 (groupBlockForward)


state 181

   52 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression $@7 . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 185


state 182

   27 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@4 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@5 TOKEN_SEMICOLON . groupBlockForward TOKEN_SEMICOLON

    TOKEN_FORWARD  shift, and go to state 177
    TOKEN_VAR      shift, and go to state 13

    $default  reduce using rule 6 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 178
    variableDeclarations       go to state 15
    groupBlockForward          go to state 186
    block                      go to state 180


state 183

   34 block: groupVariableDeclarations compoundStatement .

    $default  reduce using rule 34 (block)


state 184

   24 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID $@2 TOKEN_LPAR formalParameterList $@3 TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON .

    $default  reduce using rule 24 (procedureDeclaration)


state 185

   52 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression $@7 TOKEN_DO . statement

    TOKEN_BEGIN  shift, and go to state 38
    TOKEN_FOR    shift, and go to state 49
    TOKEN_IF     shift, and go to state 50
    TOKEN_WHILE  shift, and go to state 51
    TOKEN_ID     shift, and go to state 52

    $default  reduce using rule 43 (simpleStatement)

    compoundStatement      go to state 53
    statement              go to state 187
    groupSimStruStatement  go to state 56
    simpleStatement        go to state 57
    assignmentStatement    go to state 58
    procedureStatement     go to state 59
    structuredStatement    go to state 60
    variable               go to state 61


state 186

   27 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@4 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@5 TOKEN_SEMICOLON groupBlockForward . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 188


state 187

   52 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression $@7 TOKEN_DO statement .

    $default  reduce using rule 52 (structuredStatement)


state 188

   27 functionDeclaration: TOKEN_FUNCTION TOKEN_ID $@4 TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType $@5 TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON .

    $default  reduce using rule 27 (functionDeclaration)
