Terminals unused in grammar

   TOKEN_COMMENT
   TOKEN_DIVIDE
   TOKEN_DECIMAL
   TOKEN_EXPNUM


State 146 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    2 groupTypeDefinitions: typeDefinitions
    3                     | /* empty */

    4 groupVariableDeclarations: variableDeclarations
    5                          | /* empty */

    6 groupSubprogramDeclarations: subprogramDeclarations
    7                            | /* empty */

    8 typeDefinitions: TOKEN_TYPE typeDefinitionList

    9 typeDefinitionList: typeDefinitionList typeDefinition
   10                   | typeDefinition

   11 variableDeclarations: TOKEN_VAR variableDeclarationList

   12 variableDeclarationList: variableDeclarationList variableDeclaration
   13                        | variableDeclaration

   14 subprogramDeclarations: subprogramDeclarationList

   15 subprogramDeclarationList: subprogramDeclarationList procedureDeclaration
   16                          | subprogramDeclarationList functionDeclaration
   17                          | procedureDeclaration
   18                          | functionDeclaration

   19 typeDefinition: TOKEN_ID TOKEN_EQ type TOKEN_SEMICOLON

   20 variableDeclaration: identifierList TOKEN_COLON type TOKEN_SEMICOLON

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

   23 groupBlockForward: block
   24                  | TOKEN_FORWARD

   25 formalParameterList: formalParamSeq
   26                    | /* empty */

   27 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type
   28               | identifierList TOKEN_COLON type

   29 block: groupVariableDeclarations compoundStatement

   30 compoundStatement: TOKEN_BEGIN statementSequence TOKEN_END

   31 statementSequence: statementSequence TOKEN_SEMICOLON statement
   32                  | statement

   33 statement: groupSimStruStatement

   34 groupSimStruStatement: simpleStatement
   35                      | structuredStatement

   36 simpleStatement: assignmentStatement
   37                | procedureStatement
   38                | /* empty */

   39 assignmentStatement: variable TOKEN_ASSIGN expression

   40 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR

   41 structuredStatement: compoundStatement
   42                    | TOKEN_IF expression TOKEN_THEN statement
   43                    | TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE statement
   44                    | TOKEN_WHILE expression TOKEN_DO statement
   45                    | TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression TOKEN_DO statement

   46 type: TOKEN_ID
   47     | TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type
   48     | TOKEN_RECORD fieldList TOKEN_END

   49 resultType: TOKEN_ID

   50 fieldList: fieldListSeq
   51          | /* empty */

   52 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type
   53             | identifierList TOKEN_COLON type

   54 constant: TOKEN_INT
   55         | sign TOKEN_INT

   56 expression: simpleExpression groupRelOpSimExpr

   57 groupRelOpSimExpr: relationalOp simpleExpression
   58                  | /* empty */

   59 relationalOp: TOKEN_LT
   60             | TOKEN_LE
   61             | TOKEN_GT
   62             | TOKEN_GE
   63             | TOKEN_NOTEQ
   64             | TOKEN_EQ

   65 simpleExpression: sign term
   66                 | term
   67                 | simpleExpression addOp term

   68 addOp: TOKEN_PLUS
   69      | TOKEN_MINUS
   70      | TOKEN_OR

   71 term: term mulOp factor
   72     | factor

   73 mulOp: TOKEN_MULTIPLY
   74      | TOKEN_DIV
   75      | TOKEN_MOD
   76      | TOKEN_AND

   77 factor: TOKEN_INT
   78       | TOKEN_STR
   79       | variable
   80       | functionReference
   81       | TOKEN_NOT factor
   82       | TOKEN_LPAR expression TOKEN_RPAR

   83 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR

   84 variable: TOKEN_ID componentSelection

   85 componentSelection: TOKEN_DOT TOKEN_ID componentSelection
   86                   | TOKEN_LBRACKET expression TOKEN_RBRACKET componentSelection
   87                   | /* empty */

   88 actualParameterList: expressionList
   89                    | /* empty */

   90 expressionList: expressionList TOKEN_COMMAS expression
   91               | expression

   92 identifierList: identifierList TOKEN_COMMAS TOKEN_ID
   93               | TOKEN_ID

   94 sign: TOKEN_PLUS
   95     | TOKEN_MINUS


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_COMMENT (258)
TOKEN_STR (259) 78
TOKEN_AND (260) 76
TOKEN_BEGIN (261) 30
TOKEN_FORWARD (262) 24
TOKEN_DIV (263) 74
TOKEN_DO (264) 44 45
TOKEN_ELSE (265) 43
TOKEN_END (266) 30 48
TOKEN_FOR (267) 45
TOKEN_FUNCTION (268) 22
TOKEN_IF (269) 42 43
TOKEN_ARRAY (270) 47
TOKEN_MOD (271) 75
TOKEN_NOT (272) 81
TOKEN_OF (273) 47
TOKEN_OR (274) 70
TOKEN_PROCEDURE (275) 21
TOKEN_PROGRAM (276) 1
TOKEN_RECORD (277) 48
TOKEN_THEN (278) 42 43
TOKEN_TO (279) 45
TOKEN_TYPE (280) 8
TOKEN_VAR (281) 11
TOKEN_WHILE (282) 44
TOKEN_PLUS (283) 68 94
TOKEN_MINUS (284) 69 95
TOKEN_MULTIPLY (285) 73
TOKEN_DIVIDE (286)
TOKEN_EQ (287) 19 64
TOKEN_LT (288) 59
TOKEN_LE (289) 60
TOKEN_GT (290) 61
TOKEN_GE (291) 62
TOKEN_NOTEQ (292) 63
TOKEN_ID (293) 1 19 21 22 40 45 46 49 83 84 85 92 93
TOKEN_INT (294) 54 55 77
TOKEN_DECIMAL (295)
TOKEN_EXPNUM (296)
TOKEN_DOT (297) 1 85
TOKEN_COMMAS (298) 90 92
TOKEN_COLON (299) 20 22 27 28 52 53
TOKEN_SEMICOLON (300) 1 19 20 21 22 27 31 52
TOKEN_ASSIGN (301) 39 45
TOKEN_RANGE (302) 47
TOKEN_LPAR (303) 21 22 40 82 83
TOKEN_RPAR (304) 21 22 40 82 83
TOKEN_LBRACKET (305) 47 86
TOKEN_RBRACKET (306) 47 86
UMINUS (307)
UPLUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
groupTypeDefinitions (56)
    on left: 2 3, on right: 1
groupVariableDeclarations (57)
    on left: 4 5, on right: 1 29
groupSubprogramDeclarations (58)
    on left: 6 7, on right: 1
typeDefinitions (59)
    on left: 8, on right: 2
typeDefinitionList (60)
    on left: 9 10, on right: 8 9
variableDeclarations (61)
    on left: 11, on right: 4
variableDeclarationList (62)
    on left: 12 13, on right: 11 12
subprogramDeclarations (63)
    on left: 14, on right: 6
subprogramDeclarationList (64)
    on left: 15 16 17 18, on right: 14 15 16
typeDefinition (65)
    on left: 19, on right: 9 10
variableDeclaration (66)
    on left: 20, on right: 12 13
procedureDeclaration (67)
    on left: 21, on right: 15 17
functionDeclaration (68)
    on left: 22, on right: 16 18
groupBlockForward (69)
    on left: 23 24, on right: 21 22
formalParameterList (70)
    on left: 25 26, on right: 21 22
formalParamSeq (71)
    on left: 27 28, on right: 25 27
block (72)
    on left: 29, on right: 23
compoundStatement (73)
    on left: 30, on right: 1 29 41
statementSequence (74)
    on left: 31 32, on right: 30 31
statement (75)
    on left: 33, on right: 31 32 42 43 44 45
groupSimStruStatement (76)
    on left: 34 35, on right: 33
simpleStatement (77)
    on left: 36 37 38, on right: 34
assignmentStatement (78)
    on left: 39, on right: 36
procedureStatement (79)
    on left: 40, on right: 37
structuredStatement (80)
    on left: 41 42 43 44 45, on right: 35
type (81)
    on left: 46 47 48, on right: 19 20 27 28 47 52 53
resultType (82)
    on left: 49, on right: 22
fieldList (83)
    on left: 50 51, on right: 48
fieldListSeq (84)
    on left: 52 53, on right: 50 52
constant (85)
    on left: 54 55, on right: 47
expression (86)
    on left: 56, on right: 39 42 43 44 45 82 86 90 91
groupRelOpSimExpr (87)
    on left: 57 58, on right: 56
relationalOp (88)
    on left: 59 60 61 62 63 64, on right: 57
simpleExpression (89)
    on left: 65 66 67, on right: 56 57 67
addOp (90)
    on left: 68 69 70, on right: 67
term (91)
    on left: 71 72, on right: 65 66 67 71
mulOp (92)
    on left: 73 74 75 76, on right: 71
factor (93)
    on left: 77 78 79 80 81 82, on right: 71 72 81
functionReference (94)
    on left: 83, on right: 80
variable (95)
    on left: 84, on right: 39 79
componentSelection (96)
    on left: 85 86 87, on right: 84 85 86
actualParameterList (97)
    on left: 88 89, on right: 40 83
expressionList (98)
    on left: 90 91, on right: 88 90
identifierList (99)
    on left: 92 93, on right: 20 27 28 52 53 92
sign (100)
    on left: 94 95, on right: 55 65


state 0

    0 $accept: . program $end

    TOKEN_PROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    1 program: TOKEN_PROGRAM . TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_ID  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: TOKEN_PROGRAM TOKEN_ID . TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_SEMICOLON  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON . groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_TYPE  shift, and go to state 6

    $default  reduce using rule 3 (groupTypeDefinitions)

    groupTypeDefinitions  go to state 7
    typeDefinitions       go to state 8


state 6

    8 typeDefinitions: TOKEN_TYPE . typeDefinitionList

    TOKEN_ID  shift, and go to state 9

    typeDefinitionList  go to state 10
    typeDefinition      go to state 11


state 7

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions . groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_VAR  shift, and go to state 12

    $default  reduce using rule 5 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 13
    variableDeclarations       go to state 14


state 8

    2 groupTypeDefinitions: typeDefinitions .

    $default  reduce using rule 2 (groupTypeDefinitions)


state 9

   19 typeDefinition: TOKEN_ID . TOKEN_EQ type TOKEN_SEMICOLON

    TOKEN_EQ  shift, and go to state 15


state 10

    8 typeDefinitions: TOKEN_TYPE typeDefinitionList .
    9 typeDefinitionList: typeDefinitionList . typeDefinition

    TOKEN_ID  shift, and go to state 9

    $default  reduce using rule 8 (typeDefinitions)

    typeDefinition  go to state 16


state 11

   10 typeDefinitionList: typeDefinition .

    $default  reduce using rule 10 (typeDefinitionList)


state 12

   11 variableDeclarations: TOKEN_VAR . variableDeclarationList

    TOKEN_ID  shift, and go to state 17

    variableDeclarationList  go to state 18
    variableDeclaration      go to state 19
    identifierList           go to state 20


state 13

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations . groupSubprogramDeclarations compoundStatement TOKEN_DOT

    TOKEN_FUNCTION   shift, and go to state 21
    TOKEN_PROCEDURE  shift, and go to state 22

    $default  reduce using rule 7 (groupSubprogramDeclarations)

    groupSubprogramDeclarations  go to state 23
    subprogramDeclarations       go to state 24
    subprogramDeclarationList    go to state 25
    procedureDeclaration         go to state 26
    functionDeclaration          go to state 27


state 14

    4 groupVariableDeclarations: variableDeclarations .

    $default  reduce using rule 4 (groupVariableDeclarations)


state 15

   19 typeDefinition: TOKEN_ID TOKEN_EQ . type TOKEN_SEMICOLON

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 31


state 16

    9 typeDefinitionList: typeDefinitionList typeDefinition .

    $default  reduce using rule 9 (typeDefinitionList)


state 17

   93 identifierList: TOKEN_ID .

    $default  reduce using rule 93 (identifierList)


state 18

   11 variableDeclarations: TOKEN_VAR variableDeclarationList .
   12 variableDeclarationList: variableDeclarationList . variableDeclaration

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 11 (variableDeclarations)

    variableDeclaration  go to state 32
    identifierList       go to state 20


state 19

   13 variableDeclarationList: variableDeclaration .

    $default  reduce using rule 13 (variableDeclarationList)


state 20

   20 variableDeclaration: identifierList . TOKEN_COLON type TOKEN_SEMICOLON
   92 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 34


state 21

   22 functionDeclaration: TOKEN_FUNCTION . TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 35


state 22

   21 procedureDeclaration: TOKEN_PROCEDURE . TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 36


state 23

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations . compoundStatement TOKEN_DOT

    TOKEN_BEGIN  shift, and go to state 37

    compoundStatement  go to state 38


state 24

    6 groupSubprogramDeclarations: subprogramDeclarations .

    $default  reduce using rule 6 (groupSubprogramDeclarations)


state 25

   14 subprogramDeclarations: subprogramDeclarationList .
   15 subprogramDeclarationList: subprogramDeclarationList . procedureDeclaration
   16                          | subprogramDeclarationList . functionDeclaration

    TOKEN_FUNCTION   shift, and go to state 21
    TOKEN_PROCEDURE  shift, and go to state 22

    $default  reduce using rule 14 (subprogramDeclarations)

    procedureDeclaration  go to state 39
    functionDeclaration   go to state 40


state 26

   17 subprogramDeclarationList: procedureDeclaration .

    $default  reduce using rule 17 (subprogramDeclarationList)


state 27

   18 subprogramDeclarationList: functionDeclaration .

    $default  reduce using rule 18 (subprogramDeclarationList)


state 28

   47 type: TOKEN_ARRAY . TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_LBRACKET  shift, and go to state 41


state 29

   48 type: TOKEN_RECORD . fieldList TOKEN_END

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 51 (fieldList)

    fieldList       go to state 42
    fieldListSeq    go to state 43
    identifierList  go to state 44


state 30

   46 type: TOKEN_ID .

    $default  reduce using rule 46 (type)


state 31

   19 typeDefinition: TOKEN_ID TOKEN_EQ type . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 45


state 32

   12 variableDeclarationList: variableDeclarationList variableDeclaration .

    $default  reduce using rule 12 (variableDeclarationList)


state 33

   92 identifierList: identifierList TOKEN_COMMAS . TOKEN_ID

    TOKEN_ID  shift, and go to state 46


state 34

   20 variableDeclaration: identifierList TOKEN_COLON . type TOKEN_SEMICOLON

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 47


state 35

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID . TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_LPAR  shift, and go to state 48


state 36

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID . TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_LPAR  shift, and go to state 49


state 37

   30 compoundStatement: TOKEN_BEGIN . statementSequence TOKEN_END

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 38 (simpleStatement)

    compoundStatement      go to state 54
    statementSequence      go to state 55
    statement              go to state 56
    groupSimStruStatement  go to state 57
    simpleStatement        go to state 58
    assignmentStatement    go to state 59
    procedureStatement     go to state 60
    structuredStatement    go to state 61
    variable               go to state 62


state 38

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement . TOKEN_DOT

    TOKEN_DOT  shift, and go to state 63


state 39

   15 subprogramDeclarationList: subprogramDeclarationList procedureDeclaration .

    $default  reduce using rule 15 (subprogramDeclarationList)


state 40

   16 subprogramDeclarationList: subprogramDeclarationList functionDeclaration .

    $default  reduce using rule 16 (subprogramDeclarationList)


state 41

   47 type: TOKEN_ARRAY TOKEN_LBRACKET . constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_PLUS   shift, and go to state 64
    TOKEN_MINUS  shift, and go to state 65
    TOKEN_INT    shift, and go to state 66

    constant  go to state 67
    sign      go to state 68


state 42

   48 type: TOKEN_RECORD fieldList . TOKEN_END

    TOKEN_END  shift, and go to state 69


state 43

   50 fieldList: fieldListSeq .
   52 fieldListSeq: fieldListSeq . TOKEN_SEMICOLON identifierList TOKEN_COLON type

    TOKEN_SEMICOLON  shift, and go to state 70

    $default  reduce using rule 50 (fieldList)


state 44

   53 fieldListSeq: identifierList . TOKEN_COLON type
   92 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 71


state 45

   19 typeDefinition: TOKEN_ID TOKEN_EQ type TOKEN_SEMICOLON .

    $default  reduce using rule 19 (typeDefinition)


state 46

   92 identifierList: identifierList TOKEN_COMMAS TOKEN_ID .

    $default  reduce using rule 92 (identifierList)


state 47

   20 variableDeclaration: identifierList TOKEN_COLON type . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 72


state 48

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR . formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 26 (formalParameterList)

    formalParameterList  go to state 73
    formalParamSeq       go to state 74
    identifierList       go to state 75


state 49

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR . formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 17

    $default  reduce using rule 26 (formalParameterList)

    formalParameterList  go to state 76
    formalParamSeq       go to state 74
    identifierList       go to state 75


state 50

   45 structuredStatement: TOKEN_FOR . TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression TOKEN_DO statement

    TOKEN_ID  shift, and go to state 77


state 51

   42 structuredStatement: TOKEN_IF . expression TOKEN_THEN statement
   43                    | TOKEN_IF . expression TOKEN_THEN statement TOKEN_ELSE statement

    TOKEN_STR    shift, and go to state 78
    TOKEN_NOT    shift, and go to state 79
    TOKEN_PLUS   shift, and go to state 64
    TOKEN_MINUS  shift, and go to state 65
    TOKEN_ID     shift, and go to state 80
    TOKEN_INT    shift, and go to state 81
    TOKEN_LPAR   shift, and go to state 82

    expression         go to state 83
    simpleExpression   go to state 84
    term               go to state 85
    factor             go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 52

   44 structuredStatement: TOKEN_WHILE . expression TOKEN_DO statement

    TOKEN_STR    shift, and go to state 78
    TOKEN_NOT    shift, and go to state 79
    TOKEN_PLUS   shift, and go to state 64
    TOKEN_MINUS  shift, and go to state 65
    TOKEN_ID     shift, and go to state 80
    TOKEN_INT    shift, and go to state 81
    TOKEN_LPAR   shift, and go to state 82

    expression         go to state 90
    simpleExpression   go to state 84
    term               go to state 85
    factor             go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 53

   40 procedureStatement: TOKEN_ID . TOKEN_LPAR actualParameterList TOKEN_RPAR
   84 variable: TOKEN_ID . componentSelection

    TOKEN_DOT       shift, and go to state 91
    TOKEN_LPAR      shift, and go to state 92
    TOKEN_LBRACKET  shift, and go to state 93

    $default  reduce using rule 87 (componentSelection)

    componentSelection  go to state 94


state 54

   41 structuredStatement: compoundStatement .

    $default  reduce using rule 41 (structuredStatement)


state 55

   30 compoundStatement: TOKEN_BEGIN statementSequence . TOKEN_END
   31 statementSequence: statementSequence . TOKEN_SEMICOLON statement

    TOKEN_END        shift, and go to state 95
    TOKEN_SEMICOLON  shift, and go to state 96


state 56

   32 statementSequence: statement .

    $default  reduce using rule 32 (statementSequence)


state 57

   33 statement: groupSimStruStatement .

    $default  reduce using rule 33 (statement)


state 58

   34 groupSimStruStatement: simpleStatement .

    $default  reduce using rule 34 (groupSimStruStatement)


state 59

   36 simpleStatement: assignmentStatement .

    $default  reduce using rule 36 (simpleStatement)


state 60

   37 simpleStatement: procedureStatement .

    $default  reduce using rule 37 (simpleStatement)


state 61

   35 groupSimStruStatement: structuredStatement .

    $default  reduce using rule 35 (groupSimStruStatement)


state 62

   39 assignmentStatement: variable . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 97


state 63

    1 program: TOKEN_PROGRAM TOKEN_ID TOKEN_SEMICOLON groupTypeDefinitions groupVariableDeclarations groupSubprogramDeclarations compoundStatement TOKEN_DOT .

    $default  reduce using rule 1 (program)


state 64

   94 sign: TOKEN_PLUS .

    $default  reduce using rule 94 (sign)


state 65

   95 sign: TOKEN_MINUS .

    $default  reduce using rule 95 (sign)


state 66

   54 constant: TOKEN_INT .

    $default  reduce using rule 54 (constant)


state 67

   47 type: TOKEN_ARRAY TOKEN_LBRACKET constant . TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_RANGE  shift, and go to state 98


state 68

   55 constant: sign . TOKEN_INT

    TOKEN_INT  shift, and go to state 99


state 69

   48 type: TOKEN_RECORD fieldList TOKEN_END .

    $default  reduce using rule 48 (type)


state 70

   52 fieldListSeq: fieldListSeq TOKEN_SEMICOLON . identifierList TOKEN_COLON type

    TOKEN_ID  shift, and go to state 17

    identifierList  go to state 100


state 71

   53 fieldListSeq: identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 101


state 72

   20 variableDeclaration: identifierList TOKEN_COLON type TOKEN_SEMICOLON .

    $default  reduce using rule 20 (variableDeclaration)


state 73

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList . TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_RPAR  shift, and go to state 102


state 74

   25 formalParameterList: formalParamSeq .
   27 formalParamSeq: formalParamSeq . TOKEN_SEMICOLON identifierList TOKEN_COLON type

    TOKEN_SEMICOLON  shift, and go to state 103

    $default  reduce using rule 25 (formalParameterList)


state 75

   28 formalParamSeq: identifierList . TOKEN_COLON type
   92 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 104


state 76

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList . TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_RPAR  shift, and go to state 105


state 77

   45 structuredStatement: TOKEN_FOR TOKEN_ID . TOKEN_ASSIGN expression TOKEN_TO expression TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 106


state 78

   78 factor: TOKEN_STR .

    $default  reduce using rule 78 (factor)


state 79

   81 factor: TOKEN_NOT . factor

    TOKEN_STR   shift, and go to state 78
    TOKEN_NOT   shift, and go to state 79
    TOKEN_ID    shift, and go to state 80
    TOKEN_INT   shift, and go to state 81
    TOKEN_LPAR  shift, and go to state 82

    factor             go to state 107
    functionReference  go to state 87
    variable           go to state 88


state 80

   83 functionReference: TOKEN_ID . TOKEN_LPAR actualParameterList TOKEN_RPAR
   84 variable: TOKEN_ID . componentSelection

    TOKEN_DOT       shift, and go to state 91
    TOKEN_LPAR      shift, and go to state 108
    TOKEN_LBRACKET  shift, and go to state 93

    $default  reduce using rule 87 (componentSelection)

    componentSelection  go to state 94


state 81

   77 factor: TOKEN_INT .

    $default  reduce using rule 77 (factor)


state 82

   82 factor: TOKEN_LPAR . expression TOKEN_RPAR

    TOKEN_STR    shift, and go to state 78
    TOKEN_NOT    shift, and go to state 79
    TOKEN_PLUS   shift, and go to state 64
    TOKEN_MINUS  shift, and go to state 65
    TOKEN_ID     shift, and go to state 80
    TOKEN_INT    shift, and go to state 81
    TOKEN_LPAR   shift, and go to state 82

    expression         go to state 109
    simpleExpression   go to state 84
    term               go to state 85
    factor             go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 83

   42 structuredStatement: TOKEN_IF expression . TOKEN_THEN statement
   43                    | TOKEN_IF expression . TOKEN_THEN statement TOKEN_ELSE statement

    TOKEN_THEN  shift, and go to state 110


state 84

   56 expression: simpleExpression . groupRelOpSimExpr
   67 simpleExpression: simpleExpression . addOp term

    TOKEN_OR     shift, and go to state 111
    TOKEN_PLUS   shift, and go to state 112
    TOKEN_MINUS  shift, and go to state 113
    TOKEN_EQ     shift, and go to state 114
    TOKEN_LT     shift, and go to state 115
    TOKEN_LE     shift, and go to state 116
    TOKEN_GT     shift, and go to state 117
    TOKEN_GE     shift, and go to state 118
    TOKEN_NOTEQ  shift, and go to state 119

    $default  reduce using rule 58 (groupRelOpSimExpr)

    groupRelOpSimExpr  go to state 120
    relationalOp       go to state 121
    addOp              go to state 122


state 85

   66 simpleExpression: term .
   71 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 123
    TOKEN_DIV       shift, and go to state 124
    TOKEN_MOD       shift, and go to state 125
    TOKEN_MULTIPLY  shift, and go to state 126

    $default  reduce using rule 66 (simpleExpression)

    mulOp  go to state 127


state 86

   72 term: factor .

    $default  reduce using rule 72 (term)


state 87

   80 factor: functionReference .

    $default  reduce using rule 80 (factor)


state 88

   79 factor: variable .

    $default  reduce using rule 79 (factor)


state 89

   65 simpleExpression: sign . term

    TOKEN_STR   shift, and go to state 78
    TOKEN_NOT   shift, and go to state 79
    TOKEN_ID    shift, and go to state 80
    TOKEN_INT   shift, and go to state 81
    TOKEN_LPAR  shift, and go to state 82

    term               go to state 128
    factor             go to state 86
    functionReference  go to state 87
    variable           go to state 88


state 90

   44 structuredStatement: TOKEN_WHILE expression . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 129


state 91

   85 componentSelection: TOKEN_DOT . TOKEN_ID componentSelection

    TOKEN_ID  shift, and go to state 130


state 92

   40 procedureStatement: TOKEN_ID TOKEN_LPAR . actualParameterList TOKEN_RPAR

    TOKEN_STR    shift, and go to state 78
    TOKEN_NOT    shift, and go to state 79
    TOKEN_PLUS   shift, and go to state 64
    TOKEN_MINUS  shift, and go to state 65
    TOKEN_ID     shift, and go to state 80
    TOKEN_INT    shift, and go to state 81
    TOKEN_LPAR   shift, and go to state 82

    $default  reduce using rule 89 (actualParameterList)

    expression           go to state 131
    simpleExpression     go to state 84
    term                 go to state 85
    factor               go to state 86
    functionReference    go to state 87
    variable             go to state 88
    actualParameterList  go to state 132
    expressionList       go to state 133
    sign                 go to state 89


state 93

   86 componentSelection: TOKEN_LBRACKET . expression TOKEN_RBRACKET componentSelection

    TOKEN_STR    shift, and go to state 78
    TOKEN_NOT    shift, and go to state 79
    TOKEN_PLUS   shift, and go to state 64
    TOKEN_MINUS  shift, and go to state 65
    TOKEN_ID     shift, and go to state 80
    TOKEN_INT    shift, and go to state 81
    TOKEN_LPAR   shift, and go to state 82

    expression         go to state 134
    simpleExpression   go to state 84
    term               go to state 85
    factor             go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 94

   84 variable: TOKEN_ID componentSelection .

    $default  reduce using rule 84 (variable)


state 95

   30 compoundStatement: TOKEN_BEGIN statementSequence TOKEN_END .

    $default  reduce using rule 30 (compoundStatement)


state 96

   31 statementSequence: statementSequence TOKEN_SEMICOLON . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 38 (simpleStatement)

    compoundStatement      go to state 54
    statement              go to state 135
    groupSimStruStatement  go to state 57
    simpleStatement        go to state 58
    assignmentStatement    go to state 59
    procedureStatement     go to state 60
    structuredStatement    go to state 61
    variable               go to state 62


state 97

   39 assignmentStatement: variable TOKEN_ASSIGN . expression

    TOKEN_STR    shift, and go to state 78
    TOKEN_NOT    shift, and go to state 79
    TOKEN_PLUS   shift, and go to state 64
    TOKEN_MINUS  shift, and go to state 65
    TOKEN_ID     shift, and go to state 80
    TOKEN_INT    shift, and go to state 81
    TOKEN_LPAR   shift, and go to state 82

    expression         go to state 136
    simpleExpression   go to state 84
    term               go to state 85
    factor             go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 98

   47 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE . constant TOKEN_RBRACKET TOKEN_OF type

    TOKEN_PLUS   shift, and go to state 64
    TOKEN_MINUS  shift, and go to state 65
    TOKEN_INT    shift, and go to state 66

    constant  go to state 137
    sign      go to state 68


state 99

   55 constant: sign TOKEN_INT .

    $default  reduce using rule 55 (constant)


state 100

   52 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList . TOKEN_COLON type
   92 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 138


state 101

   53 fieldListSeq: identifierList TOKEN_COLON type .

    $default  reduce using rule 53 (fieldListSeq)


state 102

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR . TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_COLON  shift, and go to state 139


state 103

   27 formalParamSeq: formalParamSeq TOKEN_SEMICOLON . identifierList TOKEN_COLON type

    TOKEN_ID  shift, and go to state 17

    identifierList  go to state 140


state 104

   28 formalParamSeq: identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 141


state 105

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR . TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 142


state 106

   45 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN . expression TOKEN_TO expression TOKEN_DO statement

    TOKEN_STR    shift, and go to state 78
    TOKEN_NOT    shift, and go to state 79
    TOKEN_PLUS   shift, and go to state 64
    TOKEN_MINUS  shift, and go to state 65
    TOKEN_ID     shift, and go to state 80
    TOKEN_INT    shift, and go to state 81
    TOKEN_LPAR   shift, and go to state 82

    expression         go to state 143
    simpleExpression   go to state 84
    term               go to state 85
    factor             go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 107

   81 factor: TOKEN_NOT factor .

    $default  reduce using rule 81 (factor)


state 108

   83 functionReference: TOKEN_ID TOKEN_LPAR . actualParameterList TOKEN_RPAR

    TOKEN_STR    shift, and go to state 78
    TOKEN_NOT    shift, and go to state 79
    TOKEN_PLUS   shift, and go to state 64
    TOKEN_MINUS  shift, and go to state 65
    TOKEN_ID     shift, and go to state 80
    TOKEN_INT    shift, and go to state 81
    TOKEN_LPAR   shift, and go to state 82

    $default  reduce using rule 89 (actualParameterList)

    expression           go to state 131
    simpleExpression     go to state 84
    term                 go to state 85
    factor               go to state 86
    functionReference    go to state 87
    variable             go to state 88
    actualParameterList  go to state 144
    expressionList       go to state 133
    sign                 go to state 89


state 109

   82 factor: TOKEN_LPAR expression . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 145


state 110

   42 structuredStatement: TOKEN_IF expression TOKEN_THEN . statement
   43                    | TOKEN_IF expression TOKEN_THEN . statement TOKEN_ELSE statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 38 (simpleStatement)

    compoundStatement      go to state 54
    statement              go to state 146
    groupSimStruStatement  go to state 57
    simpleStatement        go to state 58
    assignmentStatement    go to state 59
    procedureStatement     go to state 60
    structuredStatement    go to state 61
    variable               go to state 62


state 111

   70 addOp: TOKEN_OR .

    $default  reduce using rule 70 (addOp)


state 112

   68 addOp: TOKEN_PLUS .

    $default  reduce using rule 68 (addOp)


state 113

   69 addOp: TOKEN_MINUS .

    $default  reduce using rule 69 (addOp)


state 114

   64 relationalOp: TOKEN_EQ .

    $default  reduce using rule 64 (relationalOp)


state 115

   59 relationalOp: TOKEN_LT .

    $default  reduce using rule 59 (relationalOp)


state 116

   60 relationalOp: TOKEN_LE .

    $default  reduce using rule 60 (relationalOp)


state 117

   61 relationalOp: TOKEN_GT .

    $default  reduce using rule 61 (relationalOp)


state 118

   62 relationalOp: TOKEN_GE .

    $default  reduce using rule 62 (relationalOp)


state 119

   63 relationalOp: TOKEN_NOTEQ .

    $default  reduce using rule 63 (relationalOp)


state 120

   56 expression: simpleExpression groupRelOpSimExpr .

    $default  reduce using rule 56 (expression)


state 121

   57 groupRelOpSimExpr: relationalOp . simpleExpression

    TOKEN_STR    shift, and go to state 78
    TOKEN_NOT    shift, and go to state 79
    TOKEN_PLUS   shift, and go to state 64
    TOKEN_MINUS  shift, and go to state 65
    TOKEN_ID     shift, and go to state 80
    TOKEN_INT    shift, and go to state 81
    TOKEN_LPAR   shift, and go to state 82

    simpleExpression   go to state 147
    term               go to state 85
    factor             go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 122

   67 simpleExpression: simpleExpression addOp . term

    TOKEN_STR   shift, and go to state 78
    TOKEN_NOT   shift, and go to state 79
    TOKEN_ID    shift, and go to state 80
    TOKEN_INT   shift, and go to state 81
    TOKEN_LPAR  shift, and go to state 82

    term               go to state 148
    factor             go to state 86
    functionReference  go to state 87
    variable           go to state 88


state 123

   76 mulOp: TOKEN_AND .

    $default  reduce using rule 76 (mulOp)


state 124

   74 mulOp: TOKEN_DIV .

    $default  reduce using rule 74 (mulOp)


state 125

   75 mulOp: TOKEN_MOD .

    $default  reduce using rule 75 (mulOp)


state 126

   73 mulOp: TOKEN_MULTIPLY .

    $default  reduce using rule 73 (mulOp)


state 127

   71 term: term mulOp . factor

    TOKEN_STR   shift, and go to state 78
    TOKEN_NOT   shift, and go to state 79
    TOKEN_ID    shift, and go to state 80
    TOKEN_INT   shift, and go to state 81
    TOKEN_LPAR  shift, and go to state 82

    factor             go to state 149
    functionReference  go to state 87
    variable           go to state 88


state 128

   65 simpleExpression: sign term .
   71 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 123
    TOKEN_DIV       shift, and go to state 124
    TOKEN_MOD       shift, and go to state 125
    TOKEN_MULTIPLY  shift, and go to state 126

    $default  reduce using rule 65 (simpleExpression)

    mulOp  go to state 127


state 129

   44 structuredStatement: TOKEN_WHILE expression TOKEN_DO . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 38 (simpleStatement)

    compoundStatement      go to state 54
    statement              go to state 150
    groupSimStruStatement  go to state 57
    simpleStatement        go to state 58
    assignmentStatement    go to state 59
    procedureStatement     go to state 60
    structuredStatement    go to state 61
    variable               go to state 62


state 130

   85 componentSelection: TOKEN_DOT TOKEN_ID . componentSelection

    TOKEN_DOT       shift, and go to state 91
    TOKEN_LBRACKET  shift, and go to state 93

    $default  reduce using rule 87 (componentSelection)

    componentSelection  go to state 151


state 131

   91 expressionList: expression .

    $default  reduce using rule 91 (expressionList)


state 132

   40 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 152


state 133

   88 actualParameterList: expressionList .
   90 expressionList: expressionList . TOKEN_COMMAS expression

    TOKEN_COMMAS  shift, and go to state 153

    $default  reduce using rule 88 (actualParameterList)


state 134

   86 componentSelection: TOKEN_LBRACKET expression . TOKEN_RBRACKET componentSelection

    TOKEN_RBRACKET  shift, and go to state 154


state 135

   31 statementSequence: statementSequence TOKEN_SEMICOLON statement .

    $default  reduce using rule 31 (statementSequence)


state 136

   39 assignmentStatement: variable TOKEN_ASSIGN expression .

    $default  reduce using rule 39 (assignmentStatement)


state 137

   47 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant . TOKEN_RBRACKET TOKEN_OF type

    TOKEN_RBRACKET  shift, and go to state 155


state 138

   52 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 156


state 139

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON . resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_ID  shift, and go to state 157

    resultType  go to state 158


state 140

   27 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList . TOKEN_COLON type
   92 identifierList: identifierList . TOKEN_COMMAS TOKEN_ID

    TOKEN_COMMAS  shift, and go to state 33
    TOKEN_COLON   shift, and go to state 159


state 141

   28 formalParamSeq: identifierList TOKEN_COLON type .

    $default  reduce using rule 28 (formalParamSeq)


state 142

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON . groupBlockForward TOKEN_SEMICOLON

    TOKEN_FORWARD  shift, and go to state 160
    TOKEN_VAR      shift, and go to state 12

    $default  reduce using rule 5 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 161
    variableDeclarations       go to state 14
    groupBlockForward          go to state 162
    block                      go to state 163


state 143

   45 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression . TOKEN_TO expression TOKEN_DO statement

    TOKEN_TO  shift, and go to state 164


state 144

   83 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 165


state 145

   82 factor: TOKEN_LPAR expression TOKEN_RPAR .

    $default  reduce using rule 82 (factor)


state 146

   42 structuredStatement: TOKEN_IF expression TOKEN_THEN statement .
   43                    | TOKEN_IF expression TOKEN_THEN statement . TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 166

    TOKEN_ELSE  [reduce using rule 42 (structuredStatement)]
    $default    reduce using rule 42 (structuredStatement)


state 147

   57 groupRelOpSimExpr: relationalOp simpleExpression .
   67 simpleExpression: simpleExpression . addOp term

    TOKEN_OR     shift, and go to state 111
    TOKEN_PLUS   shift, and go to state 112
    TOKEN_MINUS  shift, and go to state 113

    $default  reduce using rule 57 (groupRelOpSimExpr)

    addOp  go to state 122


state 148

   67 simpleExpression: simpleExpression addOp term .
   71 term: term . mulOp factor

    TOKEN_AND       shift, and go to state 123
    TOKEN_DIV       shift, and go to state 124
    TOKEN_MOD       shift, and go to state 125
    TOKEN_MULTIPLY  shift, and go to state 126

    $default  reduce using rule 67 (simpleExpression)

    mulOp  go to state 127


state 149

   71 term: term mulOp factor .

    $default  reduce using rule 71 (term)


state 150

   44 structuredStatement: TOKEN_WHILE expression TOKEN_DO statement .

    $default  reduce using rule 44 (structuredStatement)


state 151

   85 componentSelection: TOKEN_DOT TOKEN_ID componentSelection .

    $default  reduce using rule 85 (componentSelection)


state 152

   40 procedureStatement: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR .

    $default  reduce using rule 40 (procedureStatement)


state 153

   90 expressionList: expressionList TOKEN_COMMAS . expression

    TOKEN_STR    shift, and go to state 78
    TOKEN_NOT    shift, and go to state 79
    TOKEN_PLUS   shift, and go to state 64
    TOKEN_MINUS  shift, and go to state 65
    TOKEN_ID     shift, and go to state 80
    TOKEN_INT    shift, and go to state 81
    TOKEN_LPAR   shift, and go to state 82

    expression         go to state 167
    simpleExpression   go to state 84
    term               go to state 85
    factor             go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 154

   86 componentSelection: TOKEN_LBRACKET expression TOKEN_RBRACKET . componentSelection

    TOKEN_DOT       shift, and go to state 91
    TOKEN_LBRACKET  shift, and go to state 93

    $default  reduce using rule 87 (componentSelection)

    componentSelection  go to state 168


state 155

   47 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET . TOKEN_OF type

    TOKEN_OF  shift, and go to state 169


state 156

   52 fieldListSeq: fieldListSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type .

    $default  reduce using rule 52 (fieldListSeq)


state 157

   49 resultType: TOKEN_ID .

    $default  reduce using rule 49 (resultType)


state 158

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType . TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 170


state 159

   27 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 171


state 160

   24 groupBlockForward: TOKEN_FORWARD .

    $default  reduce using rule 24 (groupBlockForward)


state 161

   29 block: groupVariableDeclarations . compoundStatement

    TOKEN_BEGIN  shift, and go to state 37

    compoundStatement  go to state 172


state 162

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 173


state 163

   23 groupBlockForward: block .

    $default  reduce using rule 23 (groupBlockForward)


state 164

   45 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO . expression TOKEN_DO statement

    TOKEN_STR    shift, and go to state 78
    TOKEN_NOT    shift, and go to state 79
    TOKEN_PLUS   shift, and go to state 64
    TOKEN_MINUS  shift, and go to state 65
    TOKEN_ID     shift, and go to state 80
    TOKEN_INT    shift, and go to state 81
    TOKEN_LPAR   shift, and go to state 82

    expression         go to state 174
    simpleExpression   go to state 84
    term               go to state 85
    factor             go to state 86
    functionReference  go to state 87
    variable           go to state 88
    sign               go to state 89


state 165

   83 functionReference: TOKEN_ID TOKEN_LPAR actualParameterList TOKEN_RPAR .

    $default  reduce using rule 83 (functionReference)


state 166

   43 structuredStatement: TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 38 (simpleStatement)

    compoundStatement      go to state 54
    statement              go to state 175
    groupSimStruStatement  go to state 57
    simpleStatement        go to state 58
    assignmentStatement    go to state 59
    procedureStatement     go to state 60
    structuredStatement    go to state 61
    variable               go to state 62


state 167

   90 expressionList: expressionList TOKEN_COMMAS expression .

    $default  reduce using rule 90 (expressionList)


state 168

   86 componentSelection: TOKEN_LBRACKET expression TOKEN_RBRACKET componentSelection .

    $default  reduce using rule 86 (componentSelection)


state 169

   47 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF . type

    TOKEN_ARRAY   shift, and go to state 28
    TOKEN_RECORD  shift, and go to state 29
    TOKEN_ID      shift, and go to state 30

    type  go to state 176


state 170

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON . groupBlockForward TOKEN_SEMICOLON

    TOKEN_FORWARD  shift, and go to state 160
    TOKEN_VAR      shift, and go to state 12

    $default  reduce using rule 5 (groupVariableDeclarations)

    groupVariableDeclarations  go to state 161
    variableDeclarations       go to state 14
    groupBlockForward          go to state 177
    block                      go to state 163


state 171

   27 formalParamSeq: formalParamSeq TOKEN_SEMICOLON identifierList TOKEN_COLON type .

    $default  reduce using rule 27 (formalParamSeq)


state 172

   29 block: groupVariableDeclarations compoundStatement .

    $default  reduce using rule 29 (block)


state 173

   21 procedureDeclaration: TOKEN_PROCEDURE TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON .

    $default  reduce using rule 21 (procedureDeclaration)


state 174

   45 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 178


state 175

   43 structuredStatement: TOKEN_IF expression TOKEN_THEN statement TOKEN_ELSE statement .

    $default  reduce using rule 43 (structuredStatement)


state 176

   47 type: TOKEN_ARRAY TOKEN_LBRACKET constant TOKEN_RANGE constant TOKEN_RBRACKET TOKEN_OF type .

    $default  reduce using rule 47 (type)


state 177

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 179


state 178

   45 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression TOKEN_DO . statement

    TOKEN_BEGIN  shift, and go to state 37
    TOKEN_FOR    shift, and go to state 50
    TOKEN_IF     shift, and go to state 51
    TOKEN_WHILE  shift, and go to state 52
    TOKEN_ID     shift, and go to state 53

    $default  reduce using rule 38 (simpleStatement)

    compoundStatement      go to state 54
    statement              go to state 180
    groupSimStruStatement  go to state 57
    simpleStatement        go to state 58
    assignmentStatement    go to state 59
    procedureStatement     go to state 60
    structuredStatement    go to state 61
    variable               go to state 62


state 179

   22 functionDeclaration: TOKEN_FUNCTION TOKEN_ID TOKEN_LPAR formalParameterList TOKEN_RPAR TOKEN_COLON resultType TOKEN_SEMICOLON groupBlockForward TOKEN_SEMICOLON .

    $default  reduce using rule 22 (functionDeclaration)


state 180

   45 structuredStatement: TOKEN_FOR TOKEN_ID TOKEN_ASSIGN expression TOKEN_TO expression TOKEN_DO statement .

    $default  reduce using rule 45 (structuredStatement)
